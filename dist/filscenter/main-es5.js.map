{"version":3,"sources":["webpack:///src/app/rest/components/usuario/usuario-add/usuario-add.component.ts","webpack:///src/app/rest/components/usuario/usuario-add/usuario-add.component.html","webpack:///src/app/rest/components/direccion/direccion-list/direccion-list.component.ts","webpack:///src/app/rest/components/direccion/direccion-list/direccion-list.component.html","webpack:///src/app/shared/models/servicio.ts","webpack:///src/app/core/services/helper.service.ts","webpack:///src/app/cuenta/components/menu/menu.component.html","webpack:///src/app/cuenta/components/menu/menu.component.ts","webpack:///src/app/rest/services/taquilla/taquilla-service.service.ts","webpack:///src/app/pages/contacto/components/contenido/contenido.component.ts","webpack:///src/app/pages/contacto/components/contenido/contenido.component.html","webpack:///src/app/pages/aboutus/aboutus.module.ts","webpack:///src/app/shared/components/mapa/mapa.component.ts","webpack:///src/app/shared/components/mapa/mapa.component.html","webpack:///src/app/rest/services/localidad/localidad-service.service.ts","webpack:///src/app/pages/login/components/formulario/formulario.component.ts","webpack:///src/app/pages/login/components/formulario/formulario.component.html","webpack:///src/app/rest/services/suscripcion/suscripcion-service.service.ts","webpack:///src/app/pages/privacidad/pages/legal/legal.component.ts","webpack:///src/app/pages/privacidad/pages/legal/legal.component.html","webpack:///src/app/pages/aboutus/components/about/about.component.ts","webpack:///src/app/pages/aboutus/components/about/about.component.html","webpack:///src/app/cuenta/cuenta.module.ts","webpack:///src/app/rest/components/tipo_suscripcion/tipo-suscripcion-add/tipo-suscripcion-add.component.html","webpack:///src/app/rest/components/tipo_suscripcion/tipo-suscripcion-add/tipo-suscripcion-add.component.ts","webpack:///src/app/rest/components/taquilla/taquilla-list/taquilla-list.component.html","webpack:///src/app/rest/components/taquilla/taquilla-list/taquilla-list.component.ts","webpack:///src/app/pages/clases/clases.module.ts","webpack:///src/app/pages/aboutus/components/galeria/galeria.component.ts","webpack:///src/app/pages/aboutus/components/galeria/galeria.component.html","webpack:///src/app/rest/services/sala/sala-service.service.ts","webpack:///src/app/rest/components/ejercicio_serie/ejercicio-serie-add/ejercicio-serie-add.component.html","webpack:///src/app/rest/components/ejercicio_serie/ejercicio-serie-add/ejercicio-serie-add.component.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/rest/components/ejercicio_serie/ejercicio-serie-list/ejercicio-serie-list.component.html","webpack:///src/app/rest/components/ejercicio_serie/ejercicio-serie-list/ejercicio-serie-list.component.ts","webpack:///src/app/shared/components/call-to-action/call-to-action.component.ts","webpack:///src/app/shared/components/call-to-action/call-to-action.component.html","webpack:///src/app/rest/components/factura/factura-add/factura-add.component.html","webpack:///src/app/rest/components/factura/factura-add/factura-add.component.ts","webpack:///src/app/pages/recover/pages/recover/recover.component.ts","webpack:///src/app/pages/recover/pages/recover/recover.component.html","webpack:///src/app/pages/home/home.module.ts","webpack:///src/app/pages/aboutus/components/features/features.component.html","webpack:///src/app/pages/aboutus/components/features/features.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/rest/components/tipo_ejercicio/tipo-ejercicio-add/tipo-ejercicio-add.component.html","webpack:///src/app/rest/components/tipo_ejercicio/tipo-ejercicio-add/tipo-ejercicio-add.component.ts","webpack:///src/app/rest/components/tipo_suscripcion/tipo-suscripcion-list/tipo-suscripcion-list.component.html","webpack:///src/app/rest/components/tipo_suscripcion/tipo-suscripcion-list/tipo-suscripcion-list.component.ts","webpack:///src/app/pages/contacto/contacto.module.ts","webpack:///src/app/rest/components/localidad/localidad-list/localidad-list.component.html","webpack:///src/app/rest/components/localidad/localidad-list/localidad-list.component.ts","webpack:///src/app/rest/components/ejercicio/ejercicio-list/ejercicio-list.component.html","webpack:///src/app/rest/components/ejercicio/ejercicio-list/ejercicio-list.component.ts","webpack:///src/app/cuenta/components/inicio-horario/inicio-horario.component.ts","webpack:///src/app/cuenta/components/inicio-horario/inicio-horario.component.html","webpack:///src/app/pages/home/pages/home/home.component.ts","webpack:///src/app/pages/home/pages/home/home.component.html","webpack:///src/app/pages/privacidad/privacidad.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/signup/components/formulario/formulario.component.ts","webpack:///src/app/pages/signup/components/formulario/formulario.component.html","webpack:///src/app/cuenta/pages/perfil/perfil.component.ts","webpack:///src/app/cuenta/pages/perfil/perfil.component.html","webpack:///src/app/rest/components/actividad/actividad-add/actividad-add.component.html","webpack:///src/app/rest/components/actividad/actividad-add/actividad-add.component.ts","webpack:///src/app/rest/pipes/formatoHora.pipe.ts","webpack:///src/app/pages/horario/pages/horario/horario.component.html","webpack:///src/app/pages/horario/pages/horario/horario.component.ts","webpack:///src/app/pages/aboutus/components/callaction/callaction.component.ts","webpack:///src/app/pages/aboutus/components/callaction/callaction.component.html","webpack:///src/app/rest/services/tipo_ejercicio/tipo-ejercicio-service.service.ts","webpack:///src/app/rest/rest.module.ts","webpack:///src/app/rest/components/tipo_ejercicio/tipo-ejercicio-list/tipo-ejercicio-list.component.html","webpack:///src/app/rest/components/tipo_ejercicio/tipo-ejercicio-list/tipo-ejercicio-list.component.ts","webpack:///src/app/pages/aboutus/components/conceptos/conceptos.component.ts","webpack:///src/app/pages/aboutus/components/conceptos/conceptos.component.html","webpack:///src/app/rest/components/ejercicio/ejercicio-add/ejercicio-add.component.html","webpack:///src/app/rest/components/ejercicio/ejercicio-add/ejercicio-add.component.ts","webpack:///src/app/rest/components/taquilla/taquilla-add/taquilla-add.component.html","webpack:///src/app/rest/components/taquilla/taquilla-add/taquilla-add.component.ts","webpack:///src/app/rest/services/tipo_actividad/tipo-actividad-service.service.ts","webpack:///src/app/pages/clases/pages/clases/clases.component.ts","webpack:///src/app/pages/clases/pages/clases/clases.component.html","webpack:///src/app/shared/components/planes-suscripcion/planes-suscripcion.component.ts","webpack:///src/app/shared/components/planes-suscripcion/planes-suscripcion.component.html","webpack:///src/app/rest/services/tipo_suscripcion/tipo-suscripcion-service.service.ts","webpack:///src/app/core/helpers/auth.interceptor.ts","webpack:///src/app/shared/models/frase.motivadora.ts","webpack:///src/app/rest/components/reserva/reserva-add/reserva-add.component.html","webpack:///src/app/rest/components/reserva/reserva-add/reserva-add.component.ts","webpack:///src/app/core/components/header/header.component.html","webpack:///src/app/core/components/header/header.component.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/rest/components/tipo_actividad/tipo-actividad-add/tipo-actividad-add.component.html","webpack:///src/app/rest/components/tipo_actividad/tipo-actividad-add/tipo-actividad-add.component.ts","webpack:///src/app/rest/services/slot/slot-service.service.ts","webpack:///src/app/pages/horario/horario.module.ts","webpack:///src/app/rest/services/usuario/usuario-service.service.ts","webpack:///src/app/core/services/frase-motivadora.service.ts","webpack:///src/app/rest/services/rol/rol-service.service.ts","webpack:///src/app/pages/home/components/slider/slider.component.ts","webpack:///src/app/pages/home/components/slider/slider.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/components/topbar/topbar.component.html","webpack:///src/app/core/components/topbar/topbar.component.ts","webpack:///src/app/rest/components/tipo_actividad/tipo-actividad-list/tipo-actividad-list.component.html","webpack:///src/app/rest/components/tipo_actividad/tipo-actividad-list/tipo-actividad-list.component.ts","webpack:///src/app/pages/aboutus/components/testimonios/testimonios.component.ts","webpack:///src/app/pages/aboutus/components/testimonios/testimonios.component.html","webpack:///src/app/pages/home/components/monitors/monitors.component.ts","webpack:///src/app/pages/home/components/monitors/monitors.component.html","webpack:///src/app/core/services/token-storage.service.ts","webpack:///src/app/pages/signup/signup.module.ts","webpack:///src/app/cuenta/components/inicio-tablas/inicio-tablas.component.html","webpack:///src/app/cuenta/components/inicio-tablas/inicio-tablas.component.ts","webpack:///src/app/pages/login/pages/login/login.component.ts","webpack:///src/app/pages/login/pages/login/login.component.html","webpack:///src/app/rest/services/provincia/provincia-service.service.ts","webpack:///src/app/core/services/mail.service.ts","webpack:///src/app/rest/components/rol/rol-list/rol-list.component.html","webpack:///src/app/rest/components/rol/rol-list/rol-list.component.ts","webpack:///src/app/pages/home/components/map/map.component.ts","webpack:///src/app/pages/home/components/map/map.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/rest/components/slot/slot-list/slot-list.component.html","webpack:///src/app/rest/components/slot/slot-list/slot-list.component.ts","webpack:///src/app/pages/privacidad/pages/politica/politica.component.ts","webpack:///src/app/pages/privacidad/pages/politica/politica.component.html","webpack:///src/app/shared/pipes/formatoStringToHora.pipe.ts","webpack:///src/app/core/services/servicios.service.ts","webpack:///src/app/shared/components/actividad/actividad.component.ts","webpack:///src/app/shared/components/actividad/actividad.component.html","webpack:///src/app/cuenta/components/inicio/inicio.component.html","webpack:///src/app/cuenta/components/inicio/inicio.component.ts","webpack:///src/app/rest/components/direccion/direccion-add/direccion-add.component.html","webpack:///src/app/rest/components/direccion/direccion-add/direccion-add.component.ts","webpack:///src/app/rest/components/actividad/actividad-list/actividad-list.component.html","webpack:///src/app/rest/components/actividad/actividad-list/actividad-list.component.ts","webpack:///src/app/core/services/index.ts","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pages/aboutus/components/dondeestamos/dondeestamos.component.ts","webpack:///src/app/pages/aboutus/components/dondeestamos/dondeestamos.component.html","webpack:///src/app/pages/horario/componentes/tabla/tabla.component.ts","webpack:///src/app/pages/horario/componentes/tabla/tabla.component.html","webpack:///src/app/pages/aboutus/pages/aboutus/aboutus.component.ts","webpack:///src/app/pages/aboutus/pages/aboutus/aboutus.component.html","webpack:///src/app/pages/home/components/galeria/galeria.component.ts","webpack:///src/app/pages/home/components/galeria/galeria.component.html","webpack:///src/app/pages/home/components/goals/goals.component.ts","webpack:///src/app/pages/home/components/goals/goals.component.html","webpack:///src/app/cuenta/components/facturas/facturas.component.html","webpack:///src/app/cuenta/components/facturas/facturas.component.ts","webpack:///src/app/pages/home/components/horario/horario.component.ts","webpack:///src/app/pages/home/components/horario/horario.component.html","webpack:///src/app/pages/aboutus/components/monitores/monitores.component.ts","webpack:///src/app/pages/aboutus/components/monitores/monitores.component.html","webpack:///src/app/rest/services/tabla_ejercicio/tabla-ejercicio-service.service.ts","webpack:///src/app/shared/components/pagetitle/pagetitle.component.ts","webpack:///src/app/shared/components/pagetitle/pagetitle.component.html","webpack:///src/app/rest/services/ejercicio_serie/ejercicio-serie-service.service.ts","webpack:///src/app/rest/components/slot/slot-add/slot-add.component.html","webpack:///src/app/rest/components/slot/slot-add/slot-add.component.ts","webpack:///src/app/shared/components/servicio/servicio.component.ts","webpack:///src/app/shared/components/servicio/servicio.component.html","webpack:///src/app/cuenta/components/upload-image/upload-image.component.html","webpack:///src/app/cuenta/components/upload-image/upload-image.component.ts","webpack:///src/app/cuenta/cuenta-routing.module.ts","webpack:///src/app/rest/components/provincia/provincia-list/provincia-list.component.html","webpack:///src/app/rest/components/provincia/provincia-list/provincia-list.component.ts","webpack:///src/app/rest/components/sala/sala-add/sala-add.component.html","webpack:///src/app/rest/components/sala/sala-add/sala-add.component.ts","webpack:///src/app/pages/recover/components/formulario/formulario.component.html","webpack:///src/app/pages/recover/components/formulario/formulario.component.ts","webpack:///src/app/rest/services/actividad/actividad-service.service.ts","webpack:///src/app/rest/components/tabla_ejercicio/tabla-ejercicio-list/tabla-ejercicio-list.component.html","webpack:///src/app/rest/components/tabla_ejercicio/tabla-ejercicio-list/tabla-ejercicio-list.component.ts","webpack:///src/app/rest/components/tabla_ejercicio/tabla-ejercicio-add/tabla-ejercicio-add.component.html","webpack:///src/app/rest/components/tabla_ejercicio/tabla-ejercicio-add/tabla-ejercicio-add.component.ts","webpack:///src/app/rest/components/rol/rol-add/rol-add.component.html","webpack:///src/app/rest/components/rol/rol-add/rol-add.component.ts","webpack:///src/app/rest/components/factura/factura-list/factura-list.component.ts","webpack:///src/app/rest/components/factura/factura-list/factura-list.component.html","webpack:///src/app/rest/services/reserva/reserva-service.service.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/pages/signup/pages/signup/signup.component.ts","webpack:///src/app/pages/signup/pages/signup/signup.component.html","webpack:///src/app/pages/home/components/thegym/thegym.component.ts","webpack:///src/app/pages/home/components/thegym/thegym.component.html","webpack:///src/app/pages/recover/recover.module.ts","webpack:///src/app/shared/components/portfolio-item/portfolio-item.component.ts","webpack:///src/app/shared/components/portfolio-item/portfolio-item.component.html","webpack:///src/app/pages/horario/componentes/timeline/timeline.component.ts","webpack:///src/app/pages/horario/componentes/timeline/timeline.component.html","webpack:///src/app/rest/components/suscripcion/suscripcion-add/suscripcion-add.component.html","webpack:///src/app/rest/components/suscripcion/suscripcion-add/suscripcion-add.component.ts","webpack:///src/app/pages/contacto/pages/contacto/contacto.component.ts","webpack:///src/app/pages/contacto/pages/contacto/contacto.component.html","webpack:///src/app/rest/components/sala/sala-list/sala-list.component.html","webpack:///src/app/rest/components/sala/sala-list/sala-list.component.ts","webpack:///src/app/shared/models/contacto.usuario.ts","webpack:///src/app/pages/servicios/components/all-servicios/all-servicios.component.html","webpack:///src/app/pages/servicios/components/all-servicios/all-servicios.component.ts","webpack:///src/app/rest/services/direccion/direccion-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/rest/services/factura/factura-service.service.ts","webpack:///src/app/core/helpers/appSettings.js","webpack:///src/app/pages/privacidad/pages/cookies/cookies.component.ts","webpack:///src/app/pages/privacidad/pages/cookies/cookies.component.html","webpack:///src/app/core/components/footer/footer.component.ts","webpack:///src/app/core/components/footer/footer.component.html","webpack:///src/app/pages/clases/components/all-clases/all-clases.component.ts","webpack:///src/app/pages/clases/components/all-clases/all-clases.component.html","webpack:///src/app/rest/services/ejercicio/ejercicio-service.service.ts","webpack:///src/app/pages/home/components/clases/clases.component.ts","webpack:///src/app/pages/home/components/clases/clases.component.html","webpack:///src/app/rest/components/provincia/provincia-add/provincia-add.component.ts","webpack:///src/app/rest/components/provincia/provincia-add/provincia-add.component.html","webpack:///src/app/rest/components/usuario/usuario-list/usuario-list.component.ts","webpack:///src/app/rest/components/usuario/usuario-list/usuario-list.component.html","webpack:///src/app/pages/servicios/pages/servicios/servicios.component.ts","webpack:///src/app/pages/servicios/pages/servicios/servicios.component.html","webpack:///src/app/rest/components/reserva/reserva-list/reserva-list.component.html","webpack:///src/app/rest/components/reserva/reserva-list/reserva-list.component.ts","webpack:///src/app/pages/servicios/servicios.module.ts","webpack:///src/app/rest/components/localidad/localidad-add/localidad-add.component.ts","webpack:///src/app/rest/components/localidad/localidad-add/localidad-add.component.html","webpack:///src/app/cuenta/components/datos/datos.component.ts","webpack:///src/app/cuenta/components/datos/datos.component.html","webpack:///src/main.ts","webpack:///src/app/shared/components/team-member/team-member.component.html","webpack:///src/app/shared/components/team-member/team-member.component.ts","webpack:///src/app/rest/components/suscripcion/suscripcion-list/suscripcion-list.component.html","webpack:///src/app/rest/components/suscripcion/suscripcion-list/suscripcion-list.component.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/core/services/upload-file.service.ts"],"names":["UsuarioAddComponent","_service","_serviceLocalidad","_serviceProvincia","_serviceRol","modalService","confirmPass","rolId","provinciaId","localidadSelect","provinciaSelect","rolSelect","nuevoUsuario","direccion","getProvincias","subscribe","data","provincias","getLocalidadesByProvinciaID","localidades","getLocalidad","localidadId","toPromise","then","localidad","getRol","rol","create","obtenerLocalidad","obtenerRol","email","toLowerCase","password","altaUser","open","ariaLabelledBy","centered","size","setTimeout","window","location","reload","console","log","err","alert","addUsuario","cargarLocalidades","DireccionListComponent","_serviceUsuario","_router","mostrarDireccionAdd","closeResult","direccionUpdate","document","getElementById","hidden","getDirecciones","direcciones","getLocalidades","getUsuarios","usuarios","deleteDireccion","filter","p","updateDireccion","dismissAll","content","getDireccion","id","result","reason","getDismissReason","ESC","BACKDROP_CLICK","habilitarDireccion","deshabilitarDireccion","Servicio","_title","_descr","_icon","title","descr","icon","HelperService","_tokenStorageService","_serviceRestSuscripcion","getToken","navigate","Promise","resolve","user","getUser","dataSuscripcion","isSubscribed","suscripcion","getSuscripcionesByUsuarioId","suscripciones","item","fechaBaja","dateBaja","substring","today","Date","getTime","saveUser","rolExigido","nombre","signOut","$","notify","message","type","MenuComponent","_tokenStorage","active","sessionUser","menuActive","TaquillaServiceService","_http","url","apiUrl","get","taquilla","post","put","ContenidoComponent","_serviceMail","enviando","mensajeUsuario","mapHeight","form","contactoSend","from","text","subject","resetForm","error","onSubmit","AboutusModule","MapaComponent","height","LocalidadServiceService","url2","provincia","FormularioComponent","_authService","_helperService","_restUserService","username","isLoggedIn","isLoginFailed","errorMessage","passEncrypted","login","getUsuarioByEmail","saveToken","accessToken","redirectPage","JSON","stringify","SuscripcionServiceService","userID","PageLegalComponent","pageTitle","pageDesc","pageImg","AboutComponent","CuentaModule","TipoSuscripcionAddComponent","nuevoTipoSuscripcion","errorModal","createTipoSuscripcion","addTipoSuscripcion","TaquillaListComponent","mostrarTaquillaAdd","taquillaAux","isRolOK","getTaquillas","taquillas","deleteTaquilla","modal","updateTaquilla","taquillaUpdate","textoModal","getTaquilla","confirmDelete","habilitarTaquilla","deshabilitarTaquilla","ClasesModule","GaleriaComponent","SalaServiceService","sala","EjercicioSerieAddComponent","_serviceEjercicio","_serviceTablaEjercicio","ejerSelect","tablaSelect","nuevaSerieEjercicio","getEjercicios","ejercicios","getTablasEjercicios","tablasEjercicio","getTablaEjercicio","tablaId","tablaEjercicio","getEjercicio","ejercicioId","ejercicio","obtenerTabla","obtenerEjercicio","createEjercicioSerie","addEjercicioSerie","AUTH_API","httpOptions","headers","AuthService","EjercicioSerieListComponent","_serviceTablasEjercicio","mostrarEjercicioSerieAdd","ejercicioSerieUpdate","isNotRol","getEjercicioSeries","ejercicioSeries","deleteEjercicioSerie","ejercicioSerieAux","updateEjercicioSerie","ejercicioSerie","getEjercicioSerie","habilitarEjercicioSerie","deshabilitarEjercicioSerie","CallToActionComponent","_fraseMotivadoraService","classTitle","callClass","callBtnClass","callImgUrl","overlayStyle","btnTxt","btnUrl","getOneFrase","frase","paddingTop","paddingBottom","img","btnClass","FacturaAddComponent","facturaUserSelect","facturaPagadoSelect","nuevaFactura","getUsuario","usuarioId","usuario","obtenerUsuario","createFactura","addFactura","PageRecoverComponent","HomeModule","FeaturesComponent","_serviciosService","servicios","getServicios","environment","production","TipoEjercicioAddComponent","nuevoTipoEjercicio","createTipoEjercicio","addTipoEjercicio","TipoSuscripcionListComponent","mostrarTipoSuscripcionAdd","tipoSuscripcionUpdate","getTiposSuscripcion","tiposSuscripcion","deleteTipoSuscripcion","tipoSuscripcionAux","updateTipoSuscripcion","tipoSuscripcion","getTipoSuscripcion","habilitarTipoSuscripcion","deshabilitarTipoSuscripcion","ContactoModule","LocalidadListComponent","service","router","EjercicioListComponent","_serviceTipoEjercicio","mostrarEjercicioAdd","ejercicioUpdate","mainTablaEjercicios","getTipoEjercicios","tiposEjercicio","deleteEjercicio","ejercicioAux","updateEjercicio","filterTabla","filterEjercicio","tipoEjercicio","push","length","habilitarEjercicio","deshabilitarEjercicio","filtrarTabla","quitarFiltroTabla","CuentaInicioHorarioComponent","_serviceSlot","_serviceSala","_serviceReserva","horas","diasSemana","isDataLoaded","reserva","isRecurrente","aforoActual","hasReserva","searchResults","searchByActividadID","searchByMonitorID","actividades","monitores","isSearch","i","hora","index","parseInt","Lunes","Martes","Miercoles","Jueves","Viernes","Sabado","Domingo","getSessionUser","loadSlots","getReservasByUsuarioId","reservas","reservasUser","getSlots","slots","searchSlots","slot","horaInicio","diaSemana","indexArray","getIndexOfK","isReserved","checkIsReserved","isDisabled","checkIsDisabled","imagen","monitor","actividad","color","getIndexOfID","apellidos","arr","exist","some","elem","value","Object","values","indexOf","getSlot","slotSeleccionado","getReservasBySlotId","recurrente","dateString","fechaInicio","getReservaBySlotIdAndUsuarioId","toISOString","createReserva","reservaToDel","closeModal","deleteReserva","PageHomeComponent","PrivacidadModule","LoginModule","passwordConfirm","isSignUpFailed","successMessage","dni","telefono","fechaNacimiento","cuentaBancaria","password_confirm","calle","numero","bloque","escalera","piso","puerta","codigoPostal","loginUsuario","PageCuentaPerfilComponent","checkIsLoginAndRedirectToLogin","ActividadAddComponent","serviceTipoActividad","tipoActiSelect","colorTipoActiSelect","nuevaActividad","descripcion","dificultad","tipoActividad","getTipoActividades","tiposActividades","getTipoActividad","tipoActividadId","obtenerUnTipoActividad","createActividad","addActividad","FormatoHoraPipe","cadena","toString","resultado","charAt","PageHorarioComponent","filters","checkIsLogin","searchResultSlots","CallActionComponent","TipoEjercicioServiceService","RestModule","TipoEjercicioListComponent","mostrarTipoEjercicioAdd","tipoEjercicioUpdate","updateTipoEjercicio","deleteTipoEjercicio","tipoEjercicioAux","getTipoEjercicio","habilitarTipoEjercicio","deshabilitarTipoEjercicio","ConceptosComponent","EjercicioAddComponent","tipoEjerSelect","nuevoEjercicio","tipoEjercicioId","obtenerUnTipoEjercicio","createEjercicio","addEjercicio","TaquillaAddComponent","nuevaTaquilla","createTaquilla","addTaquilla","TipoActividadServiceService","PageClasesComponent","PlanesSuscripcionComponent","TipoSuscripcionServiceService","TOKEN_HEADER_KEY","AuthInterceptor","token","req","next","authReq","clone","set","handle","authInterceptorProviders","provide","useClass","multi","FraseMotivadora","_frase","ReservaAddComponent","reservaRecurrenteSelect","reservaSlotSelect","reservaUsuarioSelect","nuevaReserva","getUsuariosByRol","slotId","obtenerSlot","addReserva","HeaderComponent","logout","SharedModule","TipoActividadAddComponent","nuevoTipoActividad","createTipoActividad","addTipoActividad","SlotServiceService","HorarioModule","UsuarioServiceService","urlAlta","FraseMotivadoraService","frases","getIndexRandom","cant","seleccionadas","indexes","includes","Math","floor","random","RolServiceService","HomeSliderComponent","AppComponent","loadJs","dynamicScripts","node","createElement","src","async","getElementsByTagName","appendChild","TopbarComponent","isLoginIn","TipoActividadListComponent","mostrarTipoActividadAdd","tipoActividadUpdate","tipoActividades","deleteTipoActividad","tipoActividadAux","updateTipoActividad","habilitarTipoActividad","deshabilitarTipoActividad","TestimoniosComponent","HomeMonitorsComponent","getFrases","TOKEN_KEY","USER_KEY","TokenStorageService","sessionStorage","clear","removeItem","setItem","getItem","isAdmin","isMonitor","isUser","parse","SignupModule","CuentaInicioTablasComponent","_serviceEjercicioSerie","tablas","loadTablas","getTablasEjerciciosByUsuarioId","tablasUser","buildTablasArray","tabla","getEjerciciosPorTablaId","PageLoginComponent","checkIsLoginAndRedirectToCuenta","ProvinciaServiceService","MailService","mensaje","RolListComponent","mostrarRolAdd","rolUpdate","rolAux","getRoles","roles","deleteRol","updateRol","habilitarRol","deshabilitarRol","HomeMapComponent","AppModule","SlotListComponent","_serviceActividad","_serviceMonitor","mostrarSlotAdd","slotUpdate","mainTablaSlot","getActividades","getSalas","salas","deleteSlot","slotAux","updateSlot","filterSala","toLocaleLowerCase","habilitarSlot","deshabilitarSlot","PagePoliticaComponent","FormatoStringToHoraPipe","ServiciosService","ActividadComponent","PageCuentaInicioComponent","showHorario","showTablas","isSuscribed","checkAndSaveSessionSubscription","DireccionAddComponent","usuarioSelect","nuevaDireccion","createDireccion","addDireccion","ActividadListComponent","_serviceTipoActividad","mostrarActividadAdd","actividadUpdate","mainTablaActividad","deleteActividad","actividadAux","updateActividad","getActividad","filterActividad","habilitarActividad","deshabilitarActividad","services","PagesModule","DondeestamosComponent","TablaComponent","PageAboutusComponent","HomeGaleriaComponent","HomeGoalsComponent","PageCuentaFacturasComponent","_facturaService","datePipe","loadFacturas","getFacturasByUsuarioId","facturas","userFacturas","HomeHorarioComponent","MonitoresComponent","TablaEjercicioServiceService","PagetitleComponent","pageImgUrl","EjercicioSerieServiceService","tablaid","SlotAddComponent","slotActividadSelect","slotSalaSelect","slotMonitorSelect","slotDiaId","nuevoSlot","monitorId","actividadId","getSala","salaId","obtenerActividad","obtenerSala","createSlot","addSlot","ServicioComponent","CuentaUploadImageComponent","_serviceUploadFile","progress","messageClass","isImageUploaded","image","uploadSub","unsubscribe","reset","event","file","target","files","currentFile","fileName","name","reader","FileReader","onload","e","attr","readAsDataURL","imagenAnterior","showAndSaveAvatar","deleteOldFile","reject","deleteFile","upload","UploadProgress","round","loaded","total","body","undefined","updateImageUser","updateUsuario","onFileSelected","routes","path","component","children","CuentaRoutingModule","forRoot","ProvinciaListComponent","SalaAddComponent","nuevaSala","aforoMax","createSala","addSala","resetPass","response","ActividadServiceService","TablaEjercicioListComponent","_serviceEjerciciosSerie","mostrarTablaEjercicioAdd","inicio","modalAniadir","tablaUpdate","tablaDetalle","nuevoEjercicioSerie","mainTablaTablaEjercicios","suscriptores","deleteTablaEjercicio","tablaAux","updateTablaEjercicio","info","param","getEjerciciosPorTipoEjercicioId","detalle","createEjer","errorModalEjer","obtenerEjercicioParaCreacionPorModal","openDetalleTabla","updateES","cargarEjercicios","ejerciciosSerieTablaDetalle","mainTablaEjerciciosSerie","transform","fechaFin","confirmDeleteEjerSerie","filterUser","suscriptor","filterTablaES","porSemana","filterDia","habilitarTablaEjercicio","deshabilitarTablaEjercicio","TablaEjercicioAddComponent","tablaAcivaSelect","suscriptorSelect","nuevaTablaEjercicio","suscriptorId","obtenerSuscriptor","obtenerMonitor","createTablaEjercicio","addTablaEjercicio","RolAddComponent","nuevoRol","createRol","addRol","FacturaListComponent","mostrarFacturaAdd","facturaUpdate","getFacturas","factura","deleteFactura","getFactura","habilitarFactura","deshabilitarFactura","ReservaServiceService","slotID","CoreModule","PageSignupComponent","HomeTheGymComponent","RecoverModule","PortfolioItemComponent","TimelineComponent","SuscripcionAddComponent","_serviceTipoSuscripcion","tipoSusSelect","nuevaSuscripcion","tipoSuscripcionId","obtenerTipoSuscripcion","createSuscripcion","addSuscripcion","PageContactoComponent","SalaListComponent","mostrarSalaAdd","deleteSalas","salaAux","updateSala","salaUpdate","habilitarSala","deshabilitarSala","ContactoUsuario","valor","AllServiciosComponent","findAll","DireccionServiceService","AppRoutingModule","FacturaServiceService","urlFacturas","appSettings","salt","apiUpload","PageCookiesComponent","FooterComponent","AllClasesComponent","_actividadService","redirectHorario","EjercicioServiceService","HomeClasesComponent","ProvinciaAddComponent","UsuarioListComponent","_serviceTaquilla","_serviceDireccion","_serviceSuscripcion","mostrarUsuarioAdd","filterRol","usuarioUpdate","usuarioAux","mainTablaUsers","getSuscripciones","deleteUsuario","obtenerProvincia","obtenerTaquilla","ProvinciaId","getProvincia","scrollable","persona","filterName","habilitarUsuario","deshabilitarUsuario","PageServiciosComponent","ReservaListComponent","mostrarReservaAdd","reservaUpdate","getreservas","mainTablaReserva","reservaAux","updateReserva","getReserva","habilitarReserva","deshabilitarReserva","ServiciosModule","LocalidadAddComponent","PageCuentaDatosComponent","_serviceRestUser","_modalService","getUsuarioUpdate","suscripcionTipos","fechaAlta","setDate","getDate","duracion","suscripcionTipoID","bootstrapModule","TeamMemberComponent","memberImgUrl","memberImg","SuscripcionListComponent","mostrarSuscripcionAdd","suscripcionUpdate","mainTablaSuscripciones","deleteSuscripcion","suscripcionAux","updateSuscripcion","getSuscripcion","habilitarSuscripcion","deshabilitarSuscripcion","webpackEmptyAsyncContext","Error","code","keys","module","exports","UploadFileService","http","baseUrl","formData","FormData","append","reportProgress","responseType","request"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { Localidad } from \"@modelsRest/Localidad\";\nimport { Provincia } from \"@modelsRest/Provincia\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { LocalidadServiceService } from \"@servicesRest/localidad/localidad-service.service\";\nimport { ProvinciaServiceService } from \"@servicesRest/provincia/provincia-service.service\";\nimport { RolServiceService } from \"@servicesRest/rol/rol-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\n\n\nimport {md5} from 'pure-md5';\n\n@Component({\n  selector: \"app-usuario-add\",\n  templateUrl: \"./usuario-add.component.html\",\n  styleUrls: [\"./usuario-add.component.css\"],\n})\nexport class UsuarioAddComponent implements OnInit {\n  //establecer beans a crear\n  nuevoUsuario: any;\n  direccion: any;\n  confirmPass:string = \"\";\n\n  //cargar selects\n  localidades: Localidad[];\n  provincias: Provincia[];\n\n  rolId: number = 1;\n\n  localidadId: number;\n  provinciaId: number = 0;\n\n  //establecer value selects\n  localidadSelect = \"\";\n  provinciaSelect = \"\";\n  rolSelect = \"\";\n\n  constructor(\n    private _service: UsuarioServiceService,\n    private _serviceLocalidad: LocalidadServiceService,\n    private _serviceProvincia: ProvinciaServiceService,\n    private _serviceRol: RolServiceService,\n    private modalService: NgbModal,\n  \n  ) {\n    this.nuevoUsuario = {};\n    this.direccion = {};\n  }\n\n  ngOnInit(): void {\n   \n\n\n    this._serviceProvincia.getProvincias().subscribe((data) => {\n      this.provincias = data;\n    });\n  }\n\n  // metodo para cargar los localidades de la provincia\n  cargarLocalidades(provinciaId) {\n    this.localidadSelect = \"\";\n    this._serviceLocalidad\n      .getLocalidadesByProvinciaID(provinciaId)\n      .subscribe((data) => {\n        this.localidades = data;\n      });\n  }\n\n  // metodo para obtener y enlazar la localidad con la direccion que se va a crear\n  obtenerLocalidad() {\n    return this._serviceLocalidad\n      .getLocalidad(this.localidadId)\n      .toPromise()\n      .then((data) => {\n        this.direccion.localidad = data;\n      });\n  }\n\n  //metodo para obtener y enlazar el rol (por default será el de ROLE_USER)\n  obtenerRol() {\n    return this._serviceRol\n      .getRol(this.rolId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoUsuario.rol = data;\n      });\n  }\n\n  //metodo para crear al usuario\n  addUsuario(create) {\n    this.obtenerLocalidad()\n      .then(() => this.obtenerRol())\n      .then(() => {\n        this.nuevoUsuario.email = this.nuevoUsuario.email.toLowerCase();\n        this.nuevoUsuario.password = md5(this.nuevoUsuario.password);\n        this.nuevoUsuario.direccion = this.direccion;\n        this._service.altaUser(this.nuevoUsuario).subscribe(\n          (data) => {\n            this.modalService.open(create, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n            setTimeout(function () {\n              window.location.reload(), console.log(\"funciona\");\n            }, 3000);\n          },\n          (err) => {\n            alert(err);\n          }\n        );\n      });\n  }\n\n   refresh(){\n    window.location.reload();\n  }\n\n}\n","<h3>Nuevo Usuario</h3>\n\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addUsuario(create)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"row justify-content-center m-4\"><h4>Datos Usuario</h4></div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-2\">\n        <label for=\"nombre\">(*) Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"nombre\"\n          name=\"nombre\"\n          #usuarioNombre=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.nombre\"\n          placeholder=\"Nombre usuario\"\n          required\n          pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioNombre.invalid) ||\n              (usuarioNombre.touched && !usuarioNombre.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioNombre.invalid) ||\n            (usuarioNombre.touched && !usuarioNombre.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"usuarioNombre.errors.required || usuarioNombre.invalid\">\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"apellido\">(*) Apellido</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"apellido\"\n          name=\"apellido\"\n          #usuarioApellido=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.apellidos\"\n          placeholder=\"Apellidos usuario\"\n          required\n          pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,70}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioApellido.invalid) ||\n              (usuarioApellido.touched && !usuarioApellido.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioApellido.invalid) ||\n            (usuarioApellido.touched && !usuarioApellido.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"usuarioApellido.errors.required || usuarioApellido.invalid\"\n          >\n            * Apellido no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"dni\">(*) DNI</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"dni\"\n          name=\"dni\"\n          #usuarioDni=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.dni\"\n          placeholder=\"ej: 55668877X\"\n          required\n          pattern=\"^(\\d){8}[a-zA-Z]{1}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioDni.invalid) ||\n              (usuarioDni.touched && !usuarioDni.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioDni.invalid) ||\n            (usuarioDni.touched && !usuarioDni.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"usuarioDni.errors.required || usuarioDni.invalid\">\n            * Dni no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"telefono\">(*) Teléfono</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"telefono\"\n          name=\"telefono\"\n          #usuarioTelefono=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.telefono\"\n          placeholder=\"Ej:666555444\"\n          required\n          pattern=\"^(6|7|8|9){1}\\d{8,9}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioTelefono.invalid) ||\n              (usuarioTelefono.touched && !usuarioTelefono.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioTelefono.invalid) ||\n            (usuarioTelefono.touched && !usuarioTelefono.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"usuarioTelefono.errors.required || usuarioTelefono.invalid\"\n          >\n            * Teléfono no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"fechaNacimiento\">(*) Fecha Nacimiento</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          id=\"fechaNacimiento\"\n          name=\"fechaNacimiento\"\n          #usuarioFechaNacimiento=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.fechaNacimiento\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioFechaNacimiento.invalid) ||\n              (usuarioFechaNacimiento.touched && !usuarioFechaNacimiento.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioFechaNacimiento.invalid) ||\n            (usuarioFechaNacimiento.touched && !usuarioFechaNacimiento.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              usuarioFechaNacimiento.errors.required ||\n              usuarioFechaNacimiento.invalid\n            \"\n          >\n            * Fecha no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"email\">(*) Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"email\"\n          name=\"email\"\n          #usuarioEmail=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.email\"\n          placeholder=\"Email usuario\"\n          required\n          pattern=\"^([A-Za-z0-9]{1})((\\.|\\-)?([A-Za-z0-9])){0,}@([a-z0-9]){1}((\\.|\\-)?([a-z0-9]))*\\.([a-z]){2,4}$\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioEmail.invalid) ||\n              (usuarioEmail.touched && !usuarioEmail.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioEmail.invalid) ||\n            (usuarioEmail.touched && !usuarioEmail.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"usuarioEmail.errors.required || usuarioEmail.invalid\">\n            * Email no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"password\">(*) Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          name=\"password\"\n          #usuarioPassword=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.password\"\n          placeholder=\"6 caract. min (por ahora)\"\n          required\n          pattern=\"\\w{6,}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioPassword.invalid) ||\n              (usuarioPassword.touched && !usuarioPassword.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioPassword.invalid) ||\n            (usuarioPassword.touched && !usuarioPassword.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"usuarioPassword.errors.required || usuarioPassword.invalid\"\n          >\n            * Password no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"confirmPassword\">(*) Confirmar Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n          #confirmPassword=\"ngModel\"\n          [(ngModel)]=\"confirmPass\"\n          placeholder=\"6 caract. min (por ahora)\"\n          required\n          pattern=\"{{nuevoUsuario.password}}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && confirmPassword.invalid) ||\n              (confirmPassword.touched && !confirmPassword.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && confirmPassword.invalid) ||\n            (confirmPassword.touched && !confirmPassword.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"confirmPassword.errors.required || confirmPassword.invalid\"\n          >\n            * Password no coincide\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"cuentaBancaria\">(*) Cuenta Bancaria</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"cuentaBancaria\"\n          name=\"cuentaBancaria\"\n          #usuarioCuentaBancaria=\"ngModel\"\n          [(ngModel)]=\"nuevoUsuario.cuentaBancaria\"\n          placeholder=\"ES55 4444 4444 44 444444444 \"\n          required\n          pattern=\"(ES\\d{2} \\d{4} \\d{4} \\d{2} \\d{10}|ES\\d{22})\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && usuarioCuentaBancaria.invalid) ||\n              (usuarioCuentaBancaria.touched && !usuarioCuentaBancaria.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && usuarioCuentaBancaria.invalid) ||\n            (usuarioCuentaBancaria.touched && !usuarioCuentaBancaria.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              usuarioCuentaBancaria.errors.required ||\n              usuarioCuentaBancaria.invalid\n            \"\n          >\n            * Cuenta Bancaria no válida\n          </div>\n        </div>\n      </div>\n      <hr />\n      <div class=\"row justify-content-center m-4 w-100\"><h4>Dirección</h4></div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"calle\">(*) Calle</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"calle\"\n          name=\"calle\"\n          #direccionCalle=\"ngModel\"\n          [(ngModel)]=\"direccion.calle\"\n          placeholder=\"C/\"\n          required\n          pattern=\"^([a-zA-Z]){1}([a-zA-Z ]){2,50}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionCalle.invalid) ||\n              (direccionCalle.touched && !direccionCalle.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionCalle.invalid) ||\n            (direccionCalle.touched && !direccionCalle.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"direccionCalle.errors.required || direccionCalle.invalid\">\n            * Calle no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"numero\">(*) Número</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"numero\"\n          name=\"numero\"\n          #direccionNumero=\"ngModel\"\n          [(ngModel)]=\"direccion.numero\"\n          placeholder=\"Nº\"\n          min=\"1\"\n          max=\"1000\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionNumero.invalid) ||\n              (direccionNumero.touched && !direccionNumero.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionNumero.invalid) ||\n            (direccionNumero.touched && !direccionNumero.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"direccionNumero.errors.required || direccionNumero.invalid\"\n          >\n            * Número no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"bloque\">Bloque</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"bloque\"\n          name=\"bloque\"\n          #direccionBloque=\"ngModel\"\n          [(ngModel)]=\"direccion.bloque\"\n          placeholder=\"Ej: 1\"\n          pattern=\"^([1-9]\\d*)\"\n          min=\"1\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionBloque.invalid) ||\n              (direccionBloque.touched && !direccionBloque.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionBloque.invalid) ||\n            (direccionBloque.touched && !direccionBloque.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"direccionBloque.errors.required || direccionBloque.invalid\"\n          >\n            * Bloque no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"escalera\">Escalera</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"escalera\"\n          name=\"escalera\"\n          #direccionEscalera=\"ngModel\"\n          [(ngModel)]=\"direccion.escalera\"\n          placeholder=\"Ej: 1\"\n          pattern=\"^([1-9]\\d*)\"\n          min=\"1\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionEscalera.invalid) ||\n              (direccionEscalera.touched && !direccionEscalera.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionEscalera.invalid) ||\n            (direccionEscalera.touched && !direccionEscalera.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionEscalera.errors.required || direccionEscalera.invalid\n            \"\n          >\n            * Escalera no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"piso\">Piso</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"piso\"\n          name=\"piso\"\n          #direccionPiso=\"ngModel\"\n          [(ngModel)]=\"direccion.piso\"\n          placeholder=\"Ej: 1\"\n          pattern=\"^([1-9]\\d*)\"\n          min=\"1\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionPiso.invalid) ||\n              (direccionPiso.touched && !direccionPiso.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionPiso.invalid) ||\n            (direccionPiso.touched && !direccionPiso.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"direccionPiso.errors.required || direccionPiso.invalid\">\n            * Piso no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"puerta\">Puerta</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"puerta\"\n          name=\"puerta\"\n          #direccionPuerta=\"ngModel\"\n          [(ngModel)]=\"direccion.puerta\"\n          placeholder=\"Ej: 1,A\"\n          pattern=\"^(\\d|[a-zA-Z]{1})\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionPuerta.invalid) ||\n              (direccionPuerta.touched && !direccionPuerta.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionPuerta.invalid) ||\n            (direccionPuerta.touched && !direccionPuerta.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"direccionPuerta.errors.required || direccionPuerta.invalid\"\n          >\n            * Puerta no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"cp\"> (*) Código Postal</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"cp\"\n          name=\"cp\"\n          #direccionCP=\"ngModel\"\n          [(ngModel)]=\"direccion.codigoPostal\"\n          placeholder=\"Ej: 29850\"\n          required\n          pattern=\"^\\d{5,6}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionCP.invalid) ||\n              (direccionCP.touched && !direccionCP.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionCP.invalid) ||\n            (direccionCP.touched && !direccionCP.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"direccionCP.errors.required || direccionCP.invalid\">\n            * Código Postal no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"provincia\">(*) Provincia</label>\n        <select\n          class=\"form-control\"\n          name=\"provincia\"\n          id=\"provincia\"\n          #direccionProvincia=\"ngModel\"\n          [(ngModel)]=\"provinciaId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionProvincia.invalid) ||\n              (direccionProvincia.touched && !direccionProvincia.valid)\n          }\"\n          [(ngModel)]=\"provinciaSelect\"\n          (ngModelChange)=\"cargarLocalidades(provinciaId)\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let provincia of provincias\"\n            value=\"{{ provincia.id }}\"\n          >\n            {{ provincia.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && direccionProvincia.invalid) ||\n            (direccionProvincia.touched && !direccionProvincia.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionProvincia.errors.required || direccionProvincia.invalid\n            \"\n          >\n            * Seleccione una Provincia\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"provinciaId != 0\" class=\"form-group col-md-4\">\n        <label for=\"localidad\">(*) Localidad</label>\n        <select\n          class=\"form-control\"\n          name=\"localidad\"\n          id=\"localidad\"\n          #direccionLocalidad=\"ngModel\"\n          [(ngModel)]=\"localidadId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionLocalidad.invalid) ||\n              (direccionLocalidad.touched && !direccionLocalidad.valid)\n          }\"\n          [(ngModel)]=\"localidadSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let localidad of localidades\"\n            value=\"{{ localidad.id }}\"\n          >\n            <span> {{ localidad.nombre }} </span>\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && direccionLocalidad.invalid) ||\n            (direccionLocalidad.touched && !direccionLocalidad.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionLocalidad.errors.required || direccionLocalidad.invalid\n            \"\n          >\n            * Seleccione una Localidad\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row justify-content-center m-4 w-100\">\n        <h4>Rol</h4>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"rol\">(*) Rol</label>\n        <select\n          class=\"form-control\"\n          name=\"rol\"\n          id=\"rol\"\n          #direccionLocalidad=\"ngModel\"\n          [(ngModel)]=\"rolId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionLocalidad.invalid) ||\n              (direccionLocalidad.touched && !direccionLocalidad.valid)\n          }\"\n          [(ngModel)]=\"rolSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option string-to-number value=\"1\">ROL_ADMIN</option>\n          <option string-to-number value=\"2\">ROL_MONITOR</option>\n          <option string-to-number value=\"3\">ROL_USUARIO</option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && direccionLocalidad.invalid) ||\n            (direccionLocalidad.touched && !direccionLocalidad.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionLocalidad.errors.required || direccionLocalidad.invalid\n            \"\n          >\n            * Seleccione una Localidad\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¡Usuario\n        <span class=\"text-danger\">{{ nuevoUsuario.nombre }}</span> registrado!\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss(); refresh()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Direccion } from \"@modelsRest/Direccion\";\nimport { Localidad } from \"@modelsRest/Localidad\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { DireccionServiceService } from \"@servicesRest/direccion/direccion-service.service\";\nimport { LocalidadServiceService } from \"@servicesRest/localidad/localidad-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-direccion-list\",\n  templateUrl: \"./direccion-list.component.html\",\n  styleUrls: [\"./direccion-list.component.css\"],\n})\nexport class DireccionListComponent implements OnInit {\n  mostrarDireccionAdd: boolean = false;\n  direcciones: Direccion[];\n\n  //update\n  direccionUpdate: any;\n  usuarios:Usuario[];\n  localidades:Localidad[];\n  closeResult = \"\";\n\n  constructor(\n    private _service: DireccionServiceService,\n    private _serviceLocalidad:LocalidadServiceService,\n    private _serviceUsuario:UsuarioServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.direccionUpdate = {};\n  }\n\n  ngOnInit(): void {\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getDirecciones().subscribe((data) => {\n      this.direcciones = data;\n    });\n\n    this._serviceLocalidad.getLocalidades().subscribe(data=>{\n      this.localidades=data;\n    });\n\n    this._serviceUsuario.getUsuarios().subscribe(data=>{\n      this.usuarios=data;\n    });\n  }\n\n  delete(direccion: Direccion) {\n    this._service.deleteDireccion(direccion).subscribe((data) => {\n      this.direcciones = this.direcciones.filter((p) => p != direccion);\n      alert(\"Dirección eliminado\");\n    });\n  }\n\n  update(){\n    this._service.updateDireccion(this.direccionUpdate).subscribe(data=>{\n      alert(\"Dirección Actualizada!\");\n      this.modalService.dismissAll();\n    });\n    window.location.reload();\n  }\n\n  habilitarDireccion() {\n    this.mostrarDireccionAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarDireccion() {\n    this.mostrarDireccionAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, direccion: Direccion) {\n    this._service.getDireccion(direccion.id).subscribe((data) => {\n      this.direccionUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n","<div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    (click)=\"habilitarDireccion()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Direccion\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarDireccion()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Direccion\n  </button>\n</div>\n<div *ngIf=\"mostrarDireccionAdd == true\">\n  <app-direccion-add></app-direccion-add>\n</div>\n\n<h3 class=\"text-center\">Direcciones</h3>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Calle\n        </th>\n\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Código Postal\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Bloque\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Escalera\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Piso\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Número\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Puerta\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Localidad\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let direccion of direcciones\" class=\"text-center\">\n        <td>{{ direccion.calle }}</td>\n        <td>{{ direccion.codigoPostal }}</td>\n        <td>{{ direccion.bloque }}</td>\n        <td>{{ direccion.escalera }}</td>\n        <td>{{ direccion.piso }}</td>\n        <td>{{ direccion.numero }}</td>\n        <td>{{ direccion.puerta }}</td>\n        <td>\n          {{\n            direccion.localidad.nombre != null\n              ? direccion.localidad.nombre +\n                \", \" +\n                direccion.localidad.provincia.nombre\n              : \" \"\n          }}\n        </td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, direccion)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"delete(suscripcion)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Settings\"\n            ><i class=\"icon-settings\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\">Calle</th>\n        <th id=\"\">Código Postal</th>\n        <th id=\"\">Bloque</th>\n        <th id=\"\">Escalera</th>\n        <th id=\"\">Piso</th>\n        <th id=\"\">Número</th>\n        <th id=\"\">Puerta</th>\n        <th id=\"\">Localidad</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Dirección</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"direccionUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update()\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-2\">\n            <label for=\"calle\">(*) Calle</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"calle\"\n              name=\"calle\"\n              #direccionCalle=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.calle\"\n              placeholder=\"C/\"\n              required\n              pattern=\"^([a-zA-Z]){1}([a-zA-Z ]){2,50}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionCalle.invalid) ||\n                  (direccionCalle.touched && !direccionCalle.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionCalle.invalid) ||\n                (direccionCalle.touched && !direccionCalle.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"direccionCalle.errors.required || direccionCalle.invalid\"\n              >\n                * Calle no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"numero\">(*) Número</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"numero\"\n              name=\"numero\"\n              #direccionNumero=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.numero\"\n              placeholder=\"Nº\"\n              min=\"1\"\n              max=\"1000\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionNumero.invalid) ||\n                  (direccionNumero.touched && !direccionNumero.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionNumero.invalid) ||\n                (direccionNumero.touched && !direccionNumero.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionNumero.errors.required || direccionNumero.invalid\n                \"\n              >\n                * Número no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"bloque\">Bloque</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"bloque\"\n              name=\"bloque\"\n              #direccionBloque=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.bloque\"\n              placeholder=\"Ej: 1\"\n              pattern=\"^([1-9]\\d*)\"\n              min=\"1\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionBloque.invalid) ||\n                  (direccionBloque.touched && !direccionBloque.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionBloque.invalid) ||\n                (direccionBloque.touched && !direccionBloque.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionBloque.errors.required || direccionBloque.invalid\n                \"\n              >\n                * Bloque no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"escalera\">Escalera</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"escalera\"\n              name=\"escalera\"\n              #direccionEscalera=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.escalera\"\n              placeholder=\"Ej: 1\"\n              pattern=\"^([1-9]\\d*)\"\n              min=\"1\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionEscalera.invalid) ||\n                  (direccionEscalera.touched && !direccionEscalera.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionEscalera.invalid) ||\n                (direccionEscalera.touched && !direccionEscalera.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionEscalera.errors.required || direccionEscalera.invalid\n                \"\n              >\n                * Escalera no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"piso\">Piso</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"piso\"\n              name=\"piso\"\n              #direccionPiso=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.piso\"\n              placeholder=\"Ej: 1\"\n              pattern=\"^([1-9]\\d*)\"\n              min=\"1\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionPiso.invalid) ||\n                  (direccionPiso.touched && !direccionPiso.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionPiso.invalid) ||\n                (direccionPiso.touched && !direccionPiso.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"direccionPiso.errors.required || direccionPiso.invalid\"\n              >\n                * Piso no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"puerta\">Puerta</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"puerta\"\n              name=\"puerta\"\n              #direccionPuerta=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.puerta\"\n              placeholder=\"Ej: 1,A\"\n              pattern=\"^(\\d|[a-zA-Z]{1})\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionPuerta.invalid) ||\n                  (direccionPuerta.touched && !direccionPuerta.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionPuerta.invalid) ||\n                (direccionPuerta.touched && !direccionPuerta.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionPuerta.errors.required || direccionPuerta.invalid\n                \"\n              >\n                * Puerta no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"cp\"> (*) Código Postal</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cp\"\n              name=\"cp\"\n              #direccionCP=\"ngModel\"\n              [(ngModel)]=\"direccionUpdate.codigoPostal\"\n              placeholder=\"Ej: 29850\"\n              required\n              pattern=\"^\\d{5,6}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionCP.invalid) ||\n                  (direccionCP.touched && !direccionCP.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionCP.invalid) ||\n                (direccionCP.touched && !direccionCP.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"direccionCP.errors.required || direccionCP.invalid\">\n                * Código Postal no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"localidad\">(*) Localidad</label>\n            <select\n              class=\"form-control\"\n              name=\"localidad\"\n              id=\"localidad\"\n              #direccionLocalidad=\"ngModel\"\n              [(ngModel)]=\"localidadId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionLocalidad.invalid) ||\n                  (direccionLocalidad.touched && !direccionLocalidad.valid)\n              }\"\n              [(ngModel)]=\"direccionUpdate.localidad.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let localidad of localidades\"\n                value=\"{{ localidad.id }}\"\n              >\n                {{ localidad.nombre }}, {{ localidad.provincia.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && direccionLocalidad.invalid) ||\n                (direccionLocalidad.touched && !direccionLocalidad.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionLocalidad.errors.required ||\n                  direccionLocalidad.invalid\n                \"\n              >\n                * Seleccione una Localidad\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"usuario\">(*) Usuario</label>\n            <select\n              class=\"form-control\"\n              name=\"usuario\"\n              id=\"usuario\"\n              #direccionUsuario=\"ngModel\"\n              [(ngModel)]=\"usuarioId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionUsuario.invalid) ||\n                  (direccionUsuario.touched && !direccionUsuario.valid)\n              }\"\n              \n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n                {{ usuario.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && direccionUsuario.invalid) ||\n                (direccionUsuario.touched && !direccionUsuario.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionUsuario.errors.required || direccionUsuario.invalid\n                \"\n              >\n                * Seleccione un usuario\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<!--app-provincia-list></app-provincia-list-->\n<app-localidad-list></app-localidad-list>\n","export class Servicio {\n    constructor(\n        private _title: string,\n        private _descr: string,\n        private _icon: string\n    ) {\n\n    }\n\n    get title() {\n        return this._title;\n    }\n\n    get descr() {\n        return this._descr;\n    }\n\n    get icon() {\n        return this._icon;\n    }\n\n    set title(title) {\n        this._title = title;\n    }\n\n    set descr(descr) {\n        this._descr = descr;\n    }\n\n    set icon(icon) {\n        this._icon = icon;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { TokenStorageService } from './token-storage.service';\nimport { Router } from '@angular/router';\nimport { SuscripcionServiceService as SuscripcionService } from '@servicesRest/suscripcion/suscripcion-service.service';\n\ndeclare var $:any;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HelperService {\n\n  constructor(\n    private _tokenStorageService: TokenStorageService,\n    private _serviceRestSuscripcion: SuscripcionService,\n    private _router: Router\n  ) { }\n\n  public checkIsLogin(){\n    if (!this._tokenStorageService.getToken()) {\n      return false;\n    }\n    return true;\n  }\n\n  public checkIsLoginAndRedirectToLogin(){\n    if (!this._tokenStorageService.getToken()) {\n      this._router.navigate(['/login']);\n    }\n  }\n\n  public checkIsLoginAndRedirectToCuenta(){\n    if (this._tokenStorageService.getToken()) {\n      this._router.navigate(['/cuenta']);\n    }\n  }\n\n  public checkAndSaveSessionSubscription() {\n    return new Promise(resolve=>{\n      const user = this._tokenStorageService.getUser();\n      var dataSuscripcion:any = { isSubscribed: false, suscripcion: {} }\n\n      this._serviceRestSuscripcion.getSuscripcionesByUsuarioId(user.id).toPromise()\n      .then((suscripciones)=>{\n        //console.log(suscripciones);\n        if(suscripciones != null) {\n\n          for(let item of suscripciones) {\n            if(item.fechaBaja == null) {\n              //no tiene fecha de baja por lo tanto esta suscrito.\n              dataSuscripcion.isSubscribed = true;\n              dataSuscripcion.suscripcion = item;\n\n            } else {\n\n              //tiene fecha de baja y comprobamos si es todavia es activa la suscripción\n              var dateBaja = item.fechaBaja.substring(0,10);\n              var today = new Date();\n              var fechaBaja = new Date(dateBaja.substring(0,4), dateBaja.substring(5,7)-1, dateBaja.substring(8,10));\n\n              if(fechaBaja.getTime() >= today.getTime()) {\n                dataSuscripcion.isSubscribed = true;\n                dataSuscripcion.suscripcion = item;\n              }\n            };\n          }\n        }\n      })\n      .then(()=>{\n        user.suscripcion = dataSuscripcion;\n      })\n      .then(()=>{\n        this._tokenStorageService.saveUser(user);\n      })\n      .then(()=>{\n        resolve(dataSuscripcion);\n      });\n    });\n  }\n\n  public getSessionUser(): any {\n    return new Promise( resolve => {\n      const user = this._tokenStorageService.getUser();\n      if (user) {\n        resolve(user);\n      } else {\n        resolve({});\n      }\n    });\n  }\n\n  public isRolOK(rolExigido: string) {\n    const user = this._tokenStorageService.getUser();\n    if(user) {\n      if(user.rol.nombre != rolExigido){\n        this._router.navigate(['/inicio']);\n      }\n    }\n  }\n\n  public isNotRol(rolExigido: string) {\n    const user = this._tokenStorageService.getUser();\n    if(user) {\n      if(user.rol.nombre == rolExigido){\n        this._router.navigate(['/inicio']);\n      }\n    }\n  }\n\n  public logout(): any {\n    this._tokenStorageService.signOut();\n    \n    $.notify({\n      // options\n      icon: 'fas fa-check',\n      title: '¡Adiós!',\n      message: 'Estamos cerrando tu sessión.',\n    },{\n      // settings\n      type: 'success'\n    });\n\n    setTimeout(() => {\n      this._router.navigate(['/inicio']).then(() => {\n        window.location.reload();\n      });\n    }, 1000);\n  }\n\n\n}\n","<div class=\"page-menu\">\n    <div class=\"container\">\n      <nav>\n        <ul>\n          <li><a href=\"/cuenta/inicio\">Mi Cuenta</a></li>\n          <li><a href=\"/cuenta/mis/datos\">Mis Datos</a></li>\n          <li><a href=\"/cuenta/mis/facturas\">Mis Facturas</a></li>\n          <!-- <li [class.active]=\"active == 'factura'\"><a href=\"/cuenta/factura/list\">Facturas</a> -->\n          <!-- <li class=\"dropdown\" *ngIf=\"sessionUser.isAdmin\" >\n            <a href=\"javascript:;\">Web</a>\n            <ul class=\"dropdown-menu\">\n              <li><a href=\"#\">Slider</a></li>\n              <li><a href=\"#\">Páginas</a></li>\n            </ul>\n          </li> -->\n          <li [class]=\"'dropdown'\" *ngIf=\"sessionUser.isAdmin\">\n            <a href=\"javascript:;\">Actividades</a>\n            <ul class=\"dropdown-menu\">\n                <li><a class=\"dropdown-item\" href=\"/cuenta/actividad/list\">Actividades</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/slot/list\">Slots</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/reserva/list\">Reservas</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/sala/list\">Salas</a></li>\n            </ul>\n          </li>\n          <!--li class=\"dropdown\" -->\n          <li class=\"dropdown\" [class.active]=\"active == 'ejercicio'\"  *ngIf=\"sessionUser.isAdmin || sessionUser.isMonitor\">\n            <a href=\"javascript:;\">Ejercicios</a>\n            <ul class=\"dropdown-menu menu-last\">\n                <li><a class=\"dropdown-item\" href=\"/cuenta/tablaEjercicio/list\">Tablas</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/ejercicioSerie/list\">Series</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/ejercicio/list\">Ejercicios</a></li>\n            </ul>\n          </li>\n          <!--li class=\"dropdown\" -->\n          <li class=\"dropdown\" [class.active]=\"active == 'usuario'\" *ngIf=\"sessionUser.isAdmin\">\n            <a href=\"javascript:;\">Usuarios</a>\n            <ul class=\"dropdown-menu menu-last\">\n                <li><a class=\"dropdown-item\" href=\"/cuenta/usuario/list\">Usuarios</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/rol/list\">Roles</a></li>\n                <li><a class=\"dropdown-item\" href=\"/cuenta/taquilla/list\">Taquillas</a></li>\n                <!--li><a class=\"dropdown-item\" href=\"/cuenta/direccion/list\">Direcciones</a></li-->\n                <li><a class=\"dropdown-item\" href=\"/cuenta/suscripcion/list\">Suscripciones</a></li>\n            </ul>\n          </li>\n        </ul>\n      </nav>\n      <div id=\"pageMenu-trigger\">\n        <i class=\"fa fa-bars\"></i>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TokenStorageService } from '@core/services/token-storage.service';\n\n@Component({\n  selector: 'cuenta-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  public active: string;\n  public sessionUser: any;\n\n  @Input() menuActive: string;\n\n  constructor(\n    private _tokenStorage: TokenStorageService\n  ) { \n    this.active = 'datos';\n    this.sessionUser = this._tokenStorage.getUser();\n  }\n\n  ngOnInit(): void {\n    if(this.menuActive) {\n      this.active = this.menuActive;\n    }\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Taquilla } from '@modelsRest/Taquilla';\nimport {Observable} from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaquillaServiceService {\n\n  constructor(private _http:HttpClient) { }\n\n  url= appSettings.apiUrl + \"taquilla\";\n\n  getTaquillas():Observable<any>{\n    return this._http.get(this.url);\n  }\n  getTaquilla(taquilla:number):Observable<any>{\n    return this._http.get<Taquilla>(this.url+\"/\"+taquilla);\n  }\n\n  deleteTaquilla(taquilla:Taquilla){\n    return this._http.delete<Taquilla>(this.url+\"/\"+taquilla.id);\n  }\n\n  createTaquilla (taquilla:Taquilla):Observable<any>{\n    return this._http.post<Taquilla>(this.url,taquilla);\n  }\n\n  updateTaquilla(taquilla:Taquilla): Observable<any> {\n    return this._http.put<Taquilla>(this.url + \"/\" + taquilla.id, taquilla);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContactoUsuario } from '@shared/models/contacto.usuario';\nimport { MapaComponent } from '@shared/components/mapa/mapa.component';\nimport { MailService } from '@core/services/mail.service';\ndeclare var $:any;\n@Component({\n  selector: 'contacto-contenido',\n  templateUrl: './contenido.component.html',\n  styleUrls: ['./contenido.component.css']\n})\nexport class ContenidoComponent implements OnInit {\n  public mensajeUsuario: ContactoUsuario;\n  public mapHeight: number;\n  public enviando: boolean = false;\n  constructor(\n    private _serviceMail: MailService\n  ) { \n    this.mensajeUsuario = new ContactoUsuario('','','','','');\n    this.mapHeight = 300;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form:any) {\n    //console.log(this.mensajeUsuario);\n    this.enviando = true;\n    this._serviceMail.contactoSend(this.mensajeUsuario).subscribe(\n      result => {\n        this.mensajeUsuario.from='';\n        this.mensajeUsuario.text='';\n        this.mensajeUsuario.subject='';\n        this.mensajeUsuario.nombre='';\n        this.enviando = false;\n        form.resetForm();\n        $.notify({\n          // options\n          icon: 'fas fa-check',\n          title: '¡Muy bien!',\n          message: 'Tu mensaje ha sido enviado.',\n        },{\n          // settings\n          type: 'success'\n        });\n      },\n      err => {\n        //console.log(err);\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n      }\n    );\n\n  }\n\n}\n","<!-- CONTENT -->\n<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-6\">\n                <div class=\"heading-text heading-gradient heading-line\">\n                    <h4><span>Contacta con nosotros</span></h4>\n                </div>\n                <p>Cualquier pregunta, no dudes en contactar con nosotros.</p>\n                <div class=\"m-t-30\">\n                    <form class=\"form-validate\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit(f)\">\n                        <div class=\"row\">\n                            <div class=\"form-group col-md-6\">\n                                <label for=\"name\">Nombre <span class=\"text-danger\">*</span></label>\n                                <input \n                                    type=\"text\" \n                                    name=\"nombre\" \n                                    #usuarioNombre=\"ngModel\"\n                                    required\n                                    class=\"form-control required name\"\n                                    placeholder=\"Introduce tu nombre\"\n                                    [(ngModel)]=\"mensajeUsuario.nombre\"\n                                    pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n                                    [ngClass]=\"{\n                                        'is-invalid':\n                                        (f.submitted && usuarioNombre.invalid) ||\n                                        (usuarioNombre.touched && !usuarioNombre.valid)\n                                    }\" >\n                                <div\n                                    *ngIf=\"\n                                      (f.submitted && usuarioNombre.invalid) ||\n                                      (usuarioNombre.touched && !usuarioNombre.valid)\n                                    \"\n                                    class=\"invalid-feedback\"\n                                  >\n                                    <div *ngIf=\"usuarioNombre.errors.required || usuarioNombre.invalid\">\n                                      Nombre no válido\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-6\">\n                                <label for=\"email\">Email <span class=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    required\n                                    class=\"form-control required email\"\n                                    placeholder=\"Introduce tu email\"\n                                    [(ngModel)]=\"mensajeUsuario.from\"\n                                    #usuarioEmail=\"ngModel\"\n                                    pattern=\"^([a-z0-9]{1})((\\.|\\-)?([a-z0-9])){0,}@([a-z0-9]){1}((\\.|\\-)?([a-z0-9]))*\\.([a-z]){2,4}$\"\n                                    [ngClass]=\"{\n                                        'is-invalid':\n                                        (f.submitted && usuarioEmail.invalid) ||\n                                        (usuarioEmail.touched && !usuarioEmail.valid)\n                                    }\"\n                                >\n                                <div\n                                    *ngIf=\"\n                                        (f.submitted && usuarioEmail.invalid) ||\n                                        (usuarioEmail.touched && !usuarioEmail.valid)\n                                    \"\n                                    class=\"invalid-feedback\"\n                                >\n                                    <div *ngIf=\"usuarioEmail.errors.required || usuarioEmail.invalid\">\n                                        Email no válido\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"form-group col-md-12\">\n                                <label for=\"subject\">Asunto <span class=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"text\"\n                                    name=\"subject\"\n                                    required\n                                    class=\"form-control required\"\n                                    placeholder=\"Asunto...\"\n                                    [(ngModel)]=\"mensajeUsuario.subject\"\n                                    #usuarioSubject=\"ngModel\"\n                                    pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n                                    [ngClass]=\"{\n                                        'is-invalid':\n                                        (f.submitted && usuarioSubject.invalid) ||\n                                        (usuarioSubject.touched && !usuarioSubject.valid)\n                                    }\"\n                                >\n                                <div\n                                    *ngIf=\"\n                                        (f.submitted && usuarioSubject.invalid) ||\n                                        (usuarioSubject.touched && !usuarioSubject.valid)\n                                    \"\n                                    class=\"invalid-feedback\"\n                                >\n                                    <div *ngIf=\"usuarioSubject.errors.required || usuarioSubject.invalid\">\n                                        Asunto no válido\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"message\">Mensaje <span class=\"text-danger\">*</span></label>\n                            <textarea\n                                type=\"text\"\n                                name=\"mensaje\"\n                                required\n                                rows=\"5\"\n                                class=\"form-control required\"\n                                placeholder=\"Introduce tu mensaje\"\n                                [(ngModel)]=\"mensajeUsuario.text\"\n                                #usuarioText=\"ngModel\"\n                                pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioText.invalid) ||\n                                    (usuarioText.touched && !usuarioText.valid)\n                                }\"\n                                ></textarea>\n                                <div\n                                    *ngIf=\"\n                                        (f.submitted && usuarioText.invalid) ||\n                                        (usuarioText.touched && !usuarioText.valid)\n                                    \"\n                                    class=\"invalid-feedback\"\n                                >\n                                    <div *ngIf=\"usuarioText.errors.required || usuarioText.invalid\">\n                                        Mensaje no válido\n                                    </div>\n                                </div>\n                        </div>\n                        <!--  <div class=\"form-group\">\n                            <script src=\"https://www.google.com/recaptcha/api.js\" async defer></script>\n                            <div class=\"g-recaptcha\" data-sitekey=\"6LddCxAUAAAAAKOg0-U6IprqOZ7vTfiMNSyQT2-M\"></div>\n                        </div>  -->\n                        <div class=\"row\" *ngIf=\"enviando\">\n                            <div class=\"col-md-12\">\n                                <div class=\"d-flex justify-content-center\">\n                                    <div class=\"spinner-border\" role=\"status\">\n                                        <span class=\"sr-only\">Cargando...</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\" *ngIf=\"!enviando\">\n                            <div class=\"col-md-12\">\n                                <button class=\"btn\" type=\"submit\" id=\"form-submit\"><i class=\"fa fa-paper-plane\"></i>&nbsp;Enviar mensaje</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"col-lg-6\">\n                <div class=\"heading-text heading-gradient heading-line\">\n                    <h4><span>Dirección y Mapa</span></h4>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <address>\n                            <strong>FIL's Center, Inc.</strong><br>\n                            Avda de José Garate, 5, 28823<br>\n                            Coslada, Madrid<br>\n                            <abbr title=\"Phone\">P:</abbr> (+34) 123456789\n                        </address>\n                    </div>\n                </div>\n                <!-- Google Map -->\n                <app-mapa-google [mapHeight]=\"mapHeight\"></app-mapa-google>\n                <!-- <div class=\"map\" data-latitude=\"-37.817240\" data-longitude=\"144.955826\" data-style=\"light\" data-info=\"Hello from &lt;br&gt; Inspiro Themes\"></div> -->\n                <!-- end: Google Map -->\n            </div>\n        </div>\n    </div>\n</section> <!-- end: Content -->\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { PageAboutusComponent } from './pages/aboutus/aboutus.component';\n\nimport * as aboutusComponents from './components';\n\n@NgModule({\n  declarations: [\n    PageAboutusComponent,\n    ...aboutusComponents.components,\n  ],\n  imports: [\n    SharedModule\n  ],\n  exports: [\n    PageAboutusComponent,\n    ...aboutusComponents.components\n  ]\n})\nexport class AboutusModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mapa-google',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.css']\n})\nexport class MapaComponent implements OnInit {\n  public height: number;\n\n  @Input() mapHeight: number;\n\n  constructor() { \n    this.height = 450;\n    if(this.mapHeight) {\n      this.height = this.mapHeight;\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3037.0882479114916!2d-3.55135448369394!3d40.4290447793638!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd423064dd5ea8f1%3A0xe8ea07d40bdf703d!2sSmartFit%20gym%20Coslada!5e0!3m2!1sen!2ses!4v1616957228181!5m2!1sen!2ses\" width=\"100&%\" [attr.height]=\"height\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Localidad } from '@modelsRest/Localidad';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalidadServiceService {\n\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'localidad';\n  url2 = appSettings.apiUrl + 'localidades';\n\n  getLocalidades(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getLocalidad(localidad:number):Observable<any>{\n    return this._http.get<Localidad>(this.url+\"/\"+localidad);\n  }\n\n  // carga localidades por el id de la provinicia vinculada\n  getLocalidadesByProvinciaID(provincia:number):Observable<any>{\n    return this._http.get<Localidad>(this.url2+\"/\"+provincia);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@core/services/auth.service';\nimport { TokenStorageService } from '@core/services/token-storage.service';\nimport { HelperService } from '@core/services/helper.service';\nimport { UsuarioServiceService } from '@servicesRest/usuario/usuario-service.service';\n\nimport {md5} from 'pure-md5';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'login-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css']\n})\nexport class FormularioComponent implements OnInit {\n  public form: any = {\n    username: null,\n    password: null\n  };\n\n  public isLoggedIn: boolean = false;\n  public isLoginFailed: boolean = false;\n  public errorMessage: string = 'Error';\n  public enviando: boolean = false;\n\n  constructor(\n    private _authService: AuthService,\n    private _helperService: HelperService,\n    private _tokenStorage: TokenStorageService,\n    private _restUserService: UsuarioServiceService,\n    private _router: Router\n  ) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    // console.log(this.form.username);\n    // console.log(this.form.password);\n    this.enviando = true;\n    const { username, password } = this.form;\n    const passEncrypted = md5(password);\n\n    this._authService.login(username, passEncrypted).subscribe(\n      result => {\n        //console.log(result);\n        this._restUserService.getUsuarioByEmail(result.username).toPromise()\n        .then(user => {\n            //console.log(data);\n            this._tokenStorage.saveUser(user);\n            this._tokenStorage.saveToken(result.accessToken);\n        })\n        .then(()=>{\n            this.isLoginFailed = false;\n            this.isLoggedIn = true;\n            this.redirectPage();\n        })\n        .catch((error)=>{\n          console.log(\"Promise rejected with \" + JSON.stringify(error));\n        });\n      },\n      err => {\n        //console.log(err);\n        this.enviando = false;\n        // console.log(err.error);\n        // this.errorMessage = err.error.message;\n        this.errorMessage = 'Los datos son incorrectos.';\n        this.isLoginFailed = true;\n        //console.log(err.error.message);\n      }\n    );\n  }\n\n  redirectPage(){\n    if(this.isLoggedIn) {\n      this._router.navigate(['/cuenta/inicio']).then(() => {\n        window.location.reload();\n      });\n    }\n  }  \n\n}\n","<!-- Section -->\n<section>\n    <div class=\"container text-center\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <div class=\"panel \">\n                    <div class=\"panel-body\">\n                        <div class=\"heading-text heading-gradient heading-line text-center\">\n                            <h4 class=\"text-center\"><span>Iniciar sesión</span></h4>\n                        </div>\n                        <div *ngIf=\"isLoginFailed\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                            {{ errorMessage }}\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\n                        </div>\n                        <form #formLogin=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"form-group\">\n                                <label class=\"sr-only\">Email</label>\n                                <input type=\"text\" placeholder=\"Email\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\">\n                            </div>\n                            <div class=\"form-group m-b-5\">\n                                <label class=\"sr-only\">Contraseña</label>\n                                <input type=\"password\" placeholder=\"Contraseña\" class=\"form-control\" autocomplete=\"on\" name=\"password\" [(ngModel)]=\"form.password\">\n                            </div>\n                            <div class=\"form-group form-inline m-b-10 \">\n                                <div class=\"form-check\">\n                                    <label>\n                                        <input type=\"checkbox\"><small class=\"m-l-10\"> Recuerdame</small>\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"enviando\">\n                                <div class=\"d-flex justify-content-center\">\n                                    <div class=\"spinner-border\" role=\"status\">\n                                        <span class=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"!enviando\">\n                                <input class=\"btn\" type=\"submit\" value=\"Iniciar Sesión\" />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <p>¿No tienes una cuenta? <a href=\"/registro\">Inscríbete</a></p>\n                <p>¿Has olvidado la contraseña? <a href=\"/recuperar-pass\">Recuperar contraseña</a></p>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: Section -->\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Suscripcion } from '@modelsRest/suscripcion';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuscripcionServiceService {\n\n  constructor(private _http:HttpClient) { }\n\n  url= appSettings.apiUrl + \"suscripcion\";\n\n  getSuscripciones():Observable<any>{\n    return this._http.get(this.url);\n  }\n  getSuscripcionesByUsuarioId(userID:number):Observable<any>{\n    return this._http.get(this.url + '/usuario/'+ userID);\n  }\n  getSuscripcion(suscripcion:number):Observable<any>{\n    return this._http.get<Suscripcion>(this.url+\"/\"+suscripcion);\n  }\n\n  deleteSuscripcion(suscripcion:Suscripcion){\n    return this._http.delete<Suscripcion>(this.url+\"/\"+suscripcion.id);\n  }\n\n  createSuscripcion(suscripcion:Suscripcion):Observable<any>{\n    return this._http.post<Suscripcion>(this.url,suscripcion);\n  }\n  updateSuscripcion(suscripcion:Suscripcion): Observable<any> {\n    return this._http.put<Suscripcion>(this.url + \"/\" + suscripcion.id, suscripcion);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CallToActionComponent } from '@shared/components/call-to-action/call-to-action.component';\n@Component({\n  selector: 'app-legal',\n  templateUrl: './legal.component.html',\n  styleUrls: ['./legal.component.css']\n})\nexport class PageLegalComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Aviso legal';\n    this.pageDesc = '';\n    this.pageImg = 'aboutus.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Introducción</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>El presente documento tiene como finalidad el establecer y regular las normas de uso de la página web https://filscentergym.com (en adelante “Web Fil's Center”, entendiendo por Web todas las páginas y sus contenidos propiedad de FIL's Center GYM, S.L. a las cuales se accede a través del dominio www.filscentergym.com y sus subdominios.</p>\n                <p>Mediante esta web, FIL's Center GYM, S.L. pretende ofrecer el máximo de información acerca de sus servicios, actividades, eventos, formación, etc., poniendo a disposición de los usuarios una herramienta de conocimiento de todas las áreas y actividades que le corresponden.</p>\n                <p>La utilización de esta página, así como de los servicios que en ella se ofrecen, supondrá la aceptación plena y sin reservas de todas y cada una de las condiciones generales recogidas en el presente Aviso Legal (en adelante las “Condiciones Generales”), por lo que el usuario deberá de ser consciente de la importancia de leerlas cuando visite la Web. El hecho de acceder a esta Web implica el conocimiento y aceptación de las siguientes Condiciones Generales por lo que FIL's Center GYM, S.L. recomiendan al usuario su impresión o su descarga y lectura detallada cada vez que acceda a esta Web.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Información General</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>En cumplimiento del artículo 10 de la Ley 34/2002 de Servicios de la Sociedad de la Información y Comercio Electrónico, se informa de que:</p>\n                <p>El titular del dominio y los contenidos de la Web https://filscentergym.com es FIL's Center GYM, S.L. con domicilio social en la Avenida José Gárate, 5. Coslada.28823.</p>\n                <p>Que se encuentra inscrita con el NIF B87297602 en el Registro Mercantil de Madrid: Diario 50; Asiento 883; Fecha de presentación: 27/05/2015; Entrada: 1/2015/64.883.0; Hoja: M-603372 Notario: Florit de Carranza, Antonio José</p>\n                <p>Protocolo: 2015/1541 de 26/05/2015</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Uso de la Web</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>Mediante la aceptación de las presentes Condiciones Generales el usuario se compromete a usar la presente Web y los servicios puestos a su disposición en el mismo, de la manera y en la forma que en él mismo se establece. Quedando obligado a no utilizar la Web, sus contenidos y sus servicios con fines ilícitos y/o contrarios a los fines establecidos en estas Condiciones Generales, que pudieran ser lesivos de derechos y/o intereses de terceros o que de cualquier forma puedan dañar o impedir su correcto funcionamiento o de los servicios que en él se ofrecen u ofrecieran en el futuro.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Ámbito de la Web, Responsabilidad del Usuario</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>Se encuentra comprendida en esta Web la página www.filscentergym.com. El acceso a esta Web es responsabilidad exclusiva de los usuarios. Los riesgos derivados de la utilización de la Web por el usuario serán a su único y exclusivo cargo. FIL's Center GYM, S.L. no será responsable de posibles daños o perjuicios que se pudieran derivar de interferencias omisiones, interrupciones, virus informáticos, averías telefónicas o desconexiones en el funcionamiento operativo de este sistema electrónico, motivadas por causas ajenas a estas dos entidades; de retrasos o bloqueos en el uso del presente sistema electrónico causados por deficiencias o sobrecargas en su Centro de Procesos de Datos, de líneas telefónicas, en el sistema de Internet o en otros sistemas electrónicos; ni tampoco de daños que puedan ser causados por terceras personas mediante intromisiones ilegítimas fuera del control de FIL's Center GYM, S.L.</p>\n                <p>Asimismo, se exonera a FIL's Center GYM, S.L. de responsabilidad ante cualquier daño o perjuicio que pudiera sufrir el usuario como consecuencia de errores, defectos u omisiones, en la información facilitada por esta web siempre que proceda de fuentes ajenas.</p>\n            </div>  \n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Actualidad y Modificación de la Información</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>La información que aparece en esta Web es la vigente en la fecha de su última actualización. FIL's Center GYM, S.L. se reserva el derecho a actualizar, modificar o eliminar la información de esta Web, pudiendo limitar o no permitir el acceso al mismo. FIL's Center GYM, S.L. se reserva la facultad de efectuar, en cualquier momento, cuantos cambios y modificaciones estime convenientes, pudiendo hacer uso de tal facultad en cualquier momento y sin previo aviso.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Contenidos</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center GYM, S.L. realiza los máximos esfuerzos para evitar cualquier error en los contenidos que pudieran aparecer en esta Web. FIL's Center GYM, S.L. no garantiza, ni se responsabiliza de las consecuencias que pudieran derivarse de los errores en los contenidos que pudieran aparecer en esta Web proporcionados por terceros.</p>\n                <p>FIL's Center GYM, S.L. no se responsabiliza en modo alguno de aquellos contenidos, actividades comerciales, productos y servicios incluidos que pudiesen visualizarse mediante enlaces electrónicos (links) si los hubiera y cuando los hubiere, de forma directa o indirectamente, a través de esta Web.</p>\n                <p>FIL's Center GYM, S.L. se reserva el derecho a impedir o prohibir el acceso a la Web a cualquier usuario de Internet que introduzca en esta Web cualquier contenido contrario a las normas legales o sea inmoral, reservándose el derecho de ejercer las medidas legales que estime oportunas para evitar este tipo de conductas.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Navegación, Acceso y Seguridad</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center GYM, S.L. realiza los máximos esfuerzos para que la navegación se realice en las mejores condiciones y evitar los perjuicios de cualquier tipo que pudiesen ocasionarse durante la misma.</p>\n                <p>FIL's Center GYM, S.L. no se hace responsable de los perjuicios, de cualquier índole, que pudieran ocasionarse a los usuarios por la utilización de otros navegadores o versiones distintas de los navegadores para los que ha sido diseñada la Web.</p>\n                <p>FIL's Center GYM, S.L. no se responsabiliza ni garantizan que el acceso a esta Web sea interrumpido o que esté libre de error. Tampoco se responsabilizan o garantizan que el contenido o software al que pueda accederse a través de esta Web, esté libre de error o cause un daño.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Protección de datos</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center GYM, S.L. informa a los usuarios de esta Web que tanto respeta la legislación vigente en materia de protección de datos, adoptando para ello las medidas técnicas y organizativas necesarias para evitar la pérdida, mal uso, alteración, acceso no autorizado y robo de los datos personales facilitados, en su caso, a través de la Web, habida cuenta del estado de la tecnología, la naturaleza de los datos y los riesgos a los que están expuestos. En el supuesto de que al hacer uso de los servicios que FIL's Center GYM, S.L. brinda en esta Web los usuarios debieran rellenar datos de carácter personal, FIL's Center GYM, S.L. -en cumplimiento de la normativa vigente- informará cumplidamente al usuario de sus derechos y recabará su consentimiento expreso e inequívoco para el tratamiento de sus datos de carácter personal.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Sobre el uso de cookies</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center Gym S.L. por su propia cuenta o la de un tercero contratado para la prestación de servicios de medición, puede utilizar cookies cuando un usuario navega por el sitio web. Las cookies son ficheros enviados al navegador por medio de un servidor web con la finalidad de registrar las actividades del usuario durante su tiempo de navegación.</p>\n                <p>Las cookies utilizadas por el sitio web se asocian únicamente con un usuario anónimo y su ordenador, y no proporcionan por sí mismas los datos personales del usuario.</p>\n                <p>Mediante el uso de las cookies resulta posible que el servidor donde se encuentra la web, reconozca el navegador web utilizado por el usuario con la finalidad de que la navegación sea más sencilla, permitiendo, por ejemplo, el acceso a los usuarios que se hayan registrado previamente, acceder a las áreas, servicios, promociones o concursos reservados exclusivamente a ellos sin tener que registrarse en cada visita. Se utilizan también para medir la audiencia y parámetros del tráfico, controlar el progreso y número de entradas.</p>\n                <p>Si no se habilitan las cookies, es posible que algunas funciones y páginas no se muestren correctamente.</p>\n                <p>Para borrar las cookies en el ordenador, hacer clic en «Ayuda» del menú del navegador para ver las instrucciones.</p>\n                <p>El usuario también tiene la posibilidad de configurar su navegador para ser avisado de la recepción de cookies y para impedir su instalación en su equipo. Por favor, consulte las instrucciones y manuales de su navegador para ampliar esta información.</p>\n                <p>Para utilizar el sitio web, no resulta necesario que el usuario permita la instalación de las cookies enviadas por el sitio web, o el tercero que actúe en su nombre, sin perjuicio de que sea necesario que el usuario inicie una sesión como tal en cada uno de los servicios cuya prestación requiera el previo registro o “login”.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Propiedad Intelectual y Derechos de Autor</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center GYM, S.L. declara que salvo que se indique lo contrario en la Web, los textos, imágenes, ilustraciones, diseños, iconos, fotografías, segmentos de vídeo, segmentos de sonido y demás materiales que se encuentren en la Web y cualesquiera otras creaciones intelectuales y/o invenciones o descubrimientos científicos y técnicos, cualquiera que sea su aplicación empresarial o industrial (en adelante colectivamente denominados el “Contenido” han sido creados o inventados por FIL's Center GYM, S.L. o cedidos, licenciados, transmitidos o autorizados a ésta por sus titulares y/o cesionarios. El Usuario se compromete a no suprimir o alterar cualesquiera signo distintivo utilizado en la Web, tales como, con carácter no exhaustivo, marcas, nombres comerciales (gráficos, logotipos, etcétera), el “copyright” y demás datos identificativos de los derechos de FIL's Center GYM, S.L. o de terceros titulares incorporados en la Web.</p>\n                <p>Son propiedad de FIL's Center GYM, S.L. igualmente todos los derechos sobre cualesquiera obras, inventos, descubrimientos, patentes, ideas, conceptos, actualizaciones y las mejoras relacionadas con la Web, sus sistemas, aplicaciones y programas o con los servicios que estas entidades prestas, que sean creados, realizados, desarrollados o puestos en práctica por primera vez por ellas, ya sea por sí sola o con la ayuda de los usuarios de la Web, en el transcurso o como resultado de algún diseño, desarrollo o cualquier otra tarea realizada de conformidad con el Contrato.</p>\n                <p>El Usuario no podrá utilizar el nombre ni las marcas, símbolos, logotipos o signos distintivos de titularidad de FIL's Center GYM, S.L. sin el consentimiento expreso y escrito de estas.</p>\n                <p>En caso de que cualquier usuario o tercero considere que cualquiera de los contenidos existentes en la Web suponga una violación de los derechos de autor u otros derechos de protección de la propiedad intelectual, rogamos que lo comunique a la siguiente dirección: FIL's Center GYM, S.L. en la Avenida José Gárate nº 5, 28823 Coslada; e-mail: Esta dirección de correo electrónico está siendo protegida contra los robots de spam. Necesita tener JavaScript habilitado para poder verlo.”>info@filscentergym.com. Esta dirección de correo electrónico está protegida contra los robots de spam, necesita tener Javascript activado para poder verla.</p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Política de privacidad</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>En cumplimiento de la normativa vigente en materia de Protección de Datos personales, le informamos que los datos personales facilitados por los usuario de esta Web en sus distintos formularios serán incorporados y tratados en uno o más ficheros titularidad de FIL's Center GYM S.L. con la finalidad de gestionar su solicitud y facilitarle el alta como cliente, así como para mantenerle informado, incluso por vía electrónica, de futuras noticias y novedades relacionadas con nuestra empresa.</p>\n                <p>Los datos que se solicitan en los distintos formularios marcados con asterisco (*) son los  estrictamente necesarios para poder proporcionarle el servicio solicitado o poder contactar con el usuario.</p>\n                <p>El usuario garantiza la veracidad de los datos personales proporcionados, siendo el único responsable de cualquier daño o perjuicio, directo o indirecto, que pudiera ocasionar a FIL's Center GYM S.L.  a causa de la cumplimentación de los formularios con datos falsos, inexactos o incompletos.</p>\n                <p>En caso de que el usuario incluya datos personales de terceras personas  deberá, con carácter previo a su inclusión, informarles de lo establecido en la presente política de privacidad, siendo el único responsable de su inclusión.</p>\n                <p>FIL's Center GYM S.L.. se compromete a no ceder los datos de carácter personal facilitados por los usuarios de esta web a terceras personas o empresas sin el consentimiento previo, expreso, informado e inequívoco del afectado.</p>\n                <p>Los usuarios pueden ejercitar los derechos de acceso, rectificación, cancelación, limitación del tratamiento,  oposición y portabilidad reconocidos en la actual legislación mediante comunicación escrita al responsable del tratamiento que se cita abajo, o a la dirección de correo electrónico:  info@filscentergym.com  o mediante el formulario de ejercicio de derechos proporcionado en la dirección antes indicada.</p>\n                <p>La aceptación de los términos expuestos en esta política de privacidad en necesaria para el envío y transmisión de la solicitud realizada.</p>\n                <h4>Responsable del Tratamiento:</h4>\n                <p>\n                FIL's Center Gym<br/>\n                AVDA. JOSE GARATE, 5<br/>\n                COSLADA<br/>\n                MADRID<br/>\n                </p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Política de privacidad Redes Sociales</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center GYM, S.L. informa que los datos personales cedidos para el uso en las redes sociales pueden ser cedidos entre las diferentes empresas del grupo FIL's Center Gym.</p>\n                <p>Los usuarios pueden ejercitar los derechos de acceso, rectificación, cancelación, limitación del tratamiento,  oposición y portabilidad reconocidos en la actual legislación mediante comunicación escrita al responsable del tratamiento que se cita abajo, o a la dirección de correo electrónico:  info@filscentergym.com  o mediante el formulario de ejercicio de derechos proporcionado en la dirección antes indicada.</p>\n                <p>La aceptación de los términos expuestos en esta política de privacidad en necesaria para el envío y transmisión de la solicitud realizada.</p>\n                <h4>Responsable del Tratamiento:</h4>\n                <p>\n                FIL's Center Gym<br/>\n                AVDA. JOSE GARATE, 5<br/>\n                COSLADA<br/>\n                MADRID<br/>\n                </p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"font-weight-600\">Jurisdicción y Legislación aplicable</h4>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>Las Normas de Uso que se encuentran en el presente Acuerdo Legal, se rigen por la ley Española. Tanto FIL's Center GYM, S.L. como los usuarios de la Web están de acuerdo en que para cualquier discrepancia que pueda surgir en cuanto a la interpretación, cumplimiento y/o ejecución, de las presentes normas se someterán expresamente a la jurisdicción de los Jueces y Tribunales competentes de Madrid, con renuncia expresa, a cualquier otro fuero que pudiera corresponderles.</p>\n            </div>        \n        </div>\n    </div>\n</section>\n\n<shared-call-to-action\n    [title]=\"'Te esperamos'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [img]=\"'haltere.jpg'\"\n    [overlayStyle] = \"11\"\n    [btnTxt]=\"'Inscríbete'\"\n    [btnUrl]=\"'/registro'\"\n    [btnClass]=\"'btn-light btn-lg'\"\n    ></shared-call-to-action>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'aboutus-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-6\">\n                <div class=\"heading-text heading-section\">\n                    <h5 class=\"text-uppercase\">¡DESCUBRE EL SOCIAL FITNESS EN FIL'S CENTER!</h5>\n                    <h2 class=\"font-weight-600\">Somos una comunidad</h2>\n                    <p class=\"font-weight-400\">\n                        Nos unen muchas más cosas que el gusto por hacer deporte y un estilo de vida saludable. En Gymage nos gusta disfrutar de la vida al máximo, hacer nuevas amistades, compartir buenos momentos… Juntos somos capaces de llegar más lejos, de superar retos y desafiar los límites. La comunidad de socios Gymage se hace, día a día, más fuerte y nos encantaría contar contigo. ¡Somos mucho más que un gimnasio! ¿Te atreves a descubrirlo?\n                    </p>\n                    <a href=\"#\" class=\"btn btn-icon-holder btn-shadow btn-rounded\">Inscríbete<i class=\"icon-user-plus\"></i></a>\n                    <a href=\"#\" class=\"btn btn-icon-holder btn-shadow btn-rounded\">Área Personal<i class=\"icon-log-in\"></i></a>\n                    <a href=\"#\" class=\"btn btn-icon-holder btn-shadow btn-rounded\">Contacto<i class=\"icon-mail\"></i></a>\n                </div>\n            </div>\n            <div class=\"col-lg-6\">\n                <img src=\"assets/fitness/images/el_gym.jpg\" class=\"img-fluid rounded\" alt=\"El Gymnasio\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <a href=\"#\" class=\"btn btn-info btn-icon-holder btn-shadow btn-rounded mt-4\">Horario Actividades<i class=\"icon-calendar\"></i></a>\n            </div>\n        </div>\n    </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { SharedModule } from '@shared/shared.module';\nimport { PageCuentaPerfilComponent } from './pages/perfil/perfil.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { CuentaRoutingModule } from './cuenta-routing.module';\nimport { PageCuentaDatosComponent } from './components/datos/datos.component';\nimport { PageCuentaInicioComponent } from './components/inicio/inicio.component';\nimport { CuentaInicioHorarioComponent } from './components/inicio-horario/inicio-horario.component';\nimport { CuentaInicioTablasComponent } from './components/inicio-tablas/inicio-tablas.component';\nimport { CuentaUploadImageComponent } from './components/upload-image/upload-image.component';\nimport { PageCuentaFacturasComponent } from './components/facturas/facturas.component';\n\n@NgModule({\n  declarations: [\n    PageCuentaPerfilComponent,\n    MenuComponent,\n    PageCuentaDatosComponent,\n    PageCuentaInicioComponent,\n    CuentaInicioHorarioComponent,\n    CuentaInicioTablasComponent,\n    CuentaUploadImageComponent,\n    PageCuentaFacturasComponent\n  ],\n  imports: [\n    SharedModule,\n    CuentaRoutingModule,\n  ],\n  exports: [PageCuentaPerfilComponent, CuentaRoutingModule, PageCuentaDatosComponent, PageCuentaFacturasComponent, PageCuentaInicioComponent],\n  providers: [DatePipe]\n})\nexport class CuentaModule { }\n","<h3>Nuevo Tipo De Suscripcion</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addTipoSuscripcion(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"nombre\"\n          #nombreTipoSuscripcion=\"ngModel\"\n          [(ngModel)]=\"nuevoTipoSuscripcion.nombre\"\n          placeholder=\"Nombre\"\n          required\n          min=\"1\"\n          max=\"1000\"\n          pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ0-9]){2,100}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && nombreTipoSuscripcion.invalid) ||\n              (nombreTipoSuscripcion.touched && !nombreTipoSuscripcion.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && nombreTipoSuscripcion.invalid) ||\n            (nombreTipoSuscripcion.touched && !nombreTipoSuscripcion.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"nombreTipoSuscripcion.errors.required || nombreTipoEjercicio.invalid\">\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Duración</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"duracion\"\n          #duracionTipoSuscripcion=\"ngModel\"\n          [(ngModel)]=\"nuevoTipoSuscripcion.duracion\"\n          placeholder=\"Duración\"\n          required\n          min=\"1\"\n          max=\"365\"\n          pattern=\"^\\d{1,3}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && duracionTipoSuscripcion.invalid) ||\n              (duracionTipoSuscripcion.touched && !duracionTipoSuscripcion.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && duracionTipoSuscripcion.invalid) ||\n            (duracionTipoSuscripcion.touched && !duracionTipoSuscripcion.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"duracionTipoSuscripcion.errors.required || duracionTipoEjercicio.invalid\">\n            * Duración no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Tarifa</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"tarifa\"\n          #tarifaTipoSuscripcion=\"ngModel\"\n          [(ngModel)]=\"nuevoTipoSuscripcion.tarifa\"\n          placeholder=\"Tarifa de TipoSuscripcion €\"\n          required\n          pattern=\"^\\d+(\\.\\d{1,3})?\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && tarifaTipoSuscripcion.invalid) ||\n              (tarifaTipoSuscripcion.touched && !tarifaTipoSuscripcion.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && tarifaTipoSuscripcion.invalid) ||\n            (tarifaTipoSuscripcion.touched && !tarifaTipoSuscripcion.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"tarifaTipoSuscripcion.errors.required || tarifaTipoEjercicio.invalid\">\n            * Tarifa no válida\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>Tipo de suscripción <span class=\"text-danger\">{{nuevoTipoSuscripcion.nombre}}</span> registrado!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TipoSuscripcionServiceService } from \"@servicesRest/tipo_suscripcion/tipo-suscripcion-service.service\";\n\n@Component({\n  selector: \"app-tipo-suscripcion-add\",\n  templateUrl: \"./tipo-suscripcion-add.component.html\",\n  styleUrls: [\"./tipo-suscripcion-add.component.css\"],\n})\nexport class TipoSuscripcionAddComponent implements OnInit {\n  nuevoTipoSuscripcion: any;\n  constructor(\n    private _service: TipoSuscripcionServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevoTipoSuscripcion = {};\n  }\n\n  ngOnInit(): void {}\n\n  addTipoSuscripcion(create, errorModal) {\n    this._service.createTipoSuscripcion(this.nuevoTipoSuscripcion).subscribe(\n      (data) => {\n        this.modalService.open(create, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 3000);\n      },\n      (err) => {\n        this.modalService.open(errorModal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    enabled\n    (click)=\"habilitarTaquilla()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Taquilla\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarTaquilla()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Taquilla\n  </button>\n</div>\n<div *ngIf=\"mostrarTaquillaAdd == true\">\n  <app-taquilla-add></app-taquilla-add>\n</div>\n\n<h3 class=\"card-title text-left\">Taquillas</h3>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Número\n        </th>\n\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let taquilla of taquillas\" class=\"text-center\">\n        <td>{{ taquilla.numero }}</td>\n        <td>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Edit\"\n          (click)=\"open(content,taquilla)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.taquilla)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Número</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<!-- modal delete -->\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar la taquilla <span class=\"text-danger\">{{taquillaAux.numero}} ?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete(usuario)\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<!--modal update-->\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Taquilla</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"taquillaUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalRol)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">Número Taquilla</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"numero\"\n              #numeroTaquilla=\"ngModel\"\n              [(ngModel)]=\"taquillaUpdate.numero\"\n              placeholder=\"Número de taquilla\"\n              required\n              min=\"1\"\n              max=\"1000\"\n              pattern=\"(([1-9])|([1-9])([0-9])|([1-9])([0-9])([0-9])|1000)\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && numeroTaquilla.invalid) ||\n                  (numeroTaquilla.touched && !numeroTaquilla.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && numeroTaquilla.invalid) ||\n                (numeroTaquilla.touched && !numeroTaquilla.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"numeroTaquilla.errors.required || numeroTaquilla.invalid\"\n              >\n                * Número no válido\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalRol let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Taquilla } from \"@modelsRest/Taquilla\";\nimport { TaquillaServiceService } from \"@servicesRest/taquilla/taquilla-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HelperService } from \"@core/services/helper.service\";\n\n@Component({\n  selector: \"app-taquilla-list\",\n  templateUrl: \"./taquilla-list.component.html\",\n  styleUrls: [\"./taquilla-list.component.css\"],\n})\nexport class TaquillaListComponent implements OnInit {\n  mostrarTaquillaAdd: boolean = false;\n  taquillas: Taquilla[];\n\n  //update\n  taquillaUpdate: any;\n  textoModal: string;\n\n  //confirm delete\n  taquillaAux: any;\n\n  constructor(\n    private _service: TaquillaServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {\n    this.taquillaAux = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isRolOK(\"admin\");\n\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getTaquillas().subscribe((data) => {\n      this.taquillas = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteTaquilla(this.taquillaAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal) {\n    this._service.updateTaquilla(this.taquillaUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Taquilla actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarTaquilla() {\n    this.mostrarTaquillaAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n  deshabilitarTaquilla() {\n    this.mostrarTaquillaAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, taquilla: Taquilla) {\n    this._service.getTaquilla(taquilla.id).subscribe((data) => {\n      this.taquillaUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n  //abre modal confirm delete\n  openModalDelete(confirmDelete, taquilla: Taquilla) {\n    this.taquillaAux = taquilla;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageClasesComponent } from './pages/clases/clases.component';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { AllClasesComponent } from './components/all-clases/all-clases.component';\n\n@NgModule({\n  declarations: [PageClasesComponent, AllClasesComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageClasesComponent]\n})\nexport class ClasesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PortfolioItemComponent } from '@shared/components/portfolio-item/portfolio-item.component';\n@Component({\n  selector: 'aboutus-galeria',\n  templateUrl: './galeria.component.html',\n  styleUrls: ['./galeria.component.css']\n})\nexport class GaleriaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"content col-md-12\">\n                <div class=\"heading-text text-center heading-section\">\n                    <h5 class=\"text-uppercase\">Ven a vernos. Te va a encantar.</h5>\n                    <h2 class=\"font-weight-600\"><span>Nuestras Instalaciones</span></h2>\n                    <p class=\"font-weight-400\">Contamos con mucho espacio y cumplimos con todas las medidas de higiene y protección</p>\n                </div>\n\n                <!--Gallery Carousel -->\n                <div class=\"carousel\" data-items=\"3\" data-dots=\"false\" data-lightbox=\"gallery\">\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_1.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_2.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_3.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_4.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_5.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_6.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_7.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_8.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_9.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_10.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                    <galeria-portfolio-item [itemTitle]=\"'Nuestras Instalaciones'\"  [itemImage]=\"'assets/fitness/images/el_gym/el_gym_11.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n                </div>\n                <!--Gallery Carousel -->\n            </div>\n        </div>\n    </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Sala } from '@modelsRest/sala';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SalaServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'sala';\n\n  getSalas(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getSala(sala:number):Observable<any>{\n    return this._http.get<Sala>(this.url+\"/\"+sala);\n  }\n\n  deleteSalas(sala:Sala){\n    return this._http.delete<Sala>(this.url+\"/\"+sala.id);\n  }\n\n  createSala(sala:Sala):Observable<any>{\n    return this._http.post<Sala>(this.url,sala);\n  }\n  updateSala(sala: Sala): Observable<any> {\n    return this._http.put<Sala>(this.url + \"/\" + sala.id, sala);\n  }\n  \n}\n","<h3>Nuevo Ejercicio</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addEjercicioSerie(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n            <label for=\"semana\">(*) Veces por Semana</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"semana\"\n              name=\"semana\"\n              #ejercicioSerieSemana=\"ngModel\"\n              [(ngModel)]=\"nuevaSerieEjercicio.porSemana\"\n              placeholder=\"Veces a realizar por semana\"\n              required\n              min=\"1\"\n              max=\"6\"\n              pattern=\"^([1-9]){1}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieSemana.invalid) ||\n                  (ejercicioSerieSemana.touched && !ejercicioSerieSemana.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieSemana.invalid) ||\n                (ejercicioSerieSemana.touched && !ejercicioSerieSemana.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"ejercicioSerieSemana.errors.required || ejercicioSerieSemana.invalid\">\n                * Veces seleccionadas no válida\n              </div>\n            </div>\n          </div>\n\n\n\n\n\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"repeticiones\">(*) Repeticiones</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"repeticiones\"\n              name=\"repeticiones\"\n              #ejercicioSerieRepeticiones=\"ngModel\"\n              [(ngModel)]=\"nuevaSerieEjercicio.repeticiones\"\n              placeholder=\"Series del ejercicio\"\n              required\n              min=\"1\"\n              max=\"999\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                  (ejercicioSerieRepeticiones.touched && !ejercicioSerieRepeticiones.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                (ejercicioSerieRepeticiones.touched && !ejercicioSerieRepeticiones.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"ejercicioSerieRepeticiones.errors.required || ejercicioSerieRepeticiones.invalid\">\n                * Repeticiones no válidas\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"series\">(*) Series</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"series\"\n              name=\"series\"\n              #ejercicioSerieSeries=\"ngModel\"\n              [(ngModel)]=\"nuevaSerieEjercicio.series\"\n              placeholder=\"Series del ejercicio\"\n              required\n              min=\"1\"\n              max=\"15\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieSeries.invalid) ||\n                  (ejercicioSerieSeries.touched && !ejercicioSerieSeries.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieSeries.invalid) ||\n                (ejercicioSerieSeries.touched && !ejercicioSerieSeries.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"ejercicioSerieSeries.errors.required || ejercicioSerieSeries.invalid\">\n                * Series seleccionadas no válida\n              </div>\n            </div>\n          </div>\n\n\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"ejercicio\">(*) Ejercicio</label>\n        <select\n          class=\"form-control\"\n          name=\"ejercicio\"\n          id=\"ejercicio\"\n          #ejercicioSerieEjercicio=\"ngModel\"\n          [(ngModel)]=\"ejercicioId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && ejercicioSerieEjercicio.invalid) ||\n              (ejercicioSerieEjercicio.touched &&\n                !ejercicioSerieEjercicio.valid)\n          }\"\n          [(ngModel)]=\"ejerSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let ejercicio of ejercicios\"\n            value=\"{{ ejercicio.id }}\"\n          >\n            {{ ejercicio.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && ejercicioSerieEjercicio.invalid) ||\n            (ejercicioSerieEjercicio.touched && !ejercicioSerieEjercicio.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              ejercicioSerieEjercicio.errors.required ||\n              ejercicioSerieEjercicio.invalid\n            \"\n          >\n            * Seleccione un ejercicio\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"tabla\">(*) Tabla de ejercicio</label>\n        <select\n          class=\"form-control\"\n          name=\"tabla\"\n          id=\"tabla\"\n          #ejercicioSerieTabla=\"ngModel\"\n          [(ngModel)]=\"tablaId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && ejercicioSerieTabla.invalid) ||\n              (ejercicioSerieTabla.touched && !ejercicioSerieTabla.valid)\n          }\"\n          [(ngModel)]=\"tablaSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let tablaEjercicio of tablasEjercicio\"\n            value=\"{{ tablaEjercicio.id }}\"\n          >\n            {{tablaEjercicio.suscriptor.nombre}} (\n            {{ tablaEjercicio.fechaInicio | date:\"M/d/yy\"}} -\n            {{ tablaEjercicio.fechaFin | date:\"M/d/yy\" }})\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && ejercicioSerieTabla.invalid) ||\n            (ejercicioSerieTabla.touched && !ejercicioSerieTabla.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              ejercicioSerieTabla.errors.required || ejercicioSerieTabla.invalid\n            \"\n          >\n            * Seleccione un ejercicio\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Ejercicio Serie <span class=\"text-danger\">{{nuevaSerieEjercicio.ejercicio.nombre}}-{{nuevaSerieEjercicio.series}}x{{nuevaSerieEjercicio.repeticiones}}</span> registrado!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Ejercicio } from \"@modelsRest/Ejercicio\";\nimport { TablaEjercicio } from \"@modelsRest/TablaEjercicio\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { EjercicioServiceService } from \"@servicesRest/ejercicio/ejercicio-service.service\";\nimport { EjercicioSerieServiceService } from \"@servicesRest/ejercicio_serie/ejercicio-serie-service.service\";\nimport { TablaEjercicioServiceService } from \"@servicesRest/tabla_ejercicio/tabla-ejercicio-service.service\";\n\n@Component({\n  selector: \"app-ejercicio-serie-add\",\n  templateUrl: \"./ejercicio-serie-add.component.html\",\n  styleUrls: [\"./ejercicio-serie-add.component.css\"],\n})\nexport class EjercicioSerieAddComponent implements OnInit {\n  nuevaSerieEjercicio: any;\n\n  ejercicios: Ejercicio[];\n  tablasEjercicio: TablaEjercicio[];\n\n  ejercicioId: number;\n  tablaId: number;\n\n  ejerSelect = \"\";\n  tablaSelect = \"\";\n  constructor(\n    private _serviceEjercicio: EjercicioServiceService,\n    private _serviceTablaEjercicio: TablaEjercicioServiceService,\n    private _service: EjercicioSerieServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaSerieEjercicio = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceEjercicio.getEjercicios().subscribe((data) => {\n      this.ejercicios = data;\n    });\n    this._serviceTablaEjercicio.getTablasEjercicios().subscribe((data) => {\n      this.tablasEjercicio = data;\n    });\n  }\n  obtenerTabla() {\n    return this._serviceTablaEjercicio\n      .getTablaEjercicio(this.tablaId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaSerieEjercicio.tablaEjercicio = data;\n      });\n  }\n\n  obtenerEjercicio() {\n    return this._serviceEjercicio\n      .getEjercicio(this.ejercicioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaSerieEjercicio.ejercicio = data;\n      });\n  }\n  addEjercicioSerie(create, errorModal) {\n    this.obtenerTabla()\n      .then(() => this.obtenerEjercicio())\n      .then(() => {\n        this._service.createEjercicioSerie(this.nuevaSerieEjercicio).subscribe(\n          (data) => {\n            this.modalService.open(create, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n            setTimeout(function () {\n              window.location.reload();\n            }, 3000);\n          },\n          (err) => {\n            this.modalService.open(errorModal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n      });\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n//const AUTH_API = 'http://localhost:8080/webservice/';\nconst AUTH_API = appSettings.apiUrl;\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n    \n  constructor(private _http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this._http.post(AUTH_API + 'authenticate', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(data: any): Observable<any> {\n    return this._http.post(AUTH_API + 'signup', {data}, httpOptions);\n  }\n}","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    (click)=\"habilitarEjercicioSerie()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Ejercicio Serie\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarEjercicioSerie()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Ejercicio Serie\n  </button>\n</div>\n<div *ngIf=\"mostrarEjercicioSerieAdd == true\">\n  <app-ejercicio-serie-add></app-ejercicio-serie-add>\n</div>\n\n<h3 class=\"\">Ejercicios Series</h3>\n\n<div class=\"card-text\">\n  <div class=\"card-text\">\n    <table\n      id=\"datatable\"\n      class=\"table table-bordered table-hover dataTable text-center\"\n      style=\"width: 100%\"\n      role=\"grid\"\n      aria-describedby=\"datatable_info\"\n    >\n      <thead>\n        <tr role=\"row\">\n          <th\n            id=\"\"\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Tabla\n          </th>\n          <th\n            id=\"\"\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Nombre ejercicio\n          </th>\n          <th\n            id=\"\"\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Series\n          </th>\n          <th\n            id=\"\"\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Repeticiones\n          </th>\n          <th\n            id=\"\"\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Veces por semana\n          </th>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Acciones\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let ejercicioSerie of ejercicioSeries\" class=\"text-center\">\n          <td>{{ ejercicioSerie.tablaEjercicio.id }}</td>\n          <td class=\"text-left\">{{ ejercicioSerie.ejercicio.nombre }}</td>\n          <td>{{ ejercicioSerie.series }}</td>\n          <td>{{ ejercicioSerie.repeticiones }}</td>\n          <td>{{ ejercicioSerie.porSemana }}</td>\n          <td>\n            <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Edit\"\n            (click)=\"open(content,ejercicioSerie)\"\n              ><i class=\"icon-edit\"></i\n            ></a>\n            <a\n              class=\"ml-2\"\n              data-toggle=\"tooltip\"\n              data-original-title=\"Delete\"\n              (click)=\"openModalDelete(confirmDelete,this.ejercicioSerie)\"\n              ><i class=\"icon-trash-2\"></i\n            ></a>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <th id=\"\">Tabla</th>\n          <th id=\"\">Nombre ejercicio</th>\n          <th id=\"\">Series</th>\n          <th id=\"\">Repeticiones</th>\n          <th id=\"\">Veces por semana</th>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar el ejercicio serie <span class=\"text-danger\">{{ejercicioSerieAux.ejercicio.nombre}}-{{ejercicioSerieAux.series}}x{{ejercicioSerieAux.repeticiones}} ({{ejercicioSerieAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Ejercicio</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"ejercicioSerieUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update()\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"semana\">(*) Veces por Semana</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"semana\"\n              name=\"semana\"\n              #ejercicioSerieSemana=\"ngModel\"\n              [(ngModel)]=\"ejercicioSerieUpdate.porSemana\"\n              placeholder=\"Veces a realizar por semana\"\n              required\n              min=\"1\"\n              max=\"6\"\n              pattern=\"^([1-9]){1}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieSemana.invalid) ||\n                  (ejercicioSerieSemana.touched && !ejercicioSerieSemana.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieSemana.invalid) ||\n                (ejercicioSerieSemana.touched && !ejercicioSerieSemana.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieSemana.errors.required ||\n                  ejercicioSerieSemana.invalid\n                \"\n              >\n                * Veces seleccionadas no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"repeticiones\">(*) Repeticiones</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"repeticiones\"\n              name=\"repeticiones\"\n              #ejercicioSerieRepeticiones=\"ngModel\"\n              [(ngModel)]=\"ejercicioSerieUpdate.repeticiones\"\n              placeholder=\"Series del ejercicio\"\n              required\n              min=\"1\"\n              max=\"999\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                  (ejercicioSerieRepeticiones.touched &&\n                    !ejercicioSerieRepeticiones.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                (ejercicioSerieRepeticiones.touched &&\n                  !ejercicioSerieRepeticiones.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieRepeticiones.errors.required ||\n                  ejercicioSerieRepeticiones.invalid\n                \"\n              >\n                * Repeticiones no válidas\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"series\">(*) Series</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"series\"\n              name=\"series\"\n              #ejercicioSerieSeries=\"ngModel\"\n              [(ngModel)]=\"ejercicioSerieUpdate.series\"\n              placeholder=\"Series del ejercicio\"\n              required\n              min=\"1\"\n              max=\"15\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieSeries.invalid) ||\n                  (ejercicioSerieSeries.touched && !ejercicioSerieSeries.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieSeries.invalid) ||\n                (ejercicioSerieSeries.touched && !ejercicioSerieSeries.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieSeries.errors.required ||\n                  ejercicioSerieSeries.invalid\n                \"\n              >\n                * Series seleccionadas no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"ejercicio\">(*) Ejercicio</label>\n            <select\n              class=\"form-control\"\n              name=\"ejercicio\"\n              id=\"ejercicio\"\n              #ejercicioSerieEjercicio=\"ngModel\"\n              [(ngModel)]=\"ejercicioId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieEjercicio.invalid) ||\n                  (ejercicioSerieEjercicio.touched &&\n                    !ejercicioSerieEjercicio.valid)\n              }\"\n              [(ngModel)]=\"ejercicioSerieUpdate.ejercicio.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let ejercicio of ejercicios\"\n                value=\"{{ ejercicio.id }}\"\n              >\n                {{ ejercicio.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieEjercicio.invalid) ||\n                (ejercicioSerieEjercicio.touched &&\n                  !ejercicioSerieEjercicio.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieEjercicio.errors.required ||\n                  ejercicioSerieEjercicio.invalid\n                \"\n              >\n                * Seleccione un ejercicio\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"tabla\">(*) Tabla de ejercicio</label>\n            <select\n              class=\"form-control\"\n              name=\"tabla\"\n              id=\"tabla\"\n              #ejercicioSerieTabla=\"ngModel\"\n              [(ngModel)]=\"tablaId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieTabla.invalid) ||\n                  (ejercicioSerieTabla.touched && !ejercicioSerieTabla.valid)\n              }\"\n              [(ngModel)]=\"ejercicioSerieUpdate.tablaEjercicio.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let tablaEjercicio of tablasEjercicio\"\n                value=\"{{ tablaEjercicio.id }}\"\n              >\n                {{ tablaEjercicio.suscriptor.nombre }} (\n                {{ tablaEjercicio.fechaInicio | date: \"M/d/yy\" }} -\n                {{ tablaEjercicio.fechaFin | date: \"M/d/yy\" }})\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieTabla.invalid) ||\n                (ejercicioSerieTabla.touched && !ejercicioSerieTabla.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieTabla.errors.required ||\n                  ejercicioSerieTabla.invalid\n                \"\n              >\n                * Seleccione una tabla\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { EjercicioSerie } from \"@modelsRest/EjercicioSerie\";\nimport { EjercicioSerieServiceService } from \"@servicesRest/ejercicio_serie/ejercicio-serie-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TablaEjercicio } from \"@modelsRest/TablaEjercicio\";\nimport { Ejercicio } from \"@modelsRest/Ejercicio\";\nimport { EjercicioServiceService } from \"@servicesRest/ejercicio/ejercicio-service.service\";\nimport { TablaEjercicioServiceService } from \"@servicesRest/tabla_ejercicio/tabla-ejercicio-service.service\";\nimport { HelperService } from '@core/services/helper.service';\n\n@Component({\n  selector: \"app-ejercicio-serie-list\",\n  templateUrl: \"./ejercicio-serie-list.component.html\",\n  styleUrls: [\"./ejercicio-serie-list.component.css\"],\n})\nexport class EjercicioSerieListComponent implements OnInit {\n  //mostrar add\n  mostrarEjercicioSerieAdd: boolean = false;\n\n  //list\n  ejercicioSeries: EjercicioSerie[];\n\n  //update\n  ejercicioSerieUpdate: any;\n  tablasEjercicio: TablaEjercicio[];\n  ejercicios: Ejercicio[];\n  tablaId: number;\n  ejercicioid: number;\n\n  //confirm delete\n  ejercicioSerieAux: any;\n\n  private closeResult: string = \"\";\n  constructor(\n    private _service: EjercicioSerieServiceService,\n    private _serviceEjercicio: EjercicioServiceService,\n    private _serviceTablasEjercicio: TablaEjercicioServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {\n    this.ejercicioSerieUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getEjercicioSeries().subscribe((data) => {\n      this.ejercicioSeries = data;\n    });\n\n    this._serviceTablasEjercicio.getTablasEjercicios().subscribe((data) => {\n      this.tablasEjercicio = data;\n    });\n\n    this._serviceEjercicio.getEjercicios().subscribe((data) => {\n      this.ejercicios = data;\n    });\n  }\n\n  delete() {\n    this._service\n      .deleteEjercicioSerie(this.ejercicioSerieAux)\n      .subscribe((data) => {\n        window.location.reload();\n      });\n  }\n  update() {\n    this._service\n      .updateEjercicioSerie(this.ejercicioSerieUpdate)\n      .subscribe((data) => {\n        alert(\"Ejercicio Serie Actualizado!\");\n        this.modalService.dismissAll();\n      });\n    window.location.reload();\n  }\n\n  habilitarEjercicioSerie() {\n    this.mostrarEjercicioSerieAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarEjercicioSerie() {\n    this.mostrarEjercicioSerieAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, ejercicioSerie: EjercicioSerie) {\n    this._service.getEjercicioSerie(ejercicioSerie.id).subscribe((data) => {\n      this.ejercicioSerieUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //modal coinfirm delete\n  openModalDelete(confirmDelete, ejercicioSerie: EjercicioSerie) {\n    this.ejercicioSerieAux = ejercicioSerie;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FraseMotivadoraService } from '@core/services';\n@Component({\n  selector: 'shared-call-to-action',\n  templateUrl: './call-to-action.component.html',\n  styleUrls: ['./call-to-action.component.css'],\n  providers: [FraseMotivadoraService]\n})\nexport class CallToActionComponent implements OnInit {\n  public callClass: string;\n  public callImgUrl: string;\n  public callBtnClass: string;\n\n  @Input() paddingTop: string;\n  @Input() paddingBottom: string;\n  @Input() title: string;\n  @Input() classTitle: string;\n  @Input() descr: string;\n  @Input() img: string;\n  @Input() overlayStyle: number;\n  @Input() btnTxt: string;\n  @Input() btnUrl: string;\n  @Input() btnClass: string;\n\n  constructor(\n    public _fraseMotivadoraService: FraseMotivadoraService\n  ) {\n    this.title = 'Te esperamos';\n    this.classTitle = 'text-light text-medium';\n    this.callClass = 'call-to-action background-image m-b-0 ';\n    this.callBtnClass = 'btn btn-light btn-lg btn-rounded';\n    this.callImgUrl = 'assets/fitness/images/parallax/haltere.jpg';\n    this.overlayStyle = 2; \n    this.btnTxt = 'Inscríbete';   \n    this.btnUrl = '/registro';\n    this.descr = this._fraseMotivadoraService.getOneFrase().frase;\n  }\n\n  ngOnInit(): void {\n    if(this.paddingTop) {\n      this.callClass += this.paddingTop + ' ';\n    } else {\n      this.callClass += 'p-t-100 ';\n    }\n    \n    if(this.paddingBottom) {\n      this.callClass += this.paddingBottom + ' ';\n    } else {\n      this.callClass += 'p-b-100';\n    }\n    \n    if(this.img) {\n      this.callImgUrl = 'assets/fitness/images/parallax/' + this.img;\n    }\n\n    if(this.btnClass) {\n      this.callBtnClass = 'btn ' + this.btnClass;\n    }\n  }\n\n}\n","<div\n  [attr.class]=\"callClass\"\n  [attr.style]=\"'background-image: url('+callImgUrl+')'\"\n>\n  <div class=\"bg-overlay\" [attr.data-style]=\"overlayStyle\"></div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-10\" data-animate=\"fadeInUp\" data-animate-delay=\"100\">\n        <h3 [attr.class]=\"classTitle\">{{ title }}</h3>\n        <h4 class=\"text-light\"><span>{{ descr }}</span></h4>\n      </div>\n      <div class=\"col-lg-2\" data-animate=\"fadeInUp\" data-animate-delay=\"200\">\n        <a [attr.href]=\"btnUrl\" [attr.class]=\"callBtnClass\">{{ btnTxt }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","<h3>Nueva Factura</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addFactura()\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Fecha Factura</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          name=\"fecha\"\n          #facturaFecha=\"ngModel\"\n          [(ngModel)]=\"nuevaFactura.fecha\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && facturaFecha.invalid) ||\n              (facturaFecha.touched && !facturaFecha.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && facturaFecha.invalid) ||\n            (facturaFecha.touched && !facturaFecha.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"facturaFecha.errors.required || facturaFecha.invalid\">\n            * Fecha no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"numero\">(*) Número Factura </label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"numero\"\n          #facturaNumero=\"ngModel\"\n          [(ngModel)]=\"nuevaFactura.numero\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required\n          min=\"1\"\n          pattern=\"^([1-9]){1}\\d*\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && facturaNumero.invalid) ||\n              (facturaNumero.touched && !facturaNumero.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && facturaNumero.invalid) ||\n            (facturaNumero.touched && !facturaNumero.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"facturaNumero.errors.required || facturaNumero.invalid\">\n            * Número no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"pagado\">(*) Pagado/Pendiente</label>\n        <select\n          class=\"form-control\"\n          name=\"pagado\"\n          id=\"pagado\"\n          #facturaPagado=\"ngModel\"\n          [(ngModel)]=\"nuevaFactura.pagado\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && facturaPagado.invalid) ||\n              (facturaPagado.touched && !facturaPagado.valid)\n          }\"\n          [(ngModel)]=\"facturaPagadoSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option value=\"true\">Pagado</option>\n          <option value=\"false\">Pendiente</option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && facturaPagado.invalid) ||\n            (facturaPagado.touched && !facturaPagado.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"facturaPagado.errors.required || facturaPagado.invalid\">\n            * Opción no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"usuario\">(*) Usuario Adj.</label>\n        <select\n          class=\"form-control\"\n          name=\"usuario\"\n          id=\"usuario\"\n          #facturaUsuario=\"ngModel\"\n          [(ngModel)]=\"usuarioId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && facturaUsuario.invalid) ||\n              (facturaUsuario.touched && !facturaUsuario.valid)\n          }\"\n          [(ngModel)]=\"facturaUserSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n            {{ usuario.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && facturaUsuario.invalid) ||\n            (facturaUsuario.touched && !facturaUsuario.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"facturaUsuario.errors.required || facturaUsuario.invalid\">\n            * Seleccione un usuario\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { FacturaServiceService } from \"@servicesRest/factura/factura-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\n\n@Component({\n  selector: \"app-factura-add\",\n  templateUrl: \"./factura-add.component.html\",\n  styleUrls: [\"./factura-add.component.css\"],\n})\nexport class FacturaAddComponent implements OnInit {\n  nuevaFactura: any;\n  usuarioId: number;\n  usuarios: Usuario[];\n  facturaUserSelect = \"\";\n  facturaPagadoSelect = \"\";\n\n  constructor(\n    private _serviceUsuario: UsuarioServiceService,\n    private _service: FacturaServiceService,\n    private _router: Router\n  ) {\n    this.nuevaFactura = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceUsuario.getUsuarios().subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n\n  obtenerUsuario() {\n    return this._serviceUsuario\n      .getUsuario(this.usuarioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaFactura.usuario = data;\n      });\n  }\n  addFactura() {\n    this.obtenerUsuario().then(() => {\n      this._service.createFactura(this.nuevaFactura).subscribe(\n        (data) => {\n          alert(\"Factura agregada\");\n          window.location.reload();\n        },\n        (err) => {\n          alert(\"error\");\n        }\n      );\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormularioComponent } from '../../components/formulario/formulario.component';\n@Component({\n  selector: 'app-recover',\n  templateUrl: './recover.component.html',\n  styleUrls: ['./recover.component.css']\n})\nexport class PageRecoverComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Recuperar Contraseña';\n    this.pageDesc = '¿Necesitas una nueva contraseña?';\n    this.pageImg = 'login.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<recover-formulario></recover-formulario>\n","import { NgModule } from '@angular/core';\nimport { PageHomeComponent } from './pages/home/home.component';\n\nimport { HomeSliderComponent } from './components/slider/slider.component';\nimport { HomeClasesComponent } from './components/clases/clases.component';\nimport { HomeTheGymComponent } from './components/thegym/thegym.component';\nimport { HomeHorarioComponent } from './components/horario/horario.component';\nimport { HomeGaleriaComponent } from './components/galeria/galeria.component';\nimport { HomeGoalsComponent } from './components/goals/goals.component';\nimport { HomeMonitorsComponent } from './components/monitors/monitors.component';\nimport { HomeMapComponent } from './components/map/map.component';\n\nimport { SharedModule } from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    PageHomeComponent,\n    HomeSliderComponent,\n    HomeClasesComponent,\n    HomeTheGymComponent,\n    HomeHorarioComponent,\n    HomeGaleriaComponent,\n    HomeGoalsComponent,\n    HomeMonitorsComponent,\n    HomeMapComponent],\n  imports: [\n    SharedModule\n  ],\n  exports:[PageHomeComponent]\n})\nexport class HomeModule { }\n","<section>\n  <div class=\"container\">\n    <div class=\"heading-text text-center heading-section\">\n      <h5 class=\"text-uppercase\">Conoce nuestros servicios</h5>\n      <h2><span>Nuestros Servicios</span></h2>\n      <p>\n        Ofrecemos una gama de servicios muy variada que seguramente te encantará.\n        Aqui te dejamos alguno. No te olvides de visitar nuestra página de servicios para tener conocimiento de todos nuestros servicios.\n      </p>\n      <a href=\"/servicios\" class=\"btn btn-rounded btn-sm\">Ver Todos Nuestros Servicios</a>\n    </div>\n    <hr class=\"p-t-30\">\n    <div class=\"row\">\n      <div class=\"col-lg-4\" *ngFor=\"let servicio of servicios\">\n        <shared-servicio\n          [title]=\"servicio.title\"\n          [descr]=\"servicio.descr\"\n          [icon]=\"servicio.icon\"\n        ></shared-servicio>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ServicioComponent } from '@shared/components/servicio/servicio.component';\nimport { Servicio } from '@shared/models/servicio';\nimport { ServiciosService } from '@core/services';\n@Component({\n  selector: 'aboutus-features',\n  templateUrl: './features.component.html',\n  styleUrls: ['./features.component.css']\n})\nexport class FeaturesComponent implements OnInit {\n  public servicios: Array<Servicio>;\n  constructor(\n    private _serviciosService: ServiciosService\n  ) { }\n\n  ngOnInit(): void {\n    this.servicios = this._serviciosService.getServicios(6);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h3>Nuevo Tipo De Ejercicio</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addTipoEjercicio(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">Nombre Tipo de Ejercicio</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"nombre\"\n          #nombreTipoEjercicio=\"ngModel\"\n          [(ngModel)]=\"nuevoTipoEjercicio.nombre\"\n          placeholder=\"Nombre Tipo de Ejercicio\"\n          required\n          pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ0-9]){2,100}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && nombreTipoEjercicio.invalid) ||\n              (nombreTipoEjercicio.touched && !nombreTipoEjercicio.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && nombreTipoEjercicio.invalid) ||\n            (nombreTipoEjercicio.touched && !nombreTipoEjercicio.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"nombreTipoEjercicio.errors.required || nombreTipoEjercicio.invalid\">\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Tipo ejercicio <span class=\"text-danger\">{{nuevoTipoEjercicio.nombre}}</span> registrado!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoEjercicio } from \"@modelsRest/TipoEjercicio\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TipoEjercicioServiceService } from \"@servicesRest/tipo_ejercicio/tipo-ejercicio-service.service\";\n\n@Component({\n  selector: \"app-tipo-ejercicio-add\",\n  templateUrl: \"./tipo-ejercicio-add.component.html\",\n  styleUrls: [\"./tipo-ejercicio-add.component.css\"],\n})\nexport class TipoEjercicioAddComponent implements OnInit {\n  nuevoTipoEjercicio: any;\n\n  constructor(\n    private _service: TipoEjercicioServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevoTipoEjercicio = {};\n  }\n\n  ngOnInit(): void {}\n\n  addTipoEjercicio(create,errorModal) {\n    this._service\n      .createTipoEjercicio(this.nuevoTipoEjercicio)\n      .subscribe((data) => {\n        this.modalService.open(create, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 3000);\n      },\n      (err) => {\n        this.modalService.open(errorModal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    enabled\n    (click)=\"habilitarTipoSuscripcion()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Tipo Suscripción\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarTipoSuscripcion()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Tipo Suscripción\n  </button>\n</div>\n<div *ngIf=\"mostrarTipoSuscripcionAdd == true\">\n  <app-tipo-suscripcion-add></app-tipo-suscripcion-add>\n</div>\n<h3 class=\"card-title text-left\">Tipos De Suscripción</h3>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n        </th>\n\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Duración\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Tarifa\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tipoSuscripcion of tiposSuscripcion\" class=\"text-center\">\n        <td class=\"text-left\">{{ tipoSuscripcion.nombre }}</td>\n        <td class=\"text-left\">{{ tipoSuscripcion.duracion }} día/s</td>\n        <td class=\"text-left\">{{ tipoSuscripcion.tarifa }} €/mes</td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, tipoSuscripcion)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.tipoSuscripcion)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Duración</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Tarifa</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<!-- modal delete -->\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar el tipo suscripción <span class=\"text-danger\">{{tipoSuscripcionAux.nombre}} ?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete(usuario)\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n\n\n<!-- modal update -->\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">\n      Update Tipo de Suscripción\n    </h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"tipoSuscripcionUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalTipoSuscripcion)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Nombre</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"nombre\"\n              #nombreTipoSuscripcion=\"ngModel\"\n              [(ngModel)]=\"tipoSuscripcionUpdate.nombre\"\n              placeholder=\"Nombre\"\n              required\n              min=\"1\"\n              max=\"1000\"\n              pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ0-9]){2,100}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && nombreTipoSuscripcion.invalid) ||\n                  (nombreTipoSuscripcion.touched &&\n                    !nombreTipoSuscripcion.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && nombreTipoSuscripcion.invalid) ||\n                (nombreTipoSuscripcion.touched && !nombreTipoSuscripcion.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  nombreTipoSuscripcion.errors.required ||\n                  nombreTipoEjercicio.invalid\n                \"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Duración</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"duracion\"\n              #duracionTipoSuscripcion=\"ngModel\"\n              [(ngModel)]=\"tipoSuscripcionUpdate.duracion\"\n              placeholder=\"Duración\"\n              required\n              min=\"1\"\n              max=\"365\"\n              pattern=\"^\\d{1,3}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && duracionTipoSuscripcion.invalid) ||\n                  (duracionTipoSuscripcion.touched &&\n                    !duracionTipoSuscripcion.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && duracionTipoSuscripcion.invalid) ||\n                (duracionTipoSuscripcion.touched &&\n                  !duracionTipoSuscripcion.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  duracionTipoSuscripcion.errors.required ||\n                  duracionTipoEjercicio.invalid\n                \"\n              >\n                * Duración no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Tarifa</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"tarifa\"\n              #tarifaTipoSuscripcion=\"ngModel\"\n              [(ngModel)]=\"tipoSuscripcionUpdate.tarifa\"\n              placeholder=\"Tarifa de TipoSuscripcion\"\n              required\n              pattern=\"^\\d+(\\.\\d{1,3})?\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && tarifaTipoSuscripcion.invalid) ||\n                  (tarifaTipoSuscripcion.touched &&\n                    !tarifaTipoSuscripcion.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && tarifaTipoSuscripcion.invalid) ||\n                (tarifaTipoSuscripcion.touched && !tarifaTipoSuscripcion.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  tarifaTipoSuscripcion.errors.required ||\n                  tarifaTipoEjercicio.invalid\n                \"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalTipoSuscripcion let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoSuscripcion } from \"@modelsRest/TipoSuscripcion\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TipoSuscripcionServiceService } from \"@servicesRest/tipo_suscripcion/tipo-suscripcion-service.service\";\n\n@Component({\n  selector: \"app-tipo-suscripcion-list\",\n  templateUrl: \"./tipo-suscripcion-list.component.html\",\n  styleUrls: [\"./tipo-suscripcion-list.component.css\"],\n})\nexport class TipoSuscripcionListComponent implements OnInit {\n  mostrarTipoSuscripcionAdd: boolean = false;\n  closeResult = \"\";\n  textoModal: string;\n\n  //confirm delete\n  tipoSuscripcionAux: any;\n\n  tiposSuscripcion: TipoSuscripcion[];\n  tipoSuscripcionUpdate: any;\n\n  constructor(\n    private _service: TipoSuscripcionServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.tipoSuscripcionUpdate = {};\n  }\n\n  ngOnInit(): void {\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getTiposSuscripcion().subscribe((data) => {\n      this.tiposSuscripcion = data;\n    });\n  }\n\n  delete() {\n    this._service\n      .deleteTipoSuscripcion(this.tipoSuscripcionAux)\n      .subscribe((data) => {\n        window.location.reload();\n      });\n  }\n\n  habilitarTipoSuscripcion() {\n    this.mostrarTipoSuscripcionAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarTipoSuscripcion() {\n    this.mostrarTipoSuscripcionAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  update(modal) {\n    this._service\n      .updateTipoSuscripcion(this.tipoSuscripcionUpdate)\n      .subscribe((data) => {\n        this.textoModal = \"¡Tipo Suscripción actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n\n  open(content, tipoSuscripcion: TipoSuscripcion) {\n    this._service.getTipoSuscripcion(tipoSuscripcion.id).subscribe((data) => {\n      this.tipoSuscripcionUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //abre modal confirm delete\n  openModalDelete(confirmDelete, tipoSuscripcion: TipoSuscripcion) {\n    this.tipoSuscripcionAux = tipoSuscripcion;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageContactoComponent } from './pages/contacto/contacto.component';\nimport { ContenidoComponent } from './components/contenido/contenido.component';\n\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  declarations: [PageContactoComponent, ContenidoComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageContactoComponent]\n})\nexport class ContactoModule { }\n","<h3 class=\"text-center\">Localidades</h3>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n        </th>\n\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Provincia\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let localidad of localidades\" class=\"text-center\">\n        <td>{{ localidad.nombre }} </td>\n        <td>{{ localidad.provincia.nombre }}</td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Provincia</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Localidad } from '@modelsRest/Localidad';\nimport { LocalidadServiceService } from '@servicesRest/localidad/localidad-service.service';\n\n@Component({\n  selector: 'app-localidad-list',\n  templateUrl: './localidad-list.component.html',\n  styleUrls: ['./localidad-list.component.css'],\n})\nexport class LocalidadListComponent implements OnInit {\n  localidades: Localidad[];\n\n  constructor(\n    private service: LocalidadServiceService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.service.getLocalidades().subscribe((data) => {\n      this.localidades = data;\n    });\n  }\n}\n","<app-tipo-ejercicio-list></app-tipo-ejercicio-list>\n\n<div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n  <button\n    id=\"plusEjercicio\"\n    (click)=\"habilitarEjercicio()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Ejercicio\n  </button>\n  <button\n    id=\"minusEjercicio\"\n    (click)=\"deshabilitarEjercicio()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Ejercicio\n  </button>\n</div>\n<div *ngIf=\"mostrarEjercicioAdd == true\">\n  <app-ejercicio-add></app-ejercicio-add>\n</div>\n\n\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-4\">\n    <h3 class=\"card-title\">Ejercicio</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-8 d-flex justify-content-end\">\n    <div class=\"form-outline\">\n      <label\n        >Nombre: Ejercicio/ Tipo\n        <input\n          [(ngModel)]=\"filterEjercicio\"\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          placeholder=\"\"\n      /></label>\n      <label for=\"\" class=\"mr-3\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary mt-2\"\n          (click)=\"filtrarTabla()\"\n        >\n          <i class=\"fas fa-search\"></i>\n        </button>\n      </label>\n\n      <button\n        style=\"height: 40px\"\n        (click)=\"quitarFiltroTabla()\"\n        type=\"button\"\n        class=\"btn btn-secondary mt-2 ml-4\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n\n\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre Ejercicio\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Tipo de Ejercicio\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let ejercicio of ejercicios\" class=\"text-center\">\n        <td class=\"text-left\">{{ ejercicio.nombre }}</td>\n        <td class=\"text-left\">{{ ejercicio.tipoEjercicio.nombre }}</td>\n        <td>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Edit\"\n          (click)=\"open(content,ejercicio)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.ejercicio)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre Ejercicio</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Tipo de Ejercicio</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar el ejercicio <span class=\"text-danger\">{{ejercicioAux.nombre}} ({{ejercicioAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Ejercicio</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"ejercicioUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalEjercicio)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Nombre</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"nombre\"\n              #ejercicioNombre=\"ngModel\"\n              [(ngModel)]=\"ejercicioUpdate.nombre\"\n              placeholder=\"Nombre Tipo ejercicio\"\n              required=\"\"\n              pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ0-9]){2,50}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioNombre.invalid) ||\n                  (ejercicioNombre.touched && !ejercicioNombre.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioNombre.invalid) ||\n                (ejercicioNombre.touched && !ejercicioNombre.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioNombre.errors.required || ejercicioNombre.invalid\n                \"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"tipoEjercicio\">(*) Tipo de Ejercicio</label>\n            <select\n              class=\"form-control\"\n              name=\"tipoEjercicio\"\n              id=\"tipoEjercicio\"\n              #ejercicioTipoEjercicio=\"ngModel\"\n              [(ngModel)]=\"tipoEjercicioId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioTipoEjercicio.invalid) ||\n                  (ejercicioTipoEjercicio.touched &&\n                    !ejercicioTipoEjercicio.valid)\n              }\"\n              [(ngModel)]=\"ejercicioUpdate.tipoEjercicio.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let tipoEjercicio of tiposEjercicio\"\n                value=\"{{ tipoEjercicio.id }}\"\n              >\n                {{ tipoEjercicio.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioTipoEjercicio.invalid) ||\n                (ejercicioTipoEjercicio.touched &&\n                  !ejercicioTipoEjercicio.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioTipoEjercicio.errors.required ||\n                  ejercicioTipoEjercicio.invalid\n                \"\n              >\n                * Seleccione un tipo de ejercicio\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalEjercicio let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Ejercicio } from \"@modelsRest/Ejercicio\";\nimport { EjercicioServiceService } from \"@servicesRest/ejercicio/ejercicio-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TipoEjercicio } from \"@modelsRest/TipoEjercicio\";\nimport { TipoEjercicioServiceService } from \"@servicesRest/tipo_ejercicio/tipo-ejercicio-service.service\";\nimport { HelperService } from \"@core/services/helper.service\";\n\n@Component({\n  selector: \"app-ejercicio-list\",\n  templateUrl: \"./ejercicio-list.component.html\",\n  styleUrls: [\"./ejercicio-list.component.css\"],\n})\nexport class EjercicioListComponent implements OnInit {\n  //mostrar ejercicio add\n  mostrarEjercicioAdd: boolean = false;\n\n  ejercicios: Ejercicio[];\n  tiposEjercicio: TipoEjercicio[];\n\n  //update\n  ejercicioUpdate: any;\n  textoModal: string;\n\n  //confirm delete\n  ejercicioAux: any;\n\n  //filtros\n  filterEjercicio: any;\n  mainTablaEjercicios: Ejercicio[];\n  filterTabla: Ejercicio[];\n\n  constructor(\n    private _service: EjercicioServiceService,\n    private _serviceTipoEjercicio: TipoEjercicioServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {\n    this.ejercicioUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n    document.getElementById(\"minusEjercicio\").hidden = true;\n\n    this._service.getEjercicios().subscribe((data) => {\n      this.ejercicios = data;\n      this.mainTablaEjercicios = data;\n    });\n\n    this._serviceTipoEjercicio.getTipoEjercicios().subscribe((data) => {\n      this.tiposEjercicio = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteEjercicio(this.ejercicioAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal) {\n    this._service.updateEjercicio(this.ejercicioUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Ejercicio actualizado!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarEjercicio() {\n    this.mostrarEjercicioAdd = true;\n    document.getElementById(\"plusEjercicio\").hidden = true;\n    document.getElementById(\"minusEjercicio\").hidden = false;\n  }\n\n  deshabilitarEjercicio() {\n    this.mostrarEjercicioAdd = false;\n    document.getElementById(\"plusEjercicio\").hidden = false;\n    document.getElementById(\"minusEjercicio\").hidden = true;\n  }\n\n  open(content, ejercicio: Ejercicio) {\n    this._service.getEjercicio(ejercicio.id).subscribe((data) => {\n      this.ejercicioUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //modal coinfirm delete\n  openModalDelete(confirmDelete, ejercicio: Ejercicio) {\n    this.ejercicioAux = ejercicio;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n  filtrarTabla() {\n    this.filterTabla = [];\n\n    for (let ejercicio of this.mainTablaEjercicios) {\n      if (\n        ejercicio.nombre.toLowerCase() == this.filterEjercicio.toLowerCase() ||\n        ejercicio.tipoEjercicio.nombre.toLowerCase() ==\n          this.filterEjercicio.toLowerCase()\n      ) {\n        this.filterTabla.push(ejercicio);\n      }\n    }\n\n    if (this.filterTabla.length > 0) {\n      this.ejercicios = this.filterTabla;\n    } else {\n      this.ejercicios = this.mainTablaEjercicios;\n    }\n  }\n\n  quitarFiltroTabla() {\n    this.ejercicios = this.mainTablaEjercicios;\n  }\n}\n","import { Component, OnInit, OnChanges, DoCheck } from '@angular/core';\n\nimport { Slot } from \"@modelsRest/Slot\";\nimport { Reserva } from \"@modelsRest/Reserva\";\n\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { SlotServiceService as SlotService } from '@servicesRest/slot/slot-service.service';\nimport { SalaServiceService as SalaService } from '@servicesRest/sala/sala-service.service';\nimport { UsuarioServiceService as UsuarioService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { ReservaServiceService as ReservaService } from \"@servicesRest/reserva/reserva-service.service\";\nimport { HelperService } from '@core/services/helper.service';\n\ndeclare var $:any;\n@Component({\n  selector: 'cuenta-inicio-horario',\n  templateUrl: './inicio-horario.component.html',\n  styleUrls: ['./inicio-horario.component.css']\n})\nexport class CuentaInicioHorarioComponent implements OnInit {\n\n  public slots: Slot[];\n  public reservasUser: Reserva[];\n  public horas: Object[]=[];\n  public diasSemana: String[] = ['Lunes','Martes','Miercoles','Jueves','Viernes','Sabado','Domingo'];\n  public isDataLoaded: boolean = false;\n  public reserva: any = {};\n  public slotSeleccionado: any;\n  public isRecurrente:boolean = false;\n  public aforoActual:number = 0;\n  public hasReserva: boolean = false;\n  public reservaToDel: Reserva;\n  public closeResult:string = '';\n\n  public searchResults: Slot[] = [];\n  public searchByActividadID: number = 0;\n  public searchByMonitorID: number = 0;\n  public actividades:any = [ {id:0,nombre:'Todas las actividades'} ];\n  public monitores:any = [ {id:0, nombre:'Todos los monitores'}];\n  public isSearch:boolean = false;\n\n  public sessionUser: any;\n\n  constructor(\n    private modalService: NgbModal,\n    private _helperService: HelperService,\n    private _serviceSlot: SlotService,\n    private _serviceSala: SalaService,\n    private _serviceReserva: ReservaService,\n    private _serviceUsuario: UsuarioService,\n  ) { \n    \n    for(var i=7; i<23; i++){\n      var hora:String;\n      var index:number;\n      if(i<10) {\n        hora = '0'+i+':00';\n        index = parseInt('0'+i+'00');\n      } else if (i>9 && i<20) {\n        hora = i+':00';\n        index = parseInt(i+'00');\n      } else if(i>19) {\n        hora = i+':00';\n        index = parseInt(i+'00');\n      }\n      this.horas.push({\n        index: index,\n        hora: hora,\n        Lunes: null,\n        Martes: null,\n        Miercoles: null,\n        Jueves: null,\n        Viernes: null,\n        Sabado: null,\n        Domingo: null,\n      });\n    } \n\n  }\n\n  ngOnInit(): void {\n\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n    })\n    .then(()=>{\n      this.loadSlots();\n    });\n\n  }\n\n  loadSlots(){\n    this._serviceReserva.getReservasByUsuarioId(this.sessionUser.id).toPromise()\n    .then((reservas)=>{\n      this.reservasUser = reservas;\n      //console.log(this.reservasUser);\n    })\n    .then(()=>{\n      return this._serviceSlot.getSlots().toPromise();\n    })\n    .then((slots)=>{\n      //console.log(data);\n      this.slots = slots;\n    })\n    .then(()=>{\n      if(!this.isSearch) {\n        this.searchSlots();\n      }\n    })\n    .then(()=>{\n      //console.log(this.horas);\n      for(var slot of this.slots) {\n        var index = slot.horaInicio;\n        var diaSemana = slot.diaSemana;\n        var indexArray = this.getIndexOfK(this.horas, index);\n        var isReserved = this.checkIsReserved(slot);\n        var isDisabled = this.checkIsDisabled(slot);\n        this.horas[indexArray][diaSemana] = {\n          id: slot.id,\n          isReserved: isReserved,\n          isDisabled: isDisabled,\n          imagen: 'assets/uploads/'+slot.monitor.imagen,\n          monitor: slot.monitor.nombre,\n          actividad: slot.actividad.nombre,\n          color: slot.actividad.color,\n          slot: slot\n        }\n\n          if(!this.getIndexOfID(this.actividades, slot.actividad.id)) {\n            this.actividades.push({id: slot.actividad.id, nombre: slot.actividad.nombre });\n          }\n        \n          if(!this.getIndexOfID(this.monitores, slot.monitor.id)) {\n            this.monitores.push({id: slot.monitor.id, nombre: slot.monitor.nombre + ' ' + slot.monitor.apellidos });\n          }\n      }\n    })\n    .then(()=>{\n      this.isDataLoaded=true;\n    });\n\n  }\n\n  getIndexOfID(arr:any, id:number) {\n    var exist = false;\n    for (var i = 0; i < arr.length; i++) {\n      if(arr[i].id == id) {\n        exist = true;\n      }\n    }\n    return exist;\n  }\n\n  checkIsDisabled(slot:Slot) {\n    return !this.searchResults.some(elem => elem.id === slot.id);\n  }\n\n  checkIsReserved(slot:Slot) {\n    return this.reservasUser.some(elem => elem.slot.id === slot.id);\n  }\n\n  getIndexOfK(arr:any, value:number) {\n    for (var i = 0; i < arr.length; i++) {\n      var index = Object.values(arr[i]).indexOf(value);\n      //Object.keys(object).find(key => object[key] === value)\n      if (index > -1) {\n        return i;\n      }\n    }\n  }\n\n  open(content:any, slot:Slot) {\n    this.aforoActual = 0;\n    this._serviceSlot.getSlot(slot.id).toPromise()\n    .then((data) => {\n      this.slotSeleccionado = data;\n      this.isRecurrente = false;\n    })\n    .then(()=>{\n      this._serviceReserva.getReservasBySlotId(slot.id).toPromise()\n      .then((reservas)=>{\n        for(let reserva of reservas) {\n          if(reserva.recurrente) {\n            ++this.aforoActual;\n          } else {\n            var dateString = reserva.fechaInicio.substring(0,10);\n            var today = new Date();\n            var fechaInicio = new Date(dateString.substring(0,4), dateString.substring(5,7)-1, dateString.substring(8,10));\n            if(fechaInicio.getTime() >= today.getTime()) {\n              ++this.aforoActual;\n            }\n          }\n        }\n      })\n    })\n    .then(()=>{\n        //comprobamos si tiene ya una reserva\n        return this._serviceReserva.getReservaBySlotIdAndUsuarioId(this.slotSeleccionado.id, this.sessionUser.id).toPromise();\n    })\n    .then((data)=>{\n      console.log(data);\n      this.hasReserva = (data) ? data[0] : false;\n    })\n    .then(()=>{\n      this.modalService.open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  closeModal(){\n    this.modalService.dismissAll();\n    this.aforoActual = 0;\n  }\n\n  doReserva(id:number){\n    this.reserva.recurrente = this.isRecurrente ? 'true' : 'false';\n    this.reserva.fechaInicio = new Date().toISOString();\n    \n    return this._serviceSlot.getSlot(id).toPromise()\n    .then((data)=>{\n      this.reserva.slot = data;\n    })\n    .then(()=>{\n      return this._serviceUsuario.getUsuario(this.sessionUser.id).toPromise();\n    })\n    .then((data) => {\n      this.reserva.usuario = data;\n    })\n    .then(()=>{\n      //console.log(this.reserva);\n      this._serviceReserva.createReserva(this.reserva).subscribe((data)=>{\n        this.reservaToDel = null;\n        this.loadSlots();\n        this.closeModal();\n        $.notify({\n          // options\n          icon: 'fas fa-check',\n          title: '¡Muy bien!',\n          message: 'Te hemos reservado una plaza.',\n        },{\n          // settings\n          type: 'success'\n        });\n        \n      },(err)=>{\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n      });\n    });\n\n  }\n\n  delConfirm(reserva:Reserva){\n    this.reservaToDel = reserva;\n  }\n\n  delCancelar(){\n    this.reservaToDel = null;\n  }\n\n  delReserva() {\n    this._serviceReserva.deleteReserva(this.reservaToDel).subscribe(\n      (data) => {\n        this.loadSlots();\n        this.closeModal();\n        $.notify({\n            // options\n            icon: 'fas fa-check',\n            title: '¡Muy bien!',\n            message: 'La reserva se ha eliminado correctamente.',\n          },{\n          // settings\n          type: 'success'\n        });\n      },\n      (err) => {\n\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n\n      }\n    );\n  }\n\n  searchByActividad(value:any){\n    this.searchByActividadID = value;\n    this.isSearch = true;\n    this.searchSlots();\n  }\n\n  searchByMonitor(value:any){\n    this.searchByMonitorID = value;\n    this.isSearch = true;\n    this.searchSlots();\n  }\n\n  searchSlots() {\n    this.searchResults = [];\n\n    //search by actividad\n    if( (this.searchByActividadID != 0) && (this.searchByMonitorID == 0) ) {\n      for(let slot of this.slots) {\n        if(slot.actividad.id == this.searchByActividadID) {\n          this.searchResults.push(slot);\n        }\n      }\n    }\n\n    //search by monitor\n    if( (this.searchByActividadID == 0) && (this.searchByMonitorID != 0) ) {\n      for(let slot of this.slots) {\n        if(slot.monitor.id == this.searchByMonitorID) {\n          this.searchResults.push(slot);\n        }\n      }\n    }\n\n    //search by actividad y monitor\n    if( (this.searchByActividadID != 0) && (this.searchByMonitorID != 0) ) {\n      for(let slot of this.slots) {\n        if((slot.actividad.id == this.searchByActividadID) && (slot.monitor.id == this.searchByMonitorID)) {\n          this.searchResults.push(slot);\n        }\n      }\n    }\n\n    //all the slots\n    if( (this.searchByActividadID == 0) && (this.searchByMonitorID == 0) ) {\n      for(let slot of this.slots) {\n          this.searchResults.push(slot);\n      }\n    }\n    //console.log(this.searchResultSlots);\n\n    if(this.isSearch) {\n      this.loadSlots();\n    }\n\n  }\n\n}\n","\n<div *ngIf=\"!isDataLoaded\" class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Cargando...</span>\n    </div>\n</div>\n  \n<div *ngIf=\"isDataLoaded\">\n    <div class=\"mb-2\">\n        <div class=\"row\" >\n            <div class=\"col-md-12\" >\n                <form #formSearchHorario=\"ngForm\" >\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"filter_actividad\">Actividad</label>\n                            <select class=\"form-control\" name=\"filter_actividad\" (change)=\"searchByActividad($event.target.value)\">\n                                <option *ngFor=\"let actividad of actividades\" [value]=\"actividad.id\">{{actividad.nombre}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"filter_monitor\">Monitor</label>\n                            <select class=\"form-control\" name=\"filter_monitor\" (change)=\"searchByMonitor($event.target.value)\">\n                                <option *ngFor=\"let monitor of monitores\" [value]=\"monitor.id\">{{monitor.nombre}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"table-responsive\">\n        <table class=\"table table-striped horario\">\n        <thead>\n            <tr>\n            <th scope=\"col\" class=\"text-center\">Hora</th>\n            <th scope=\"col\" class=\"text-center\">Lunes</th>\n            <th scope=\"col\" class=\"text-center\">Martes</th>\n            <th scope=\"col\" class=\"text-center\">Miercoles</th>\n            <th scope=\"col\" class=\"text-center\">Jueves</th>\n            <th scope=\"col\" class=\"text-center\">Viernes</th>\n            <th scope=\"col\" class=\"text-center\">Sabado</th>\n            <th scope=\"col\" class=\"text-center\">Domingo</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let hora of horas\" class=\"text-center\">\n            <th scope=\"row\" class=\"text-center\">{{ hora.hora }}</th>\n            <td *ngFor=\"let dia of diasSemana\"  class=\"text-center\">\n                <div *ngIf=\"hora[dia]\">\n                    <button\n                        class=\"btn btn-xs btn-rounded horarioClase d-flex align-items-center\" [ngStyle]=\"{'border-color': hora[dia].isReserved ? hora[dia].color : '#ccc', 'background-color': hora[dia].isReserved ? hora[dia].color : '#ccc' }\"\n                        (click)=\"open(content,hora[dia].slot)\"\n                        [class.opacity-80]=\"!hora[dia].isReserved\"\n                        [class.disabled]=\"hora[dia].isDisabled\"\n                    >\n                    <div class=\"\">\n                        <img\n                        src=\"{{ hora[dia].imagen }}\"\n                        alt=\"{{ hora[dia].monitor }}\"\n                        class=\"rounded-circle m-r-5\"\n                        width=\"26\"\n                        />\n                    </div>\n                    <div class=\"line-height-12 m-r-5\">\n                    {{ hora[dia].actividad}}\n                    </div>\n                    <div class=\"\" *ngIf=\"hora[dia].isReserved\"><span><i class=\"fa fa-check\"></i></span></div>\n                </button>\n                </div>\n                <div *ngIf=\"!hora[dia]\">\n                <h3><span class=\"text-danger\"><i class=\"icon-x\"></i></span></h3>\n                </div>\n            </td>\n            </tr>\n        </tbody>\n        </table>\n    </div>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-label\"><span class=\"badge badge-pill claseTitle text-uppercase font-size-14 text-white\" [style.backgroundColor]=\"slotSeleccionado.actividad.color\" [style.borderColor]=\"slotSeleccionado.actividad.color\">{{slotSeleccionado.actividad.nombre}}</span></h4>\n      <button type=\"button\" class=\"close\" (click)=\"modal.dismiss()\"><i class=\"icon-x\"></i></button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n              <div class=\"monitor\">\n                  <img src=\"{{'assets/uploads/'+slotSeleccionado.monitor.imagen}}\" alt=\"Alan Monroe\" class=\"rounded-circle\"/>\n                  <span class=\"nombre\">{{ slotSeleccionado.monitor.nombre + ' '+ slotSeleccionado.monitor.apellidos }}</span>\n                  <span>Monitor</span>\n              </div>\n          </div>\n          <div class=\"col-md-12\">\n              <ul class=\"list-group\">\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      Hora\n                      <span class=\"font-weight-bold dataHora\">{{ slotSeleccionado.horaInicio | formatoStringToHora }}</span>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      Día\n                      <span class=\"font-weight-bold dataDia\">{{ slotSeleccionado.diaSemana }}</span>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      Aforo\n                      <span class=\"font-weight-bold dataAforo\">{{ aforoActual }} (max {{ slotSeleccionado.sala.aforoMax }})</span>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                      Sala\n                      <span class=\"font-weight-bold dataSala\">{{ slotSeleccionado.sala.numero }}</span>\n                  </li>\n              </ul>\n          </div>\n          <div class=\"col-md-12 my-4\">\n                <h4 class=\"text-center mb-3\">Reserva tu plaza en la clase</h4>\n                <div class=\"row\" *ngIf=\"!hasReserva\">\n                    <div class=\"col-4 offset-4 text-right\">\n                        <input type=\"checkbox\" name=\"recurrente\" class=\"form-control\" [(ngModel)]=\"isRecurrente\" /> <label>¿Es recurrente?</label>\n                    </div>\n                    <div class=\"col-md-8 offset-md-2 text-center\">\n                        <button type=\"button\" class=\"btn btn-xs btn-success\" (click)=\"doReserva(slotSeleccionado.id)\">Reservar clase</button>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"hasReserva\">\n                    <div class=\"col-md-12 text-center\" *ngIf=\"!reservaToDel\">\n                        <span class=\"badge badge-pill badge-success font-size-14 mb-2\">Ya tienes una plaza reservada para esta clase</span><br>\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"delConfirm(hasReserva)\">Eliminar reserva</button>\n                    </div>\n                    <div class=\"col-md-12 text-center\" *ngIf=\"reservaToDel\">\n                        <span class=\"badge badge-pill badge-warning font-size-14 mb-2\">¿Estás seguro?</span><br />\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"delCancelar()\">Cancelar</button>\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"delReserva()\">Si, eliminar reserva</button>\n                    </div>\n                </div>\n          </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"modal.dismiss()\">Cerrar</button>\n  </div>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\n\nimport { HomeSliderComponent } from '../../components/slider/slider.component';\nimport { HomeClasesComponent } from '../../components/clases/clases.component';\nimport { HomeTheGymComponent } from '../../components/thegym/thegym.component';\nimport { HomeHorarioComponent } from '../../components/horario/horario.component';\nimport { HomeGaleriaComponent } from '../../components/galeria/galeria.component';\nimport { HomeGoalsComponent } from '../../components/goals/goals.component';\nimport { HomeMonitorsComponent } from '../../components/monitors/monitors.component';\nimport { HomeMapComponent } from '../../components/map/map.component';\n\n@Component({\n  selector: 'app-page-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class PageHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<home-slider></home-slider>\n<home-clases></home-clases>\n<home-thegym></home-thegym>\n<home-horario></home-horario>\n<home-galeria></home-galeria>\n<home-goals></home-goals>\n<home-monitors></home-monitors>\n<home-map></home-map>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { PagePoliticaComponent } from './pages/politica/politica.component';\nimport { PageCookiesComponent } from './pages/cookies/cookies.component';\nimport { PageLegalComponent } from './pages/legal/legal.component';\n\n\n\n@NgModule({\n  declarations: [PagePoliticaComponent, PageCookiesComponent, PageLegalComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PagePoliticaComponent, PageCookiesComponent, PageLegalComponent],\n})\nexport class PrivacidadModule { }\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { PageLoginComponent } from './pages/login/login.component';\nimport { FormularioComponent } from './components/formulario/formulario.component';\n\n@NgModule({\n  declarations: [PageLoginComponent, FormularioComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageLoginComponent]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '@core/services/auth.service';\n\nimport { Localidad } from \"@modelsRest/Localidad\";\nimport { Provincia } from \"@modelsRest/Provincia\";\nimport { LocalidadServiceService as LocalidadService } from \"@servicesRest/localidad/localidad-service.service\";\nimport { ProvinciaServiceService as ProvinciaService } from \"@servicesRest/provincia/provincia-service.service\";\nimport { UsuarioServiceService as UsuarioService } from \"@servicesRest/usuario/usuario-service.service\"; \nimport { RolServiceService as RolService } from \"@servicesRest/rol/rol-service.service\";\nimport { TokenStorageService } from '@core/services/token-storage.service';\nimport { HelperService } from '@core/services/helper.service';\n\nimport { Router } from '@angular/router';\nimport {md5} from 'pure-md5';\n\ndeclare var $:any;\n@Component({\n  selector: 'registro-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css']\n})\nexport class FormularioComponent implements OnInit {\n  public nuevoUsuario: any;\n  public fillUsuario: any;\n  public direccion: any;\n  public rolId: number = 3;\n  public localidadId: any = \"\";\n  public provinciaId: any = \"\";\n  public localidades: Localidad[];\n  public provincias: Provincia[];\n  //public localidadSelect:any;\n  //public provinciaSelect:any;\n  public password:string = 'fils123';\n  public passwordConfirm:string = 'fils123';\n  public enviando: boolean = false;\n\n  public isSignUpFailed: boolean = false;\n  public isLoggedIn: boolean = false;\n  public isLoginFailed: boolean = false;\n  public errorMessage: string = 'Error';\n  public successMessage: string = 'Tu registro se ha realizado con exito. Espera ...';\n\n  constructor(\n    private _authService: AuthService,\n    private _service: UsuarioService,\n    private _serviceLocalidad: LocalidadService,\n    private _serviceProvincia: ProvinciaService,\n    private _serviceRol: RolService,\n    private _restUserService: UsuarioService,\n    private _tokenStorage: TokenStorageService,\n    private _helperService: HelperService,\n    private _router: Router\n    ) {\n    this.nuevoUsuario = {\n      nombre: 'John',\n      apellidos: 'Doe',\n      dni: '55668877X',\n      email: 'test2@doe.es',\n      telefono: '666555444',\n      fechaNacimiento: '2000-06-10',\n      cuentaBancaria: 'ES55 1111 2222 33 4444444444',\n      password: 'fils123',\n      password_confirm: 'fils123',\n    };\n    this.direccion = {\n      calle: 'Venezuela',\n      numero: 20,\n      bloque: 1,\n      escalera: 1,\n      piso: 4,\n      puerta: 'B',\n      codigoPostal: '29850',\n\n    };\n    //this.provinciaId = 1;\n    //this.localidadId = 1;\n    //this.localidadSelect=2;\n    //this.provinciaSelect=2;\n   }\n\n  ngOnInit(): void {\n    this._serviceProvincia.getProvincias().subscribe((data) => {\n      this.provincias = data;\n    });\n  }\n\n  // metodo para cargar los localidades de la provincia\n  cargarLocalidades(provinciaId) {\n    //console.log(this.provinciaSelect);\n    // this.localidadSelect = 2;\n    this.localidadId = \"\";\n    this._serviceLocalidad.getLocalidadesByProvinciaID(provinciaId).subscribe((data) => {\n      this.localidades = data;\n    }); \n  }\n\n  // metodo para obtener y enlazar la localidad con la direccion que se va a crear\n  obtenerLocalidad() {\n    return this._serviceLocalidad\n      .getLocalidad(this.localidadId)\n      .toPromise()\n      .then((data) => {\n        this.direccion.localidad = data;\n      });\n  }\n\n  //metodo para obtener y enlazar el rol (por default será el de ROLE_USER)\n  obtenerRol() {\n    return this._serviceRol\n      .getRol(this.rolId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoUsuario.rol = data;\n      });\n  }\n\n  //metodo para crear al usuario\n  addUsuario() {\n    this.enviando = true;\n    this.nuevoUsuario.password = md5(this.password);\n    this.nuevoUsuario.password_confirm = md5(this.passwordConfirm);\n    console.log(this.nuevoUsuario);\n    this.obtenerLocalidad()\n      .then(() => this.obtenerRol())\n      .then(() => {\n        this.nuevoUsuario.direccion = this.direccion;\n        this._service.altaUser(this.nuevoUsuario).subscribe(\n          (data) => {\n            //console.log(data);\n            //alert(\"usuario registrado\");\n            this.isSignUpFailed = false;\n            //this.loginUsuario();\n            $.notify({\n              // options\n              icon: 'fas fa-check',\n              title: '¡Muy bien!',\n              message: 'Ya hemos realizado un registro con tus datos.',\n            },{\n              // settings\n              type: 'success'\n            });\n    \n            setTimeout(()=>{\n              this.loginUsuario();\n            },2000);\n            //window.location.reload();\n          },\n          (err) => {\n            this.isSignUpFailed = false;\n            this.errorMessage = err;\n            $.notify({\n              // options\n              icon: 'fas fa-close',\n              title: 'Lo sentimos, ha habido un error!',\n              message: err.error.message,\n            },{\n              // settings\n              type: 'danger'\n            });\n          }\n        );\n      });\n  }\n\n  loginUsuario() {\n    this._authService.login(this.nuevoUsuario.email, this.nuevoUsuario.password).subscribe(\n      result => {\n        //console.log(result);\n        this._restUserService.getUsuarioByEmail(result.username).toPromise()\n        .then(data => {\n            this._tokenStorage.saveUser(data);\n            this._tokenStorage.saveToken(result.accessToken);\n        })\n        .then(()=>{\n          this.isLoginFailed = false;\n          this.isLoggedIn = true;\n          this.redirectPage();\n        })\n        .catch((error)=>{\n          console.log(\"Promise rejected with \" + JSON.stringify(error));\n        });\n      },\n      err => {\n        console.log(err);\n        //console.log(err.error);\n        // this.errorMessage = err.error.message;\n        this.errorMessage = 'Los datos son incorrectos.';\n        this.isLoginFailed = true;\n        //console.log(err.error.message);\n      }\n    );\n  }\n\n  redirectPage(){\n    if(this.isLoggedIn) {\n      this._router.navigate(['/cuenta/inicio']).then(() => {\n        window.location.reload();\n      });\n    }\n  }  \n\n}\n","<!-- Section -->\n<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div *ngIf=\"!isLoggedIn\" class=\"col-lg-9 center no-padding\">\n                <div *ngIf=\"isSignUpFailed\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                    {{ errorMessage }}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"heading-text heading-gradient heading-line text-center\">\n                            <h4 class=\"text-center\"><span>Nueva Suscripción</span></h4>\n                        </div>\n                        <p class=\"text-center\">Cree una cuenta introduciendo la información a continuación. <br /> Si ya tienes cuenta, <a href=\"/iniciar-sesion\">inicia sesión</a>.</p>\n                    </div>\n                </div>\n\n                <form  class=\"form-validate\"\n                    name=\"form\"\n                    (ngSubmit)=\"f.form.valid && addUsuario()\"\n                    #f=\"ngForm\"\n                >\n                    \n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <h5 class=\"text-primary\">Datos usuario</h5>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">Nombre</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"nombre\"\n                                name=\"nombre\"\n                                #usuarioNombre=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.nombre\"\n                                placeholder=\"Nombre usuario\"\n                                required\n                                pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioNombre.invalid) ||\n                                    (usuarioNombre.touched && !usuarioNombre.valid)\n                                }\"\n                                />\n                                <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioNombre.invalid) ||\n                                    (usuarioNombre.touched && !usuarioNombre.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                                >\n                                <div *ngIf=\"usuarioNombre.errors.required || usuarioNombre.invalid\">\n                                    Nombre no válido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">Apellidos</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"apellido\"\n                                name=\"apellido\"\n                                #usuarioApellido=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.apellidos\"\n                                placeholder=\"Apellidos usuario\"\n                                required\n                                pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,70}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioApellido.invalid) ||\n                                    (usuarioApellido.touched && !usuarioApellido.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioApellido.invalid) ||\n                                    (usuarioApellido.touched && !usuarioApellido.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div\n                                    *ngIf=\"usuarioApellido.errors.required || usuarioApellido.invalid\"\n                                >\n                                    Apellido no válido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">DNI</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"dni\"\n                                name=\"dni\"\n                                #usuarioDni=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.dni\"\n                                placeholder=\"ej: 55668877X\"\n                                required\n                                pattern=\"^(\\d){8}[a-zA-Z]{1}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioDni.invalid) ||\n                                    (usuarioDni.touched && !usuarioDni.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioDni.invalid) ||\n                                    (usuarioDni.touched && !usuarioDni.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"usuarioDni.errors.required || usuarioDni.invalid\">\n                                    DNI no válido\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">Email</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"email\"\n                                name=\"email\"\n                                #usuarioEmail=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.email\"\n                                placeholder=\"Email usuario\"\n                                required\n                                pattern=\"^([A-Za-z0-9]{1})((\\.|\\-)?([a-z0-9])){0,}@([a-z0-9]){1}((\\.|\\-)?([a-z0-9]))*\\.([a-z]){2,4}$\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioEmail.invalid) ||\n                                    (usuarioEmail.touched && !usuarioEmail.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioEmail.invalid) ||\n                                    (usuarioEmail.touched && !usuarioEmail.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                                >\n                                <div *ngIf=\"usuarioEmail.errors.required || usuarioEmail.invalid\">\n                                    Email no válido\n                                </div>\n                            </div>\n                        </div>  \n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">Teléfono</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"telefono\"\n                                name=\"telefono\"\n                                #usuarioTelefono=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.telefono\"\n                                placeholder=\"Ej:666555444\"\n                                required\n                                pattern=\"^(6|7|8|9){1}\\d{8,9}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioTelefono.invalid) ||\n                                    (usuarioTelefono.touched && !usuarioTelefono.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioTelefono.invalid) ||\n                                    (usuarioTelefono.touched && !usuarioTelefono.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                                >\n                                <div *ngIf=\"usuarioTelefono.errors.required || usuarioTelefono.invalid\" >\n                                    Teléfono no válido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">Fecha de nacimiento</label>\n                            <input\n                                type=\"date\"\n                                class=\"form-control\"\n                                id=\"fechaNacimiento\"\n                                name=\"fechaNacimiento\"\n                                #usuarioFechaNacimiento=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.fechaNacimiento\"\n                                placeholder=\"Nombre Tipo ejercicio\"\n                                required\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioFechaNacimiento.invalid) ||\n                                    (usuarioFechaNacimiento.touched && !usuarioFechaNacimiento.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioFechaNacimiento.invalid) ||\n                                    (usuarioFechaNacimiento.touched && !usuarioFechaNacimiento.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div\n                                    *ngIf=\"\n                                    usuarioFechaNacimiento.errors.required ||\n                                    usuarioFechaNacimiento.invalid\n                                    \"\n                                >\n                                    Fecha no válida\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12 form-group\">\n                            <label class=\"sr-only\">Cuenta bancaria</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"cuentaBancaria\"\n                                name=\"cuentaBancaria\"\n                                #usuarioCuentaBancaria=\"ngModel\"\n                                [(ngModel)]=\"nuevoUsuario.cuentaBancaria\"\n                                placeholder=\"ES55 4444 4444 44 444444444\"\n                                required\n                                pattern=\"(ES\\d{2} \\d{4} \\d{4} \\d{2} \\d{10}|ES\\d{22})\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioCuentaBancaria.invalid) ||\n                                    (usuarioCuentaBancaria.touched && !usuarioCuentaBancaria.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioCuentaBancaria.invalid) ||\n                                    (usuarioCuentaBancaria.touched && !usuarioCuentaBancaria.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div\n                                    *ngIf=\"\n                                    usuarioCuentaBancaria.errors.required ||\n                                    usuarioCuentaBancaria.invalid\n                                    \"\n                                >\n                                    Cuenta Bancaria no válida\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6 form-group\">\n                            <label class=\"sr-only\">Contraseña</label>\n                            <input\n                                type=\"password\"\n                                class=\"form-control\"\n                                id=\"password\"\n                                name=\"password\"\n                                #usuarioPassword=\"ngModel\"\n                                [(ngModel)]=\"password\"\n                                placeholder=\"6 caract. min\"\n                                required\n                                pattern=\"\\w{6,}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioPassword.invalid) ||\n                                    (usuarioPassword.touched && !usuarioPassword.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioPassword.invalid) ||\n                                    (usuarioPassword.touched && !usuarioPassword.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"usuarioPassword.errors.required || usuarioPassword.invalid\" >\n                                    Contraseña no válida\n                                </div>\n                            </div>\n                        </div> \n                        <div class=\"col-md-6 form-group\">\n                            <label class=\"sr-only\">Confirmar Contraseña</label>\n                            <input\n                                type=\"password\"\n                                class=\"form-control\"\n                                id=\"password_confirm\"\n                                name=\"password_confirm\"\n                                #usuarioPasswordConfirm=\"ngModel\"\n                                [(ngModel)]=\"passwordConfirm\"\n                                placeholder=\"Confirmar contraseña\"\n                                required\n                                pattern=\"{{password}}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && usuarioPasswordConfirm.invalid) ||\n                                    (usuarioPasswordConfirm.touched && !usuarioPasswordConfirm.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && usuarioPasswordConfirm.invalid) ||\n                                    (usuarioPasswordConfirm.touched && !usuarioPasswordConfirm.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"usuarioPasswordConfirm.errors.required || usuarioPasswordConfirm.invalid\" >\n                                    Contraseña no válida\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12 mt-3\">\n                            <h5 class=\"text-primary\">Datos Dirección</h5>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-5 form-group\">\n                            <label class=\"sr-only\">Calle</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"calle\"\n                                name=\"calle\"\n                                #direccionCalle=\"ngModel\"\n                                [(ngModel)]=\"direccion.calle\"\n                                placeholder=\"C/\"\n                                required\n                                pattern=\"^([a-zA-Z]){1}([a-zA-Z ]){2,50}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionCalle.invalid) ||\n                                    (direccionCalle.touched && !direccionCalle.valid)\n                                }\"\n                                />\n                                <div\n                                *ngIf=\"\n                                    (f.submitted && direccionCalle.invalid) ||\n                                    (direccionCalle.touched && !direccionCalle.valid)\n                                \"\n                                class=\"invalid-feedback\" >\n                                <div *ngIf=\"direccionCalle.errors.required || direccionCalle.invalid\">\n                                    Calle no válida\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 form-group\">\n                            <label class=\"sr-only\">Número</label>\n                            <input\n                                type=\"number\"\n                                class=\"form-control\"\n                                id=\"numero\"\n                                name=\"numero\"\n                                #direccionNumero=\"ngModel\"\n                                [(ngModel)]=\"direccion.numero\"\n                                placeholder=\"Nº\"\n                                min=\"1\"\n                                max=\"1000\"\n                                required\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionNumero.invalid) ||\n                                    (direccionNumero.touched && !direccionNumero.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionNumero.invalid) ||\n                                    (direccionNumero.touched && !direccionNumero.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div\n                                    *ngIf=\"direccionNumero.errors.required || direccionNumero.invalid\"\n                                >\n                                    Número no válido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 form-group\">\n                            <label class=\"sr-only\">Bloque</label>\n                            <input\n                                type=\"number\"\n                                class=\"form-control\"\n                                id=\"bloque\"\n                                name=\"bloque\"\n                                #direccionBloque=\"ngModel\"\n                                [(ngModel)]=\"direccion.bloque\"\n                                placeholder=\"Ej: 1\"\n                                pattern=\"^([1-9]\\d*)\"\n                                min=\"1\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionBloque.invalid) ||\n                                    (direccionBloque.touched && !direccionBloque.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionBloque.invalid) ||\n                                    (direccionBloque.touched && !direccionBloque.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"direccionBloque.errors.required || direccionBloque.invalid\" >\n                                    Bloque no válido\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 form-group\">\n                            <label class=\"sr-only\">Escalera</label>\n                            <input\n                                type=\"number\"\n                                class=\"form-control\"\n                                id=\"escalera\"\n                                name=\"escalera\"\n                                #direccionEscalera=\"ngModel\"\n                                [(ngModel)]=\"direccion.escalera\"\n                                placeholder=\"Ej: 1\"\n                                pattern=\"^([1-9]\\d*)\"\n                                min=\"1\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionEscalera.invalid) ||\n                                    (direccionEscalera.touched && !direccionEscalera.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionEscalera.invalid) ||\n                                    (direccionEscalera.touched && !direccionEscalera.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div\n                                    *ngIf=\"\n                                    direccionEscalera.errors.required || direccionEscalera.invalid\n                                    \"\n                                >\n                                    Escalera no válida\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 form-group\">\n                            <label class=\"sr-only\">Piso</label>\n                            <input\n                                type=\"number\"\n                                class=\"form-control\"\n                                id=\"piso\"\n                                name=\"piso\"\n                                #direccionPiso=\"ngModel\"\n                                [(ngModel)]=\"direccion.piso\"\n                                placeholder=\"Ej: 1\"\n                                pattern=\"^([1-9]\\d*)\"\n                                min=\"1\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionPiso.invalid) ||\n                                    (direccionPiso.touched && !direccionPiso.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionPiso.invalid) ||\n                                    (direccionPiso.touched && !direccionPiso.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"direccionPiso.errors.required || direccionPiso.invalid\">\n                                    Piso no válido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 form-group\">\n                            <label class=\"sr-only\">Puerta</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"puerta\"\n                                name=\"puerta\"\n                                #direccionPuerta=\"ngModel\"\n                                [(ngModel)]=\"direccion.puerta\"\n                                placeholder=\"Ej: 1,A\"\n                                pattern=\"^(\\d|[a-zA-Z]{1})\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionPuerta.invalid) ||\n                                    (direccionPuerta.touched && !direccionPuerta.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionPuerta.invalid) ||\n                                    (direccionPuerta.touched && !direccionPuerta.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"direccionPuerta.errors.required || direccionPuerta.invalid\" >\n                                    Puerta no válida\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 form-group\">\n                            <label class=\"sr-only\">Código Postal</label>\n                            <input\n                                type=\"text\"\n                                class=\"form-control\"\n                                id=\"cp\"\n                                name=\"cp\"\n                                #direccionCP=\"ngModel\"\n                                [(ngModel)]=\"direccion.codigoPostal\"\n                                placeholder=\"Ej: 29850\"\n                                required\n                                pattern=\"^\\d{5,6}\"\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionCP.invalid) ||\n                                    (direccionCP.touched && !direccionCP.valid)\n                                }\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionCP.invalid) ||\n                                    (direccionCP.touched && !direccionCP.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div *ngIf=\"direccionCP.errors.required || direccionCP.invalid\">\n                                    Código Postal no válido\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6 form-group\">\n                            <label class=\"sr-only\">Provincia</label>\n                            <select\n                                class=\"form-control\"\n                                name=\"provincia\"\n                                id=\"provincia\"\n                                #direccionProvincia=\"ngModel\"\n                                [(ngModel)]=\"provinciaId\"\n                                required\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionProvincia.invalid) ||\n                                    (direccionProvincia.touched && !direccionProvincia.valid)\n                                }\"\n                                \n                                (ngModelChange)=\"cargarLocalidades(provinciaId)\"\n                                \n                            >\n                                <option value=\"\" selected>Selecciona una provincia</option>\n                                <option\n                                    *ngFor=\"let provincia of provincias\"\n                                    value=\"{{ provincia.id }}\"\n                                >\n                                    {{ provincia.nombre }}\n                                </option>\n                            </select>\n\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionProvincia.invalid) ||\n                                    (direccionProvincia.touched && !direccionProvincia.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                            >\n                                <div\n                                    *ngIf=\"\n                                    direccionProvincia.errors.required || direccionProvincia.invalid\n                                    \"\n                                >\n                                    Seleccione una Provincia\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6 form-group\" *ngIf=\"provinciaId != ''\">\n                            <label class=\"sr-only\">Localidad</label>\n                            <select\n                                class=\"form-control\"\n                                name=\"localidad\"\n                                id=\"localidad\"\n                                #direccionLocalidad=\"ngModel\"\n                                [(ngModel)]=\"localidadId\"\n                                required\n                                [ngClass]=\"{\n                                    'is-invalid':\n                                    (f.submitted && direccionLocalidad.invalid) ||\n                                    (direccionLocalidad.touched && !direccionLocalidad.valid)\n                                }\"\n                                >\n                                <option value=\"\" selected>Selecciona una localidad</option>\n                                <option\n                                    *ngFor=\"let localidad of localidades\" \n                                    value=\"{{ localidad.id }}\"\n                                >\n                                    <span > {{ localidad.nombre }} </span>\n                                </option>\n                            </select>\n\n                            <div\n                                *ngIf=\"\n                                    (f.submitted && direccionLocalidad.invalid) ||\n                                    (direccionLocalidad.touched && !direccionLocalidad.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                                >\n                                <div *ngIf=\"direccionLocalidad.errors.required || direccionLocalidad.invalid\">\n                                    Seleccione una Localidad\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"enviando\">\n                        <div class=\"col-md-12 mt-3\">\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"spinner-border\" role=\"status\">\n                                <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"!enviando\">\n                        <div class=\"col-md-12 form-group\">\n                            <button type=\"submit\" class=\"btn\">Regístrate</button>\n                            <button type=\"button\" class=\"btn btn-danger m-l-10\">Cancel</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div *ngIf=\"isLoggedIn\" class=\"col-lg-9 center no-padding\">\n                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                    {{successMessage}}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: Section -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuComponent } from '../../components/menu/menu.component';\nimport { HelperService } from '@core/services/helper.service';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.css']\n})\nexport class PageCuentaPerfilComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n  public title: string;\n  public menuActive: string;\n\n  // public sessionUser: any;\n  // public isSuscribed: boolean = false;\n\n  constructor(\n    private _helperService: HelperService,\n  ) {\n    this.pageTitle = 'Mi Cuenta';\n    this.pageDesc = 'Todo lo que necesitas de tu perfil';\n    this.pageImg = 'login.jpg';\n    this.title = 'Mi Cuenta';\n    this.menuActive = 'perfil';\n  }\n\n  ngOnInit(): void {\n    //window.location.reload();\n    this._helperService.checkIsLoginAndRedirectToLogin();\n    // this._helperService.getSessionUser()\n    // .then((user:any)=>{\n    //   this.sessionUser = user;\n    // })\n    // .then(()=>{\n    //   this.isSuscribed = this.sessionUser.suscripcion.isSubscribed;\n    //   //console.log(this.sessionUser);\n    // });\n\n    \n  }\n\n}\n","<app-pagetitle\n  [pageTitle]=\"pageTitle\"\n  [pageDesc]=\"pageDesc\"\n  [pageImg]=\"pageImg\"\n></app-pagetitle>\n<cuenta-menu [menuActive]=\"menuActive\"></cuenta-menu>\n<section class=\"py-4 m-0 mb-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</section>\n","<h3>Nueva Actividad</h3>\n<div class=\"card-body text-left\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addActividad(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label for=\"username\">(*) Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"nombre\"\n          id=\"nombre\"\n          #actividadNombre=\"ngModel\"\n          [(ngModel)]=\"nuevaActividad.nombre\"\n          placeholder=\"Nombre Tipo Actividad\"\n          required=\"\"\n          pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚÜ]){1}[a-zA-Z áéíóúÁÉÍÓÚÜ]{2,50}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && actividadNombre.invalid) ||\n              (actividadNombre.touched && !actividadNombre.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && actividadNombre.invalid) ||\n            (actividadNombre.touched && !actividadNombre.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"actividadNombre.errors.required || actividadNombre.invalid\"\n          >\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"username\">(*) Dificultad</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"dificultad\"\n          id=\"dificultad\"\n          #actividadDificultad=\"ngModel\"\n          [(ngModel)]=\"nuevaActividad.dificultad\"\n          min=\"1\"\n          max=\"10\"\n          required=\"\"\n          pattern=\"([1-9]|10)\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && actividadDificultad.invalid) ||\n              (actividadDificultad.touched && !actividadDificultad.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && actividadDificultad.invalid) ||\n            (actividadDificultad.touched && !actividadDificultad.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              actividadDificultad.errors.required || actividadDificultad.invalid\n            \"\n          >\n            * Dificultad no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4 \">\n        <label for=\"color\">(*) Color</label>\n        <input\n          type=\"color\"\n          name=\"color\"\n          id=\"color\"\n          #colorTipoActividad=\"ngModel\"\n          [(ngModel)]=\"nuevaActividad.color\"\n        />\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"descripcion\">Descripción</label>\n        <textarea\n          class=\"form-control\"\n          name=\"descripcion\"\n          id=\"descripcion\"\n          cols=\"50\"\n          rows=\"4\"\n          #actividadDescripcion=\"ngModel\"\n          [(ngModel)]=\"nuevaActividad.descripcion\"\n          placeholder=\"Descripción\"\n          pattern=\"([a-zA-Z áéíóúüÁÉÍÓÚÜ0-9.,]){0,}\"\n        ></textarea>\n\n        <span\n          style=\"color: red\"\n          *ngIf=\"actividadDescripcion.touched && !actividadDescripcion.valid\"\n        >\n          * Descripcion no válida</span\n        >\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"tipoActividad\">(*) Tipo de Actividad</label>\n        <select\n          class=\"form-control\"\n          name=\"tipoActividad\"\n          id=\"tipoActividad\"\n          #actividadTipoActividad=\"ngModel\"\n          [(ngModel)]=\"tipoActividadId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && actividadTipoActividad.invalid) ||\n              (actividadTipoActividad.touched && !actividadTipoActividad.valid)\n          }\"\n          [(ngModel)]=\"tipoActiSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let tipoActividad of tiposActividades\"\n            value=\"{{ tipoActividad.id }}\"\n          >\n            {{ tipoActividad.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && actividadTipoActividad.invalid) ||\n            (actividadTipoActividad.touched && !actividadTipoActividad.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              actividadTipoActividad.errors.required ||\n              actividadTipoActividad.invalid\n            \"\n          >\n            * Seleccione un tipo de actividad\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Actividad <span class=\"text-danger\">{{nuevaActividad.nombre}}</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoActividad } from \"@modelsRest/TipoActividad\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ActividadServiceService } from \"@servicesRest/actividad/actividad-service.service\";\nimport { TipoActividadServiceService } from \"@servicesRest/tipo_actividad/tipo-actividad-service.service\";\n\n@Component({\n  selector: \"app-actividad-add\",\n  templateUrl: \"./actividad-add.component.html\",\n  styleUrls: [\"./actividad-add.component.css\"],\n})\nexport class ActividadAddComponent implements OnInit {\n  nuevaActividad: any;\n  tipoActividadId: number; //poner en number para coger del rest ????\n  tiposActividades: TipoActividad[];\n  tipoActiSelect = \"\";\n  colorTipoActiSelect=\"\";\n\n  constructor(\n    private service: ActividadServiceService,\n    private serviceTipoActividad: TipoActividadServiceService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaActividad = {\n      descripcion: \"\",\n      dificultad: \"\",\n      nombre: \"\",\n      color:\"\",\n      tipoActividad: {\n        id: \"\",\n        nombre: \"\",\n      },\n    };\n  }\n\n  ngOnInit(): void {\n    this.serviceTipoActividad.getTipoActividades().subscribe((data) => {\n      this.tiposActividades = data;\n    });\n    this.nuevaActividad.color=\"#ffffff\";\n  }\n\n  obtenerUnTipoActividad() {\n    return this.serviceTipoActividad\n      .getTipoActividad(this.tipoActividadId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaActividad.tipoActividad = data;\n      });\n  }\n\n  addActividad(create, errorModal) {\n    this.obtenerUnTipoActividad().then(() => {\n      this.service.createActividad(this.nuevaActividad).subscribe(\n        (data) => {\n          this.modalService.open(create, {\n            ariaLabelledBy: \"modal-basic-title\",\n            centered: true,\n            size: \"md\",\n          });\n          setTimeout(function () {\n            window.location.reload(), console.log(\"funciona\");\n          }, 3000);\n        },\n        (err) => {\n          this.modalService.open(errorModal, {\n            ariaLabelledBy: \"modal-basic-title\",\n            centered: true,\n            size: \"md\",\n          });\n        }\n      );\n    });\n  }\n\n  refresh(){\n    window.location.reload();\n  }\n}\n","import {Pipe,PipeTransform} from '@angular/core';\n\n@Pipe({name: 'formatoHora'})\nexport class FormatoHoraPipe implements PipeTransform{\n    //coge el parametro pasado y lo pone en formato hora (requiere 4 dígitos)\n    //dato    | calculadora: otroDato\n   //param1         param2\n    transform(value:any){\n        var cadena = value.toString();\n        var resultado;\n        if(cadena.charAt(0) != '0' && cadena.charAt(0) != '1' && cadena.charAt(0) != '2') {\n            resultado = '0'+cadena.charAt(0)+\":\"+cadena.charAt(1)+cadena.charAt(2);\n        } else {\n            resultado = cadena.charAt(0)+cadena.charAt(1)+\":\"+cadena.charAt(2)+cadena.charAt(3);\n        }\n        return resultado;\n    }\n}","<app-pagetitle\n  [pageTitle]=\"pageTitle\"\n  [pageDesc]=\"pageDesc\"\n  [pageImg]=\"pageImg\"\n></app-pagetitle>\n<section>\n  <div class=\"container\" *ngIf=\"isDataLoaded\">\n    <div class=\"mb-5\">\n        <div class=\"row\" >\n            <div class=\"col-md-12\" >\n                <form #formSearchHorario=\"ngForm\" >\n                    <div class=\"form-row\">\n                        <!-- <div class=\"form-group col-md-3\">\n                            <label for=\"filter_tipo_vista\">Tipo de vista</label>\n                            <select class=\"form-control\" name=\"filter_actividad\" [(ngModel)]=\"filters.type\">\n                                <option selected=\"selected\" value=\"tabla\">Tabla</option>\n                                <option value=\"lista\">Lista</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"filter_fecha_inicio\">Fecha de inicio</label>\n                            <input\n                            class=\"form-control\"\n                            type=\"date\"\n                            name=\"filter_fecha_inicio\"\n                            />\n                        </div> -->\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"filter_actividad\">Actividad</label>\n                            <select class=\"form-control\" name=\"filter_actividad\" (change)=\"searchByActividad($event.target.value)\">\n                                <option *ngFor=\"let actividad of actividades\" [value]=\"actividad.id\">{{actividad.nombre}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"filter_monitor\">Monitor</label>\n                            <select class=\"form-control\" name=\"filter_monitor\" (change)=\"searchByMonitor($event.target.value)\">\n                                <option *ngFor=\"let monitor of monitores\" [value]=\"monitor.id\">{{monitor.nombre}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"filters.type == 'tabla'; else vistaTimeline\">\n        <horario-tabla [searchResults]=\"searchResultSlots\"></horario-tabla>\n    </div>\n    <ng-template #vistaTimeline>\n        <horario-timeline [searchResults]=\"searchResultSlots\"></horario-timeline>\n    </ng-template>\n  </div>\n  <div class=\"container\" *ngIf=\"!isDataLoaded\">\n      cargando...\n  </div>\n</section>\n\n\n","import { Component, DoCheck, OnInit } from \"@angular/core\";\nimport { Slot } from \"@modelsRest/Slot\";\nimport { Sala } from \"@modelsRest/Sala\";\nimport { Reserva } from \"@modelsRest/Reserva\";\nimport { TablaComponent } from \"../../componentes/tabla/tabla.component\";\nimport { TimelineComponent } from \"../../componentes/timeline/timeline.component\";\nimport { SlotServiceService as SlotService } from \"@servicesRest/slot/slot-service.service\";\nimport { SalaServiceService as SalaService } from \"@servicesRest/sala/sala-service.service\";\nimport { ReservaServiceService as ReservaService } from \"@servicesRest/reserva/reserva-service.service\";\nimport { getTranslationDeclStmts } from \"@angular/compiler/src/render3/view/template\";\nimport { UsuarioServiceService as UsuarioService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { HelperService } from '@core/services/helper.service';\n\ndeclare var $: any;\n@Component({\n  selector: \"app-horario\",\n  templateUrl: \"./horario.component.html\",\n  styleUrls: [\"./horario.component.css\"],\n})\nexport class PageHorarioComponent implements OnInit, DoCheck {\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n  public sessionUser: any;\n  public filters: any;\n  public isLoggedIn: boolean = false;\n  public slots: Slot[];\n  public searchResultSlots: Slot[];\n  public searchByActividadID: number = 0;\n  public searchByMonitorID: number = 0;\n  public actividades:any = [ {id:0,nombre:'Todas las actividades'} ];\n  public monitores:any = [ {id:0, nombre:'Todos los monitores'}];\n  public isDataLoaded:boolean = false;\n\n  constructor(\n    private _helperService: HelperService,\n    private _serviceSala: SalaService,\n    private _serviceSlot: SlotService,\n    private _serviceReserva: ReservaService,\n    private _serviceUsuario: UsuarioService,\n  ) {\n    this.pageTitle = \"Horario Clases Semanal\";\n    this.pageDesc = \"Las clases que tenemos programadas\";\n    this.pageImg = \"clase.jpg\";\n    this.filters = {\n      type: \"tabla\",\n      actividad: \"\",\n      monitor: \"\",\n    };\n  }\n\n  ngOnInit(): void {\n\n    this._helperService.checkIsLoginAndRedirectToLogin();\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n    })\n    .then(()=>{\n      this.isLoggedIn = this._helperService.checkIsLogin();\n    });\n    \n    \n    this._serviceSlot.getSlots().toPromise()\n    .then((slots)=>{\n      this.slots = slots;\n      for(var slot of slots) {\n        if(!this.getIndexOfID(this.actividades, slot.actividad.id)) {\n          this.actividades.push({id: slot.actividad.id, nombre: slot.actividad.nombre });\n        }\n\n        if(!this.getIndexOfID(this.monitores, slot.monitor.id)) {\n          this.monitores.push({id: slot.monitor.id, nombre: slot.monitor.nombre + ' ' + slot.monitor.apellidos });\n        }\n      }\n    })\n    .then(()=>{\n      this.searchSlots();\n    })\n    .then(()=>{\n      this.isDataLoaded=true;\n      //console.log(this.actividades);\n    });\n    \n  }\n\n\n  getIndexOfID(arr:any, id:number) {\n    var exist = false;\n    for (var i = 0; i < arr.length; i++) {\n      if(arr[i].id == id) {\n        exist = true;\n      }\n    }\n    return exist;\n  }\n\n  ngDoCheck() {\n    //console.log(this.filters.type);\n  }\n\n  searchByActividad(value:any){\n    this.searchByActividadID = value;\n    this.searchSlots();\n  }\n\n  searchByMonitor(value:any){\n    this.searchByMonitorID = value;\n    this.searchSlots();\n  }\n\n  searchSlots() {\n    this.searchResultSlots = [];\n\n    //search by actividad\n    if( (this.searchByActividadID != 0) && (this.searchByMonitorID == 0) ) {\n      for(let slot of this.slots) {\n        if(slot.actividad.id == this.searchByActividadID) {\n          this.searchResultSlots.push(slot);\n        }\n      }\n    }\n\n    //search by monitor\n    if( (this.searchByActividadID == 0) && (this.searchByMonitorID != 0) ) {\n      for(let slot of this.slots) {\n        if(slot.monitor.id == this.searchByMonitorID) {\n          this.searchResultSlots.push(slot);\n        }\n      }\n    }\n\n    //search by actividad y monitor\n    if( (this.searchByActividadID != 0) && (this.searchByMonitorID != 0) ) {\n      for(let slot of this.slots) {\n        if((slot.actividad.id == this.searchByActividadID) && (slot.monitor.id == this.searchByMonitorID)) {\n          this.searchResultSlots.push(slot);\n        }\n      }\n    }\n\n    //all the slots\n    if( (this.searchByActividadID == 0) && (this.searchByMonitorID == 0) ) {\n      for(let slot of this.slots) {\n          this.searchResultSlots.push(slot);\n      }\n    }\n    //console.log(this.searchResultSlots);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'aboutus-callaction',\n  templateUrl: './callaction.component.html',\n  styleUrls: ['./callaction.component.css']\n})\nexport class CallActionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section\n  class=\"p-t-200 p-b-200\"\n  data-bg-parallax=\"assets/fitness/images/parallax/bike.jpg\"\n>\n  <div\n    class=\"parallax-container img-loaded\"\n    data-bg=\"assets/fitness/images/parallax/bike.jpg\"\n    data-velocity=\"100\"\n  ></div>\n  <div class=\"bg-overlay\" data-style=\"10\"></div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-9 center text-center text-light\">\n        <h1 class=\"text-lg font-weight-600\">Estamos de oferta</h1>\n        <p class=\"lead\">Pregunta por nuestras promociones</p>\n        <a href=\"/contacto\" class=\"btn btn-light btn-outline btn-rounded btn-icon-holder btn-shadow mt-4\"\n          >No te pierdas esta oportunidad <i class=\"icon-user-plus\"></i></a\n        >\n      </div>\n    </div>\n  </div>\n</section>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { TipoEjercicio } from \"@modelsRest/TipoEjercicio\";\nimport { Observable } from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TipoEjercicioServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + \"tipoEjercicio\";\n\n  getTipoEjercicios(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getTipoEjercicio(tipoEjercicio:number):Observable<any>{\n    return this._http.get<TipoEjercicio>(this.url+\"/\"+tipoEjercicio);\n  }\n\n  updateTipoEjercicio(tipoEjercicio:TipoEjercicio):Observable<any>{\n    return this._http.put<TipoEjercicio>(this.url+\"/\"+tipoEjercicio.id,tipoEjercicio);\n  }\n  deleteTipoEjercicio(tipoEjercicio: TipoEjercicio) {\n    return this._http.delete<TipoEjercicio>(this.url + \"/\" + tipoEjercicio.id);\n  }\n\n  createTipoEjercicio(tipoEjercicio:TipoEjercicio):Observable<any>{\n    return this._http.post<TipoEjercicio>(this.url,tipoEjercicio);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { DatePipe } from '@angular/common';\n\n//imports componentes\nimport { SharedModule } from \"@shared/shared.module\";\nimport { ActividadAddComponent } from \"@componentsRest/actividad/actividad-add/actividad-add.component\";\nimport { ActividadListComponent } from \"@componentsRest/actividad/actividad-list/actividad-list.component\";\nimport { DireccionAddComponent } from \"@componentsRest/direccion/direccion-add/direccion-add.component\";\nimport { DireccionListComponent } from \"@componentsRest/direccion/direccion-list/direccion-list.component\";\nimport { EjercicioAddComponent } from \"@componentsRest/ejercicio/ejercicio-add/ejercicio-add.component\";\nimport { EjercicioListComponent } from \"@componentsRest/ejercicio/ejercicio-list/ejercicio-list.component\";\nimport { EjercicioSerieAddComponent } from \"@componentsRest/ejercicio_serie/ejercicio-serie-add/ejercicio-serie-add.component\";\nimport { EjercicioSerieListComponent } from \"@componentsRest/ejercicio_serie/ejercicio-serie-list/ejercicio-serie-list.component\";\nimport { FacturaAddComponent } from \"@componentsRest/factura/factura-add/factura-add.component\";\nimport { FacturaListComponent } from \"@componentsRest/factura/factura-list/factura-list.component\";\nimport { LocalidadAddComponent } from \"@componentsRest/localidad/localidad-add/localidad-add.component\";\nimport { LocalidadListComponent } from \"@componentsRest/localidad/localidad-list/localidad-list.component\";\nimport { ProvinciaAddComponent } from \"@componentsRest/provincia/provincia-add/provincia-add.component\";\nimport { ProvinciaListComponent } from \"@componentsRest/provincia/provincia-list/provincia-list.component\";\nimport { ReservaAddComponent } from \"@componentsRest/reserva/reserva-add/reserva-add.component\";\nimport { ReservaListComponent } from \"@componentsRest/reserva/reserva-list/reserva-list.component\";\nimport { RolAddComponent } from \"@componentsRest/rol/rol-add/rol-add.component\";\nimport { RolListComponent } from \"@componentsRest/rol/rol-list/rol-list.component\";\nimport { SalaAddComponent } from \"@componentsRest/sala/sala-add/sala-add.component\";\nimport { SalaListComponent } from \"@componentsRest/sala/sala-list/sala-list.component\";\nimport { SlotAddComponent } from \"@componentsRest/slot/slot-add/slot-add.component\";\nimport { SlotListComponent } from \"@componentsRest/slot/slot-list/slot-list.component\";\nimport { SuscripcionAddComponent } from \"@componentsRest/suscripcion/suscripcion-add/suscripcion-add.component\";\nimport { SuscripcionListComponent } from \"@componentsRest/suscripcion/suscripcion-list/suscripcion-list.component\";\nimport { TaquillaAddComponent } from \"@componentsRest/taquilla/taquilla-add/taquilla-add.component\";\nimport { TaquillaListComponent } from \"@componentsRest/taquilla/taquilla-list/taquilla-list.component\";\nimport { TipoActividadAddComponent } from \"@componentsRest/tipo_actividad/tipo-actividad-add/tipo-actividad-add.component\";\nimport { TipoActividadListComponent } from \"@componentsRest/tipo_actividad/tipo-actividad-list/tipo-actividad-list.component\";\nimport { TipoEjercicioAddComponent } from \"@componentsRest/tipo_ejercicio/tipo-ejercicio-add/tipo-ejercicio-add.component\";\nimport { TipoEjercicioListComponent } from \"@componentsRest/tipo_ejercicio/tipo-ejercicio-list/tipo-ejercicio-list.component\";\nimport { TipoSuscripcionAddComponent } from \"@componentsRest/tipo_suscripcion/tipo-suscripcion-add/tipo-suscripcion-add.component\";\nimport { TipoSuscripcionListComponent } from \"@componentsRest/tipo_suscripcion/tipo-suscripcion-list/tipo-suscripcion-list.component\";\nimport { UsuarioAddComponent } from \"@componentsRest/usuario/usuario-add/usuario-add.component\";\nimport { UsuarioListComponent } from \"@componentsRest/usuario/usuario-list/usuario-list.component\";\nimport { TablaEjercicioAddComponent } from \"@componentsRest/tabla_ejercicio/tabla-ejercicio-add/tabla-ejercicio-add.component\";\nimport { TablaEjercicioListComponent } from \"@componentsRest/tabla_ejercicio/tabla-ejercicio-list/tabla-ejercicio-list.component\";\n\n//imports pipes\nimport { FormatoHoraPipe } from \"./pipes/formatoHora.pipe\";\n\n@NgModule({\n  declarations: [\n    TipoEjercicioListComponent,\n    TipoActividadAddComponent,\n    ActividadListComponent,\n    ActividadAddComponent,\n    DireccionListComponent,\n    DireccionAddComponent,\n    ProvinciaListComponent,\n    ProvinciaAddComponent,\n    LocalidadListComponent,\n    LocalidadAddComponent,\n    SuscripcionAddComponent,\n    SalaListComponent,\n    SalaAddComponent,\n    TaquillaListComponent,\n    TaquillaAddComponent,\n    RolListComponent,\n    RolAddComponent,\n    TipoEjercicioListComponent,\n    TipoEjercicioAddComponent,\n    EjercicioListComponent,\n    EjercicioAddComponent,\n    SuscripcionListComponent,\n    SuscripcionAddComponent,\n    TipoSuscripcionListComponent,\n    TipoSuscripcionAddComponent,\n    UsuarioListComponent,\n    UsuarioAddComponent,\n    FacturaListComponent,\n    FacturaAddComponent,\n    ReservaListComponent,\n    ReservaAddComponent,\n    FormatoHoraPipe,\n    SlotListComponent,\n    SlotAddComponent,\n    EjercicioSerieListComponent,\n    EjercicioSerieAddComponent,\n    TablaEjercicioListComponent,\n    TablaEjercicioAddComponent,\n    TipoActividadListComponent,\n  ],\n  imports: [SharedModule],\n  providers: [DatePipe]\n})\nexport class RestModule {}\n","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    enabled\n    (click)=\"habilitarTipoEjercicio()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Tipo De Ejercicio\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarTipoEjercicio()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Tipo De Ejercicio\n  </button>\n</div>\n<div *ngIf=\"mostrarTipoEjercicioAdd == true\">\n  <app-tipo-ejercicio-add></app-tipo-ejercicio-add>\n</div>\n\n<h3 class=\"card-title\">Tipos De Ejercicio</h3>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center \"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n        </th>\n\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tipoEjercicio of tiposEjercicio\" class=\"text-center\">\n        <td class=\"text-left\">{{ tipoEjercicio.nombre }}</td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, tipoEjercicio)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.tipoEjercicio)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar el tipo de ejercicio <span class=\"text-danger\">{{tipoEjercicioAux.nombre}} ({{tipoEjercicioAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Tipo de Ejercicio</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"tipoEjercicioUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalTipoEjercicio)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">Nombre Tipo de Ejercicio</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"nombre\"\n              #nombreTipoEjercicio=\"ngModel\"\n              [(ngModel)]=\"tipoEjercicioUpdate.nombre\"\n              placeholder=\"Nombre Tipo de Ejercicio\"\n              required\n              pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ0-9]){2,100}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && nombreTipoEjercicio.invalid) ||\n                  (nombreTipoEjercicio.touched && !nombreTipoEjercicio.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && nombreTipoEjercicio.invalid) ||\n                (nombreTipoEjercicio.touched && !nombreTipoEjercicio.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  nombreTipoEjercicio.errors.required ||\n                  nombreTipoEjercicio.invalid\n                \"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalTipoEjercicio let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoEjercicio } from \"@modelsRest/TipoEjercicio\";\nimport { TipoEjercicioServiceService } from \"@servicesRest/tipo_ejercicio/tipo-ejercicio-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-tipo-ejercicio-list\",\n  templateUrl: \"./tipo-ejercicio-list.component.html\",\n  styleUrls: [\"./tipo-ejercicio-list.component.css\"],\n})\nexport class TipoEjercicioListComponent implements OnInit {\n  //open parte add\n  mostrarTipoEjercicioAdd: boolean = false;\n\n  //parte update\n  tiposEjercicio: TipoEjercicio[];\n  tipoEjercicioUpdate: any;\n  textoModal: string;\n\n  //confirm delete\n  tipoEjercicioAux:any;\n\n  constructor(\n    private _service: TipoEjercicioServiceService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {\n    this.tipoEjercicioUpdate = {};\n  }\n\n  ngOnInit(): void {\n    document.getElementById(\"minus\").hidden = true;\n\n    this._service.getTipoEjercicios().subscribe((data) => {\n      this.tiposEjercicio = data;\n    });\n  }\n  update(modal) {\n    this._service\n      .updateTipoEjercicio(this.tipoEjercicioUpdate)\n      .subscribe((data) => {\n        this.textoModal = \"¡Tipo ejercicio actualizado!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n  delete() {\n    this._service.deleteTipoEjercicio(this.tipoEjercicioAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  habilitarTipoEjercicio() {\n    this.mostrarTipoEjercicioAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarTipoEjercicio() {\n    this.mostrarTipoEjercicioAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, tipoEjercicio: TipoEjercicio) {\n    this._service.getTipoEjercicio(tipoEjercicio.id).subscribe((data) => {\n      this.tipoEjercicioUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n        },\n        (reason) => {\n        }\n      );\n  }\n\n      //modal coinfirm delete\n      openModalDelete(confirmDelete, tipoEjercicio:TipoEjercicio){\n        this.tipoEjercicioAux = tipoEjercicio;\n        this.modalService\n        .open(confirmDelete, { ariaLabelledBy: \"modal-basic-title\", centered: true, size : \"md\"})\n        .result.then(\n          (result) => {\n          },\n          (reason) => {\n          }\n        );\n      }\n      refresh() {\n        window.location.reload();\n      }\n    \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'aboutus-conceptos',\n  templateUrl: './conceptos.component.html',\n  styleUrls: ['./conceptos.component.css']\n})\nexport class ConceptosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"box-fancy section-fullwidth text-light p-b-0\">\n    <div class=\"row\">\n        <div style=\"background-color:#005eff\" class=\"col-lg-4\">\n            <h1 class=\"text-lg text-uppercase\">01.</h1>\n            <h3>PRUEBA</h3>\n            <span>¡Ven a probar! Si no lo has hecho nunca es importante dar el primer paso y probar. ¿No te pica la curiosidad? Hazlo por ti.</span>\n        </div>\n\n        <div style=\"background-color:#0251db\" class=\"col-lg-4\">\n            <h1 class=\"text-lg text-uppercase\">02.</h1>\n            <h3>HÁBITO</h3>\n            <span>Al principio siempre cuesta un poco. Es importante mantener el ritmo y formar hábitos. En nada de tiempo te daras cuenta que ya no puedes parar.</span>\n        </div>\n\n        <div style=\"background-color:#0347bc\" class=\"col-lg-4\">\n            <h1 class=\"text-lg text-uppercase\">03.</h1>\n            <h3>AVANZADO</h3>\n            <span>Has llegado a un nivel avanzado. Tenemos un equipo que te puede ayudar avanzar todavia más. Date una oportunidad.</span>\n        </div>\n    </div>\n</section>\n","<h3>Nuevo Ejercicio</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addEjercicio(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"nombre\"\n          #ejercicioNombre=\"ngModel\"\n          [(ngModel)]=\"nuevoEjercicio.nombre\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required=\"\"\n          pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ0-9]){2,50}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && ejercicioNombre.invalid) ||\n              (ejercicioNombre.touched && !ejercicioNombre.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && ejercicioNombre.invalid) ||\n            (ejercicioNombre.touched && !ejercicioNombre.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"ejercicioNombre.errors.required || ejercicioNombre.invalid\"\n          >\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"tipoEjercicio\">(*) Tipo de Ejercicio</label>\n        <select\n          class=\"form-control\"\n          name=\"tipoEjercicio\"\n          id=\"tipoEjercicio\"\n          #ejercicioTipoEjercicio=\"ngModel\"\n          [(ngModel)]=\"tipoEjercicioId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && ejercicioTipoEjercicio.invalid) ||\n              (ejercicioTipoEjercicio.touched && !ejercicioTipoEjercicio.valid)\n          }\"\n          [(ngModel)]=\"tipoEjerSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let tipoEjercicio of tiposEjercicio\"\n            value=\"{{ tipoEjercicio.id }}\"\n          >\n            {{ tipoEjercicio.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && ejercicioTipoEjercicio.invalid) ||\n            (ejercicioTipoEjercicio.touched && !ejercicioTipoEjercicio.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              ejercicioTipoEjercicio.errors.required ||\n              ejercicioTipoEjercicio.invalid\n            \"\n          >\n            * Seleccione un tipo de ejercicio\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Ejercicio <span class=\"text-danger\">{{nuevoEjercicio.nombre}}</span> registrado!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoEjercicio } from \"@modelsRest/TipoEjercicio\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { EjercicioServiceService } from \"@servicesRest/ejercicio/ejercicio-service.service\";\nimport { TipoEjercicioServiceService } from \"@servicesRest/tipo_ejercicio/tipo-ejercicio-service.service\";\n\n@Component({\n  selector: \"app-ejercicio-add\",\n  templateUrl: \"./ejercicio-add.component.html\",\n  styleUrls: [\"./ejercicio-add.component.css\"],\n})\nexport class EjercicioAddComponent implements OnInit {\n  //add ejercicio\n  nuevoEjercicio: any;\n  //asignartipoEjercicio\n  tipoEjercicioId: number;\n  //preselect\n  tipoEjerSelect = \"\";\n  tiposEjercicio: TipoEjercicio[];\n  \n  constructor(\n    private _service: EjercicioServiceService,\n    private _serviceTipoEjercicio: TipoEjercicioServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevoEjercicio = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceTipoEjercicio.getTipoEjercicios().subscribe((data) => {\n      this.tiposEjercicio = data;\n    });\n  }\n\n  obtenerUnTipoEjercicio() {\n    return this._serviceTipoEjercicio\n      .getTipoEjercicio(this.tipoEjercicioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoEjercicio.tipoEjercicio = data;\n      });\n  }\n\n  addEjercicio(create,errorModal) {\n    this.obtenerUnTipoEjercicio().then(() => {\n      this._service.createEjercicio(this.nuevoEjercicio).subscribe(\n        (data) => {\n          this.modalService.open(create, {\n            ariaLabelledBy: \"modal-basic-title\",\n            centered: true,\n            size: \"md\",\n          });\n          setTimeout(function () {\n            window.location.reload();\n          }, 3000);\n        },\n        (err) => {\n          this.modalService.open(errorModal, {\n            ariaLabelledBy: \"modal-basic-title\",\n            centered: true,\n            size: \"md\",\n          });\n        }\n      );\n      });\n    }\n  \n    refresh() {\n      window.location.reload();\n    }\n  }","<h3>Nueva Taquilla</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addTaquilla(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">Número Taquilla</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"numero\"\n          #numeroTaquilla=\"ngModel\"\n          [(ngModel)]=\"nuevaTaquilla.numero\"\n          placeholder=\"Número de taquilla\"\n          required\n          min=\"1\"\n          max=\"1000\"\n          pattern=\"(([1-9])|([1-9])([0-9])|([1-9])([0-9])([0-9])|1000)\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && numeroTaquilla.invalid) ||\n              (numeroTaquilla.touched && !numeroTaquilla.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && numeroTaquilla.invalid) ||\n            (numeroTaquilla.touched && !numeroTaquilla.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"numeroTaquilla.errors.required || numeroTaquilla.invalid\">\n            * Número no válido\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>Taquilla <span class=\"text-danger\">{{nuevaTaquilla.numero}}</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TaquillaServiceService } from \"@servicesRest/taquilla/taquilla-service.service\";\n\n@Component({\n  selector: \"app-taquilla-add\",\n  templateUrl: \"./taquilla-add.component.html\",\n  styleUrls: [\"./taquilla-add.component.css\"],\n})\nexport class TaquillaAddComponent implements OnInit {\n  nuevaTaquilla: any;\n\n  constructor(\n    private _service: TaquillaServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaTaquilla = {\n      numero: \"\",\n    };\n  }\n\n  ngOnInit(): void {}\n\n  addTaquilla(create, errorModal) {\n    this._service.createTaquilla(this.nuevaTaquilla).subscribe(\n      (data) => {\n        this.modalService.open(create, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 3000);\n      },\n      (err) => {\n        this.modalService.open(errorModal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\";\nimport { TipoActividad } from '../../models/TipoActividad';\nimport { appSettings } from '@core/helpers/appSettings';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoActividadServiceService {\n\n  constructor(private _http:HttpClient) { }\n\n  url= appSettings.apiUrl + \"tipoActividad\";\n  //coger todas las actividades\n  getTipoActividades():Observable<any>{\n    return this._http.get<TipoActividad>(this.url);\n  }\n  //coger una actividad\n  getTipoActividad(tipoActividad:number):Observable<TipoActividad>{\n    return this._http.get<TipoActividad>(this.url+\"/\"+tipoActividad);\n  }\n\n  deleteTipoActividad(tipoActividad:TipoActividad):Observable<any>{\n    return this._http.delete<TipoActividad>(this.url+\"/\"+tipoActividad.id);\n  }\n\n  createTipoActividad(tipoActividad:TipoActividad):Observable<any>{\n    return this._http.post<TipoActividad>(this.url,tipoActividad);\n  }\n\n  updateTipoActividad(tipoActividad:TipoActividad):Observable<any>{\n    return this._http.put<TipoActividad>(this.url+\"/\"+tipoActividad.id,tipoActividad);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { CallToActionComponent } from '@shared/components/call-to-action/call-to-action.component';\nimport { AllClasesComponent } from '../../components/all-clases/all-clases.component';\n@Component({\n  selector: 'app-clases',\n  templateUrl: './clases.component.html',\n  styleUrls: ['./clases.component.css']\n})\nexport class PageClasesComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Nuestras Clases';\n    this.pageDesc = 'Estamos aqui para ayudarte';\n    this.pageImg = 'clases.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<clases-all-clases></clases-all-clases>\n<shared-call-to-action\n    [title]=\"'Entrena duro, ten un plan'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [img]=\"'entrena.jpg'\"\n    [overlayStyle] = \"12\"\n    [btnTxt]=\"'Inscríbete'\"\n    [btnUrl]=\"'/registro'\"\n    [btnClass]=\"'btn-light btn-lg'\"\n    ></shared-call-to-action>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'shared-planes-suscripcion',\n  templateUrl: './planes-suscripcion.component.html',\n  styleUrls: ['./planes-suscripcion.component.css']\n})\nexport class PlanesSuscripcionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"section3\" class=\"p-t-120 p-b-120\">\n  <div class=\"container\">\n    <div class=\"col-lg-8 m-b-100 center\">\n      <div class=\"heading-text heading-section text-center\">\n        <h5 class=\"text-uppercase\">¡Seguro que será facil decidirte!</h5>\n        <h2>El precio más asequible</h2>\n        <p>\n          <b>¿No te lo habíamos dicho ya?</b> <br>\n          <b class=\"text-primary\">Somos muy asequibles</b>.<br />\n          Decide cuál es el precio que más se adeque a tus circumstancias.\n        </p>\n      </div>\n    </div>\n    <hr class=\"space\" />\n    <div class=\"row pricing-table\">\n      <div class=\"col-lg-4 col-md-12 col-12\">\n        <div class=\"plan\">\n          <div class=\"plan-header\">\n            <h4>Plan FREE</h4>\n            <p class=\"text-muted\">Mensual</p>\n            <div class=\"plan-price\">27<sup>€</sup><span>/mes</span></div>\n          </div>\n          <div class=\"plan-list\">\n            <ul>\n              <li><i class=\"fas fa-lock-open\"></i>Acceso ilimitado</li>\n              <li><i class=\"fa fa-handshake\"></i>Inscripción según promoción</li>\n              <li><i class=\"fa fa-users\"></i>Actividades colectivas</li>\n              <li><i class=\"fa fa-money-bill-wave\"></i>Pago mes a mes</li>\n            </ul>\n            <div class=\"plan-button\">\n              <a href=\"/registro\" class=\"btn btn-light\">Inscríbete Ahora</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-4 col-md-12 col-12\">\n        <div class=\"plan featured\">\n          <div class=\"plan-header\">\n            <h4>Plan Deluxe</h4>\n            <p class=\"text-muted\">Trimestral</p>\n            <div class=\"plan-price\">20<sup>€</sup><span>/mes</span></div>\n          </div>\n          <div class=\"plan-list\">\n            <ul>\n              <li><i class=\"fas fa-lock-open\"></i>Acceso ilimitado</li>\n              <li><i class=\"fa fa-handshake\"></i>Inscripción según promoción</li>\n              <li><i class=\"fa fa-users\"></i>Actividades colectivas</li>\n              <li><i class=\"fa fa-money-bill-wave\"></i>El trimestre sale por 75€</li>\n            </ul>\n            <div class=\"plan-button\">\n              <a href=\"/registro\" class=\"btn\">Inscríbete Ahora</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-4 col-md-12 col-12\">\n        <div class=\"plan\">\n          <div class=\"plan-header\">\n            <h4>Plan Adicto</h4>\n            <p class=\"text-muted\">Anual</p>\n            <div class=\"plan-price\">15<sup>€</sup><span>/mes</span></div>\n          </div>\n          <div class=\"plan-list\">\n            <ul>\n              <li><i class=\"fas fa-lock-open\"></i>Acceso ilimitado</li>\n              <li><i class=\"fa fa-handshake\"></i>Inscripción según promoción</li>\n              <li><i class=\"fa fa-users\"></i>Actividades colectivas</li>\n              <li><i class=\"fa fa-money-nill-wave\"></i>El año sale por 180€</li>\n            </ul>\n            <div class=\"plan-button\">\n              <a href=\"/registro\" class=\"btn btn-light\">Inscríbete Ahora</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { TipoSuscripcion } from \"@modelsRest/TipoSuscripcion\";\nimport { Observable } from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TipoSuscripcionServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + \"tipoSuscripcion\";\n\n  getTiposSuscripcion(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getTipoSuscripcion(tipoSuscripcion:number):Observable<any>{\n    return this._http.get<TipoSuscripcion>(this.url+\"/\"+tipoSuscripcion);\n  }\n\n  deleteTipoSuscripcion(tipoSuscripcion: TipoSuscripcion) {\n    return this._http.delete<TipoSuscripcion>(\n      this.url + \"/\" + tipoSuscripcion.id\n    );\n  }\n\n  createTipoSuscripcion(tipoSuscripcion:TipoSuscripcion):Observable<any>{\n    return this._http.post<TipoSuscripcion>(this.url,tipoSuscripcion);\n  }\n\n  updateTipoSuscripcion(tipoSuscripcion:TipoSuscripcion):Observable<any>{\n    return this._http.put<TipoSuscripcion>(this.url+\"/\"+tipoSuscripcion.id,tipoSuscripcion);\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../services/token-storage.service';\nimport { Observable } from 'rxjs';\n\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];","export class FraseMotivadora {\n    \n    constructor(\n        private _frase: string\n    ) {\n\n    }\n\n    get frase() {\n        return this._frase;\n    }\n\n    set frase(frase) {\n        this._frase = frase;\n    }\n\n\n}","<h3>Nueva Reserva</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addReserva(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-2\">\n        <label for=\"recurrente\">(*) Recurrente</label>\n        <select\n          class=\"form-control\"\n          name=\"recurrente\"\n          id=\"recurrente\"\n          #reservaRecurrrente=\"ngModel\"\n          [(ngModel)]=\"nuevaReserva.recurrente\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && reservaRecurrrente.invalid) ||\n              (reservaRecurrrente.touched && !reservaRecurrrente.valid)\n          }\"\n          [(ngModel)]=\"reservaRecurrenteSelect\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option value=\"true\">Sí</option>\n          <option value=\"false\">No</option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && reservaRecurrrente.invalid) ||\n            (reservaRecurrrente.touched && !reservaRecurrrente.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              reservaRecurrrente.errors.required || reservaRecurrrente.invalid\n            \"\n          >\n            * opción no válida\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"slot\">(*) Slot</label>\n        <select\n          class=\"form-control\"\n          name=\"slot\"\n          id=\"slot\"\n          #reservaSlot=\"ngModel\"\n          [(ngModel)]=\"slotId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && reservaSlot.invalid) ||\n              (reservaSlot.touched && !reservaSlot.valid)\n          }\"\n          [(ngModel)]=\"reservaSlotSelect\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option *ngFor=\"let slot of slots\" value=\"{{ slot.id }}\">\n            {{ slot.actividad.nombre }} - {{slot.horaInicio | formatoHora}} - {{slot.diaSemana}}\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && reservaSlot.invalid) ||\n            (reservaSlot.touched && !reservaSlot.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              reservaSlot.errors.required || reservaSlot.invalid\n            \"\n          >\n            * slot no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"usuario\">(*) Usuario</label>\n        <select\n          class=\"form-control\"\n          name=\"usuario\"\n          id=\"usuario\"\n          #reservaUsuario=\"ngModel\"\n          [(ngModel)]=\"usuarioId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && reservaUsuario.invalid) ||\n              (reservaUsuario.touched && !reservaUsuario.valid)\n          }\"\n          [(ngModel)]=\"reservaUsuarioSelect\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n            {{ usuario.nombre }}\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && reservaUsuario.invalid) ||\n            (reservaUsuario.touched && !reservaUsuario.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              reservaUsuario.errors.required || reservaUsuario.invalid\n            \"\n          >\n            * Usuario no válida\n          </div>\n        </div>\n      </div>\n\n\n\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Reserva del Usuario <span class=\"text-danger\">{{nuevaReserva.usuario.nombre}} - {{nuevaReserva.slot.diaSemana}} ({{nuevaReserva.slot.horaInicio|formatoHora}})</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Slot } from \"@modelsRest/Slot\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReservaServiceService } from \"@servicesRest/reserva/reserva-service.service\";\nimport { SlotServiceService } from \"@servicesRest/slot/slot-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { Usuario } from \"@shared/models/usuario\";\n\n@Component({\n  selector: \"app-reserva-add\",\n  templateUrl: \"./reserva-add.component.html\",\n  styleUrls: [\"./reserva-add.component.css\"],\n})\nexport class ReservaAddComponent implements OnInit {\n  nuevaReserva: any;\n  usuarioId: number;\n  slotId: number;\n\n  reservaRecurrenteSelect = \"\";\n  reservaSlotSelect = \"\";\n  reservaUsuarioSelect = \"\";\n  slots: Slot[];\n  usuarios: Usuario[];\n\n  constructor(\n    private _serviceUsuario: UsuarioServiceService,\n    private _serviceSlot: SlotServiceService,\n    private _service: ReservaServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaReserva = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceUsuario.getUsuariosByRol(3).subscribe((data) => {\n      this.usuarios = data;\n    });\n    this._serviceSlot.getSlots().subscribe((data) => {\n      this.slots = data;\n    });\n  }\n\n  obtenerUsuario() {\n    return this._serviceUsuario\n      .getUsuario(this.usuarioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaReserva.usuario = data;\n      });\n  }\n\n  obtenerSlot() {\n    return this._serviceSlot\n      .getSlot(this.slotId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaReserva.slot = data;\n      });\n  }\n  addReserva(create, errorModal) {\n    this.obtenerSlot()\n      .then(() => this.obtenerUsuario())\n      .then(() => {\n        this._service.createReserva(this.nuevaReserva).subscribe(\n          (data) => {\n            this.modalService.open(create, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n            setTimeout(function () {\n              window.location.reload();\n            }, 3000);\n          },\n          (err) => {\n            this.modalService.open(errorModal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n      });\n  }\n  refresh() {\n    window.location.reload();\n  }\n}\n","<app-topbar></app-topbar>\n\n<!-- Header -->\n<header id=\"header\" data-transparent=\"true\" class=\"header-modern dark\">\n    <div class=\"header-inner\">\n        <div class=\"container\">\n            <!--Logo-->\n            <div id=\"logo\">\n                <a href=\"/inicio\">\n                        <img src=\"assets/fitness/images/logo/logo-filscenter.png\" height=\"60\" />\n                    <!--\n                        <span class=\"logo-default\"></span>\n                        <span class=\"logo-dark\">FIL's Center</span>\n                    -->\n                </a>\n            </div>\n            <!--End: Logo-->\n            <!-- Search -->\n            <!--\n            <div id=\"search\"><a id=\"btn-search-close\" class=\"btn-search-close\" aria-label=\"Cerrar\"><i class=\"icon-x\"></i></a>\n                <form class=\"search-form\" action=\"#\" method=\"get\">\n                    <input class=\"form-control\" name=\"q\" type=\"text\" placeholder=\"Buscar...\" />\n                    <span class=\"text-muted\">Teclea y presiona \"Enter\" ó \"ESC\" para cerrar</span>\n                </form>\n            </div>\n            -->\n            <!-- end: search -->\n            <!--Header Extras-->\n            <!--\n            <div class=\"header-extras\">\n                <ul>\n                    <li> <a id=\"btn-search\" href=\"#\"> <i class=\"icon-search\"></i></a> </li>\n                    <li>\n                        <div class=\"p-dropdown\"> <a href=\"#\"><i class=\"icon-globe\"></i><span>EN</span></a>\n                            <ul class=\"p-dropdown-content\">\n                                <li><a href=\"#\">French</a></li>\n                                <li><a href=\"#\">Spanish</a></li>\n                                <li><a href=\"#\">English</a></li>\n                            </ul>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            -->\n            <!--end: Header Extras-->\n            <!--Navigation Resposnive Trigger-->\n            <div id=\"mainMenu-trigger\"> <a class=\"lines-button x\"><span class=\"lines\"></span></a> </div>\n            <!--end: Navigation Resposnive Trigger-->\n            <!--Navigation-->\n            <div id=\"mainMenu\">\n                <div class=\"container\">\n                    <nav>\n                        <ul>\n                            <li><a href=\"/inicio\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Inicio</a></li>\n                            <li><a href=\"/quienes-somos\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Quiénes somos</a></li>\n                            <li><a href=\"/clases\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Clases</a></li>\n                            <li><a href=\"/servicios\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Servicios</a></li>\n                            <li><a href=\"/horario\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Horario</a></li>\n                            <li><a href=\"/contacto\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Contacto</a></li>\n                            <li class=\"dropdown\">\n                                <a href=\"javascript:;\" [routerLinkActive]=\"['current']\" [routerLinkActiveOptions]=\"{exact: true}\">Área personal</a>\n                                <ul class=\"dropdown-menu\" *ngIf=\"isLoggedIn; else menuNotLoggedIn\">\n                                    <li><a href=\"/cuenta/inicio\">Mi Cuenta</a></li>\n                                    <li><a href=\"/cuenta/mis/datos\">Mis Datos</a></li>\n                                    <li><a href=\"/cuenta/mis/facturas\">Mis Facturas</a></li>\n                                    <li><a href=\"javascript:;\" (click)=\"logout()\">Salir</a></li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <!--end: Navigation-->\n        </div>\n    </div>\n</header>\n<!-- end: Header -->\n\n\n<ng-template #menuNotLoggedIn>\n    <ul class=\"dropdown-menu\">\n        <li><a href=\"/iniciar-sesion\">Iniciar Sesión</a></li>\n        <li><a href=\"/registro\">Registro</a></li>\n    </ul>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { TopbarComponent } from '../topbar/topbar.component';\nimport { HelperService } from '@core/services/helper.service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n  public sessionUser: any;\n  public isLoggedIn: boolean = false;\n  constructor(\n    private _helperService: HelperService\n  ) { }\n\n  ngOnInit(): void {\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n    })\n    .then(()=>{\n      this.isLoggedIn = this._helperService.checkIsLogin();\n    });\n    \n  }\n\n  logout(){\n    //console.log('logout');\n    this._helperService.logout()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PagetitleComponent } from './components/pagetitle/pagetitle.component';\nimport { MapaComponent } from './components/mapa/mapa.component';\nimport { PortfolioItemComponent } from './components/portfolio-item/portfolio-item.component';\nimport { TeamMemberComponent } from './components/team-member/team-member.component';\nimport { CallToActionComponent } from './components/call-to-action/call-to-action.component';\nimport { PlanesSuscripcionComponent } from './components/planes-suscripcion/planes-suscripcion.component';\nimport { ActividadComponent } from './components/actividad/actividad.component';\nimport { ServicioComponent } from './components/servicio/servicio.component';\n\nimport { FormatoStringToHoraPipe } from \"./pipes/formatoStringToHora.pipe\";\n\n@NgModule({\n  declarations: [\n    PagetitleComponent,\n    MapaComponent,\n    PortfolioItemComponent,\n    TeamMemberComponent,\n    CallToActionComponent,\n    PlanesSuscripcionComponent,\n    ActividadComponent,\n    ServicioComponent,\n    FormatoStringToHoraPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    PagetitleComponent,\n    MapaComponent,\n    CommonModule,\n    FormsModule,\n    PortfolioItemComponent,\n    TeamMemberComponent,\n    CallToActionComponent,\n    PlanesSuscripcionComponent,\n    ServicioComponent,\n    FormatoStringToHoraPipe\n  ]\n})\nexport class SharedModule { }\n","<h3>Nuevo Tipo de Actividad</h3>\n<div class=\"card-body\">\n  <form class=\"form-validate\" name=\"form\" (ngSubmit)=\"f.form.valid && addTipoActividad(create,errorModal)\" #f=\"ngForm\">\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">Nombre</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"nombre\"\n          #tipoActividadAdd=\"ngModel\"\n          [(ngModel)]=\"nuevoTipoActividad.nombre\"\n          placeholder=\"Nombre Tipo Actividad\"\n          required=\"\"\n          pattern=\"[a-zA-Z ]{2,50}\"[ngClass]=\"{\n            'is-invalid':\n              (f.submitted && tipoActividadAdd.invalid) ||\n              (tipoActividadAdd.touched && !tipoActividadAdd.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && tipoActividadAdd.invalid) ||\n            (tipoActividadAdd.touched && !tipoActividadAdd.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"tipoActividadAdd.errors.required || tipoActividadAdd.invalid\"\n          >\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn m-t-30 mt-3\"\n    >\n      Añadir\n    </button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Tipo de actividad <span class=\"text-danger\">{{nuevoTipoActividad.nombre}}</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoActividad } from \"@modelsRest/TipoActividad\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TipoActividadServiceService } from \"@servicesRest/tipo_actividad/tipo-actividad-service.service\";\n\n@Component({\n  selector: \"app-tipo-actividad-add\",\n  templateUrl: \"./tipo-actividad-add.component.html\",\n  styleUrls: [\"./tipo-actividad-add.component.css\"],\n})\nexport class TipoActividadAddComponent implements OnInit {\n  nuevoTipoActividad: any;\n\n  constructor(\n    private service: TipoActividadServiceService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevoTipoActividad = {};\n  }\n\n  ngOnInit(): void {}\n\n  addTipoActividad(create, errorModal) {\n    this.service.createTipoActividad(this.nuevoTipoActividad).subscribe(\n      (data) => {\n        this.modalService.open(create, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 3000);\n      },\n      (err) => {\n        this.modalService.open(errorModal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Slot } from '@modelsRest/Slot';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlotServiceService {\n\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'slot';\n\n  getSlots(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getSlot(slot:number):Observable<any>{\n    return this._http.get<Slot>(this.url+\"/\"+slot);\n  }\n\n  deleteSlot(slot:Slot){\n    return this._http.delete<Slot>(this.url+\"/\"+slot.id);\n  }\n\n  createSlot(slot:Slot):Observable<any>{\n    return this._http.post<Slot>(this.url,slot);\n  }\n\n  updateSlot(slot: Slot): Observable<any> {\n    return this._http.put<Slot>(this.url + \"/\" + slot.id, slot);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { PageHorarioComponent } from './pages/horario/horario.component';\nimport { TimelineComponent } from './componentes/timeline/timeline.component';\nimport { TablaComponent } from './componentes/tabla/tabla.component';\n\n@NgModule({\n  declarations: [PageHorarioComponent, TimelineComponent, TablaComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageHorarioComponent, TablaComponent]\n})\nexport class HorarioModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { Observable } from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UsuarioServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + \"usuario\";\n  urlAlta = appSettings.apiUrl + \"altaUsuario\";\n\n  getUsuarios(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getUsuario(usuario: number): Observable<any> {\n    return this._http.get<Usuario>(this.url + \"/\" + usuario);\n  }\n\n  getUsuariosByRol(rolId: number): Observable<any> {\n    return this._http.get<Usuario>(this.url + \"/rol/\" + rolId);\n  }\n  getUsuarioByEmail(email: string): Observable<any> {\n    return this._http.get<Usuario>(this.url + \"/email/\" + email);\n  }\n\n  deleteUsuario(usuario: Usuario) {\n    return this._http.delete<Usuario>(this.url + \"/\" + usuario.id);\n  }\n\n  createUsuario(usuario: Usuario): Observable<any> {\n    return this._http.post<Usuario>(this.url, usuario);\n  }\n\n  altaUser(usuario: Usuario): Observable<any> {\n    return this._http.post<Usuario>(this.urlAlta, usuario);\n  }\n\n  updateUsuario(usuario: Usuario): Observable<any> {\n    return this._http.put<Usuario>(this.url + \"/\" + usuario.id, usuario);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FraseMotivadora } from '@shared/models/frase.motivadora';\n\n@Injectable()\nexport class FraseMotivadoraService {\n    public frases: Array<FraseMotivadora>;\n\n    constructor() {\n        this.frases = [\n            new FraseMotivadora('Cada día es una nueva oportunidad para cambiar tu vida'),\n            new FraseMotivadora('Ningún mar en calma hizo experto a un marinero'),\n            new FraseMotivadora('El momento que da más miedo es siempre justo antes de empezar'),\n            new FraseMotivadora('El éxito en la vida no se mide por lo que logras sino por los obstáculos que superas'),\n            new FraseMotivadora('Mañana es una excusa maravillosa, ¿No crees?'),\n            new FraseMotivadora('Intenta ser un Arco iris en el día nublado de alguien'),\n            new FraseMotivadora('Esperar ser otra persona es una pérdida de tiempo'),\n            new FraseMotivadora('¿Existe el mañana por alguna razón?'),\n            new FraseMotivadora('Cuando me dices que no puedo, lo único que escucho es “Bla, bla, bla…”'),\n            new FraseMotivadora('¿Dé qué estas intentando huir?'),\n            new FraseMotivadora('Cualquier cosa que te plante la vida florecela con gracia'),\n            new FraseMotivadora('Deséalo, espéralo, suéñalo, pero por todos los medios… ¡Hazlo!'),\n            new FraseMotivadora('Eres suficiente tal y como eres'),\n            new FraseMotivadora('Debes hacer las cosas que crees que no puedes hacer'),\n            new FraseMotivadora('Tu mejor profesor es tu mayor error'),\n            new FraseMotivadora('Las cosas buenas llegan a los que saben esperar'),\n            new FraseMotivadora('No busques el momento perfecto, solo busca el momento y hazlo perfecto'),\n            new FraseMotivadora('Si te sientes perdido en el mundo es porque todavía no has salido a buscarte'),\n            new FraseMotivadora('No importa lo que pase, siempre tendrás una historia que contar'),\n            new FraseMotivadora('Encuentra lo que te hace feliz y ve hacia ello'),\n            new FraseMotivadora('Queda terminantemente prohibido levantarse sin ilusiones'),\n            new FraseMotivadora('Levántate, suspira, sonríe, y sigue adelante'),\n            new FraseMotivadora('Las dificultades no existen para hacerte renunciar sino para hacerte más fuerte'),\n        ];\n    }\n\n    findAll(): Array<FraseMotivadora> {\n        return this.frases;\n    }\n\n    getOneFrase(): FraseMotivadora {\n        return this.frases[this.getIndexRandom()];\n    }\n\n    getFrases(cant: number): Array<FraseMotivadora> {\n        var seleccionadas = [];\n        var indexes = [];\n        for (let i = 0; i < cant; i++) {\n            var index: number;\n            do {\n                index = this.getIndexRandom();\n            } while (indexes.includes(index));\n\n            indexes.push(index);\n            var frase = this.frases[index];\n            seleccionadas.push(frase);\n        }\n        return seleccionadas;\n    }\n\n    getIndexRandom(): number{\n        return Math.floor(Math.random() * (this.frases.length-1));\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Rol } from '@modelsRest/Rol';\nimport {Observable} from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolServiceService {\n\n  \n  constructor(private _http:HttpClient) { }\n\n  url= appSettings.apiUrl + \"rol\";\n\n  getRoles():Observable<any>{\n    return this._http.get(this.url);\n  }\n\n  getRol(rol:number):Observable<any>{\n    return this._http.get<Rol>(this.url+\"/\"+rol);\n  }\n\n  deleteRol(rol:Rol){\n    return this._http.delete<Rol>(this.url+\"/\"+rol.id);\n  }\n\n  createRol(rol:Rol):Observable<any>{\n    return this._http.post<Rol>(this.url,rol);\n  }\n\n  updateRol(rol: Rol): Observable<any> {\n    return this._http.put<Rol>(this.url + \"/\" + rol.id, rol);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FraseMotivadoraService } from '@core/services'\n@Component({\n  selector: 'home-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css'],\n  providers: [FraseMotivadoraService]\n})\nexport class HomeSliderComponent implements OnInit {\n  public frase: string;\n\n  constructor(\n    public _fraseMotivadoraService: FraseMotivadoraService\n  ) { \n    this.frase = _fraseMotivadoraService.getOneFrase().frase;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Inspiro Slider -->\n<div id=\"slider\" class=\"inspiro-slider slider-fullscreen dots-creative\" data-height-xs=\"360\" data-autoplay=\"2600\" data-animate-in=\"fadeIn\" data-animate-out=\"fadeOut\" data-items=\"1\" data-loop=\"true\" data-autoplay=\"true\">\n    <!-- Slide 1 -->\n    <div class=\"slide\" style=\"background-image:url(assets/fitness/images/filscenter.jpg);\">\n        <div class=\"container\">\n            <div class=\"slide-captions text-right\">\n                <div class=\"hero-heading-2 m-b-20 m-t-20 col-lg-6 float-right\">\n                    <!-- Captions -->\n                    <h1 class=\"text-colored text-xl\">LA <span class=\"text-orange\">VIDA</span> ES<span class=\"text-rotator\" data-animation=\"fadeIn\" data-speed=\"3000\">FITNESS, PODER, ESTAR EN FORMA</span></h1>\n                    <p class=\"lead text-light text-medium font-weight-600 mb-3\">{{ frase }}</p>\n                    <!-- <a class=\"btn btn-warning\" href=\"/registro\">¡Hazlo ahora!</a> -->\n                </div>\n                <!-- end: Captions -->\n            </div>\n        </div>\n    </div>\n    <!-- end: Slide 1 -->\n</div>\n<!--end: Inspiro Slider -->\n","import { Component, OnInit } from '@angular/core';\ndeclare var $:any;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  public title = 'filscenter';\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.loadJs();\n  }\n\n  loadJs() {\n    const dynamicScripts = [\n      'assets/js/functions.js',\n      // \"//maps.googleapis.com/maps/api/js?key=AIzaSyAZIus-_huNW25Jl7RPmHgoGZjD5udgBMI\",\n      // \"assets/js/plugins/gmap3/gmap3.min.js\",\n      // \"assets/js/plugins/gmap3/map-styles.js\"\n    ];\n\n    for (let i = 0; i < dynamicScripts.length; i++) {\n      const node = document.createElement('script');\n      node.src = dynamicScripts[i];\n      node.type = 'text/javascript';\n      node.async = false;\n      document.getElementsByTagName('head')[0].appendChild(node);\n    }\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","<div id=\"topbar\" class=\"dark topbar-fullwidth\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 d-none d-sm-block\">\n                <div class=\"social-icons social-icons-colored-hover\">\n                    <ul>\n                        <li class=\"social-facebook\"><a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a></li>\n                        <li class=\"social-twitter\"><a href=\"#\"><i class=\"fab fa-twitter\"></i></a></li>\n                        <li class=\"social-google\"><a href=\"#\"><i class=\"fab fa-google-plus-g\"></i></a></li>\n                        <li class=\"social-pinterest\"><a href=\"#\"><i class=\"fab fa-pinterest\"></i></a></li>\n                        <li class=\"social-vimeo\"><a href=\"#\"><i class=\"fab fa-vimeo\"></i></a></li>\n                        <li class=\"social-linkedin\"><a href=\"#\"><i class=\"fab fa-linkedin\"></i></a></li>\n                        <li class=\"social-dribbble\"><a href=\"#\"><i class=\"fab fa-dribbble\"></i></a></li>\n                        <li class=\"social-youtube\"><a href=\"#\"><i class=\"fab fa-youtube\"></i></a></li>\n                        <li class=\"social-rss\"><a href=\"#\"><i class=\"fa fa-rss\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <ul class=\"top-menu\" *ngIf=\"!isLoginIn\">\n                    <li><a href=\"/iniciar-sesion\">Iniciar Sesión</a></li>\n                    <li><a href=\"/registro\">Regístrate</a></li>\n                </ul>\n                <ul class=\"top-menu\" *ngIf=\"isLoginIn\">\n                    <li><a href=\"/cuenta\">Bienvenido {{ sessionUser.nombre }}</a></li>\n                    <li><a href=\"javascript:;\" (click)=\"logout()\">Salir</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from '@core/services/helper.service';\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css']\n})\nexport class TopbarComponent implements OnInit {\n  public sessionUser: any;\n  public isLoginIn: boolean = false;\n  constructor(\n    private _helperService: HelperService\n  ) { }\n\n  ngOnInit(): void {\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n    })\n    .then(()=>{\n      this.isLoginIn = this._helperService.checkIsLogin();\n    });\n  }\n\n  logout(){\n    //console.log('logout');\n    this._helperService.logout()\n  }\n\n}\n","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    enabled\n    (click)=\"habilitarTipoActividad()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Tipo Actividad\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarTipoActividad()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Tipo Actividad\n  </button>\n</div>\n<div *ngIf=\"mostrarTipoActividadAdd == true\">\n  <app-tipo-actividad-add></app-tipo-actividad-add>\n</div>\n\n<h3 class=\"card-title text-left\">Tipo Actividad</h3>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tipoActividad of tipoActividades\" class=\"text-center\">\n        <td class=\"text-left\">{{ tipoActividad.nombre }}</td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, tipoActividad)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.tipoActividad)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<hr />\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar el tipo de actividad <span class=\"text-danger\">{{tipoActividadAux.nombre}} ({{tipoActividadAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Tipo de Actividad</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"tipoActividadUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalTipoActividad)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">Nombre</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"nombre\"\n              #tipoActividadAdd=\"ngModel\"\n              [(ngModel)]=\"tipoActividadUpdate.nombre\"\n              placeholder=\"Nombre Tipo Actividad\"\n              required=\"\"\n              pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚÜ]){1}[a-zA-Z áéíóúÁÉÍÓÚÜ]{2,50}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && tipoActividadAdd.invalid) ||\n                  (tipoActividadAdd.touched && !tipoActividadAdd.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && tipoActividadAdd.invalid) ||\n                (tipoActividadAdd.touched && !tipoActividadAdd.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  tipoActividadAdd.errors.required || tipoActividadAdd.invalid\n                \"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalTipoActividad let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoActividad } from \"@modelsRest/TipoActividad\";\nimport { TipoActividadServiceService } from \"../../../services/tipo_actividad/tipo-actividad-service.service\";\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: \"app-tipo-actividad-list\",\n  templateUrl: \"./tipo-actividad-list.component.html\",\n  styleUrls: [\"./tipo-actividad-list.component.css\"],\n})\nexport class TipoActividadListComponent implements OnInit {\n\n  mostrarTipoActividadAdd: boolean = false;\n\n  tipoActividades: TipoActividad[];\n  //update\n  tipoActividadUpdate:any;\n  textoModal: string;\n\n  //confirm delete\n  tipoActividadAux:any;\n\n  constructor(\n    private _service: TipoActividadServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.tipoActividadUpdate={};\n  }\n\n  ngOnInit(): void {\n    \n    document.getElementById(\"minus\").hidden = true;\n\n    this._service.getTipoActividades().subscribe((data) => {\n      this.tipoActividades = data;\n    });\n  }\n\n  habilitarTipoActividad() {\n    this.mostrarTipoActividadAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarTipoActividad() {\n    this.mostrarTipoActividadAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n\n  delete() {\n    this._service.deleteTipoActividad(this.tipoActividadAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal){\n    this._service.updateTipoActividad(this.tipoActividadUpdate).subscribe(data=>{\n      this.textoModal = \"¡Tipo actividad actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  open(content,tipoActividad:TipoActividad) {\n    this._service.getTipoActividad(tipoActividad.id).subscribe(data=>{\n      this.tipoActividadUpdate = data;\n    })\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title',centered:true,size:\"md\"}).result.then((result) => {\n    }, (reason) => {\n    });\n  }\n\n  openModalDelete(confirmDelete, tipoActividad:TipoActividad){\n    this.tipoActividadAux = tipoActividad;\n    this.modalService\n    .open(confirmDelete, { ariaLabelledBy: \"modal-basic-title\", centered: true, size : \"md\"})\n    .result.then(\n      (result) => {\n      },\n      (reason) => {\n      }\n    );\n  }\n  \n  refresh() {\n    window.location.reload();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'aboutus-testimonios',\n  templateUrl: './testimonios.component.html',\n  styleUrls: ['./testimonios.component.css']\n})\nexport class TestimoniosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <div class=\"container\">\n        <div class=\"heading-text text-center\">\n            <h2>¡Lo que están diciendo!</h2>\n            <p class=\"lead text-center\"><b class=\"text-primary\">Somos una comunidad.</b><br/> Nos gusta pensar en nuestros clientes como amigos y familiares. <br />Al final pasamos mucho tiempo juntos y se crea un buen entorno de companierismo.</p>\n        </div>\n        <!-- Testimonials -->\n        <div class=\"carousel arrows-visibile testimonial testimonial-single testimonial-left\" data-items=\"1\">\n\n            <!-- Testimonials item -->\n            <div class=\"testimonial-item\">\n                <img src=\"assets/fitness/images/testimonios/carlos.jpg\" alt=\"Carlos Manzano\">\n                <p>He estado entrenando con Fit for Living durante aproximadamente 3 meses y estoy logrando cosas que nunca pensé que podría lograr.</p>\n                <span class=\"text-primary\">Carlos Manzano</span>\n            </div>\n            <!-- end: Testimonials item-->\n\n            <!-- Testimonials item -->\n            <div class=\"testimonial-item\">\n                <img src=\"assets/fitness/images/testimonios/ainara.jpg\" alt=\"Ainara Nieves\">\n                <p>He perdido una cantidad considerable de peso, me siento muy bien, ¡y ya es hora de actualizar mi guardarropa! Sé que todavía me queda un largo camino por recorrer, pero confío en que voy en la dirección correcta. ¡Ya no lucho con los niveles de energía y me siento mejor que durante años!</p>\n                <span class=\"text-primary\">Ainara Nieves</span>\n            </div>\n            <!-- end: Testimonials item-->\n\n            <!-- Testimonials item -->\n            <div class=\"testimonial-item\">\n                <img src=\"assets/fitness/images/testimonios/adelina.jpg\" alt=\"Adelina Guijarro\">\n                <p>Acabo de inscribirme por otras 12 semanas (sí, 4 días a la semana). ¡¡¡¡Esta vida puede ser adictiva !!! Felicito a este equipo por la pasión que exudan. Se lo recomiendo a cualquiera que quiera cambiar su vida. es sin duda asombroso y sin duda merece la pena.</p>\n                <span class=\"text-primary\">Adelina Guijarro</span>\n            </div>\n            <!-- end: Testimonials item-->\n\n            <!-- Testimonials item -->\n            <div class=\"testimonial-item\">\n                <img src=\"assets/fitness/images/testimonios/ivan.jpg\" alt=\"Ivan Llanos\">\n                <p>No puedo creer lo profundo que fue el consejo nutricional proporcionado. Solía ​​hacer MUCHO ejercicio y no obtenía los resultados. ¡No fue hasta que comencé a comer bien que obtuve resultados increíbles! Realmente pensé que sabía lo que era \"comer bien\", ¡pero poco sabía! Gracias Fil's Center Gym.</p>\n                <span class=\"text-primary\">Ivan Llanos</span>\n            </div>\n            <!-- end: Testimonials item-->\n\n        </div>\n        <!-- end: Testimonials -->\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { TeamMemberComponent } from '@shared/components/team-member/team-member.component';\nimport { FraseMotivadoraService } from '@core/services';\nimport { FraseMotivadora } from '@shared/models/frase.motivadora';\n\n@Component({\n  selector: 'home-monitors',\n  templateUrl: './monitors.component.html',\n  styleUrls: ['./monitors.component.css'],\n  providers: [FraseMotivadoraService]\n})\nexport class HomeMonitorsComponent implements OnInit {\n  public frases: Array<FraseMotivadora>;\n\n  constructor(\n    public _fraseMotivadoraService: FraseMotivadoraService\n  ) { \n    this.frases = _fraseMotivadoraService.getFrases(4);\n  }\n\n  ngOnInit(): void {\n    //console.log(this.frases);\n  }\n\n}\n","<!-- TRAINERS -->\n<section id=\"section5\" style=\"background-color: #2D2C2A\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-12 text-center m-b-40\">\n                <h2 class=\"text-lg font-weight-600 m-b-20 text-light\">Monitores</h2>\n                <p class=\"lead text-orange\">Tenemos un gran equipo que te ayudarán a seguir avanzar.</p>\n            </div>\n        </div>\n        <div class=\"row team-members team-members-circle team-members-transparent m-b-40 text-light\">\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"100\">\n                <team-member\n                    [memberImg]=\"'1.png'\"\n                    [memberNombre]=\"'Alea Sánchez'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[0].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'alea@filscenter.com'\"></team-member>\n            </div>\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"200\">\n                <team-member\n                    [memberImg]=\"'2.png'\"\n                    [memberNombre]=\"'Carlos Perea'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[1].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'carlos@filscenter.com'\"></team-member>\n            </div>\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"300\">\n                <team-member\n                    [memberImg]=\"'3.png'\"\n                    [memberNombre]=\"'Pedro Rodríguez'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[2].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'pedro@filscenter.com'\"></team-member>\n            </div>\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"400\">\n                <team-member\n                    [memberImg]=\"'4.png'\"\n                    [memberNombre]=\"'Carla Pérez'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[3].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'carla@filscenter.com'\"></team-member>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: TRAINERS -->","import { Injectable } from '@angular/core';\nimport { SuscripcionServiceService as SuscripcionService } from '@servicesRest/suscripcion/suscripcion-service.service';\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor(\n    private _serviceRestSuscripcion: SuscripcionService,\n  ) { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user: any) {\n    return new Promise(resolve=>{\n      user.isAdmin = (user.rol.nombre  == 'admin') ? true : false;\n      user.isMonitor = (user.rol.nombre  == 'monitor') ? true : false;\n      user.isUser = (user.rol.nombre  == 'user') ? true : false;\n      var dataSuscripcion:any = { isSubscribed: false, suscripcion: {} }\n\n      this._serviceRestSuscripcion.getSuscripcionesByUsuarioId(user.id).toPromise()\n      .then((suscripciones)=>{\n        //console.log(suscripciones);\n        if(suscripciones != null) {\n          for(let item of suscripciones) {\n            if(item.fechaBaja == null) {\n              //no tiene fecha de baja por lo tanto esta suscrito.\n              dataSuscripcion.isSubscribed = true;\n              dataSuscripcion.suscripcion = item;\n\n            } else {\n\n              //tiene fecha de baja y comprobamos si es todavia es activa la suscripción\n              var dateBaja = item.fechaBaja.substring(0,10);\n              var today = new Date();\n              var fechaBaja = new Date(dateBaja.substring(0,4), dateBaja.substring(5,7)-1, dateBaja.substring(8,10));\n\n              if(fechaBaja.getTime() >= today.getTime()) {\n                dataSuscripcion.isSubscribed = true;\n                dataSuscripcion.suscripcion = item;\n              }\n            };\n          }\n        }\n      })\n      .then(()=>{\n        user.suscripcion = dataSuscripcion;\n      })\n      .then(()=>{\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n      })\n      .then(()=>{\n        resolve(user);\n      });\n    });\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {};\n  }\n}","import { NgModule } from '@angular/core';\nimport { PageSignupComponent } from './pages/signup/signup.component';\nimport { FormularioComponent } from './components/formulario/formulario.component';\nimport { SharedModule } from '@shared/shared.module';\n@NgModule({\n  declarations: [PageSignupComponent, FormularioComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageSignupComponent]\n})\nexport class SignupModule { }\n","<div *ngIf=\"!isDataLoaded\" class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Cargando...</span>\n    </div>\n</div>\n\n<div *ngIf=\"isDataLoaded\">\n    <div class=\"mb-2\">\n        <div class=\"row\" >\n            <div class=\"col-md-12\">\n                <div class=\"pb-4\" *ngFor=\"let item of tablas\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8 col-sm-8\">\n                            <h5 class=\"py-2\">\n                                <div class=\"d-flex align-items-center\">\n                                    <div class=\"mr-4\">\n                                        {{ item.tabla.fechaInicio | date }}\n                                    </div>\n                                    <div class=\"mr-4\">\n                                        {{ item.tabla.fechaFin | date }}\n                                    </div>\n                                    <div class=\"font-weight-bold\">\n                                        {{ item.tabla.monitor.nombre + ' ' + item.tabla.monitor.apellidos }}\n                                    </div>\n                                </div>\n                            </h5>\n                        </div>\n                        <div class=\"col-md-4 col-sm-4 text-right\">\n                            <a class=\"btn btn-light btn-rounded btn-xs\" data-toggle=\"collapse\" href=\"#tabla-{{ item.tabla.id }}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                <i class=\"icon-plus\"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"row collapse\" id=\"tabla-{{item.tabla.id}}\">\n                        <div class=\"col-md-12\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-striped horario\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\" class=\"text-left\">Tipo</th>\n                                            <th scope=\"col\" class=\"text-left\">Ejercicio</th>\n                                            <th scope=\"col\" class=\"text-center\">Vez/semana</th>\n                                            <th scope=\"col\" class=\"text-center\">Repeticiones</th>\n                                            <th scope=\"col\" class=\"text-center\">Series</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let ejercicio of item.ejercicios\">\n                                            <td>{{ ejercicio.ejercicio.tipoEjercicio.nombre }}</td>\n                                            <td>{{ ejercicio.ejercicio.nombre }}</td>\n                                            <td class=\"text-center\">{{ ejercicio.porSemana }}</td>\n                                            <td class=\"text-center\">{{ ejercicio.repeticiones }}</td>\n                                            <td class=\"text-center\">{{ ejercicio.series }}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"line my-3\"></div>\n                </div>\n                    \n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TablaEjercicio } from \"@modelsRest/TablaEjercicio\";\nimport { HelperService } from '@core/services/helper.service';\nimport { TablaEjercicioServiceService as TablaEjercicioService } from \"@servicesRest/tabla_ejercicio/tabla-ejercicio-service.service\";\nimport { EjercicioSerieServiceService as EjercicioSerieService } from \"@servicesRest/ejercicio_serie/ejercicio-serie-service.service\";\n@Component({\n  selector: 'cuenta-inicio-tablas',\n  templateUrl: './inicio-tablas.component.html',\n  styleUrls: ['./inicio-tablas.component.css']\n})\nexport class CuentaInicioTablasComponent implements OnInit {\n  public isDataLoaded: boolean = false;\n  public tablasUser: TablaEjercicio[];\n  public tablas: any = [];\n\n  public sessionUser: any;\n\n  constructor(\n    private _helperService: HelperService,\n    private _serviceTablaEjercicio: TablaEjercicioService,\n    private _serviceEjercicioSerie: EjercicioSerieService,\n  ) { }\n\n  ngOnInit(): void {\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n    })\n    .then(()=>{\n      this.loadTablas();\n    });\n  }\n\n  loadTablas(){\n    this._serviceTablaEjercicio.getTablasEjerciciosByUsuarioId(this.sessionUser.id).toPromise()\n    .then((tablas)=>{\n      //console.log(tablas);\n      this.tablasUser = tablas;\n    })\n    .then(()=>{\n      //console.log(this.tablasUser);\n      this.buildTablasArray();\n\n    })\n    .then(()=>{\n      this.isDataLoaded=true;\n    });\n  }\n\n  async buildTablasArray(){\n    for( let tabla of this.tablasUser) {\n      var item= { tabla: {}, ejercicios: [] };\n      var ejercicios = await this._serviceEjercicioSerie.getEjerciciosPorTablaId(tabla.id).toPromise();\n      //console.log(ejercicios);\n      item.tabla = tabla;\n      item.ejercicios = ejercicios;\n      this.tablas.push(item);\n    }\n    console.log(this.tablas);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PagetitleComponent } from '@shared/components/pagetitle/pagetitle.component';\nimport { FormularioComponent } from '../../components/formulario/formulario.component';\nimport { HelperService } from '@core/services/helper.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class PageLoginComponent implements OnInit {\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  public isLoggedIn: boolean = true;\n  public sessionUser: any;\n\n  constructor(\n    private _helperService: HelperService,\n  ) {\n    this.pageTitle = 'Iniciar Sesión';\n    this.pageDesc = 'Introduce tus datos y accede a tu cuenta personal';\n    this.pageImg = 'login.jpg';\n  }\n\n  ngOnInit(): void {\n    this._helperService.checkIsLoginAndRedirectToCuenta();\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<login-formulario></login-formulario>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Provincia } from '@modelsRest/Provincia';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProvinciaServiceService {\n\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'provincia';\n\n  getProvincias(): Observable<any> {\n    return this._http.get<Provincia>(this.url);\n  }\n\n  getProvincia(provincia:number):Observable<any>{\n    return this._http.get<Provincia>(this.url+\"/\"+provincia);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ContactoUsuario } from '@shared/models/contacto.usuario';\nimport { appSettings } from '@core/helpers/appSettings';\n\nconst url = appSettings.apiUrl;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n    \n  constructor(private _http: HttpClient) { }\n\n  contactoSend(mensaje:ContactoUsuario): Observable<any> {\n    return this._http.post<ContactoUsuario>(url+'contactForm',mensaje);\n  }\n\n  resetPass(email:string): Observable<any> {\n    return this._http.post(url+'resetPassword',email);\n  }\n\n}","<div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    (click)=\"habilitarRol()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Rol\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarRol()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Rol\n  </button>\n</div>\n<div *ngIf=\"mostrarRolAdd == true\">\n  <app-rol-add></app-rol-add>\n</div>\n\n<h3 class=\"card-title text-left\">Roles</h3>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n        </th>\n\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let rol of roles\" class=\"text-center\">\n        <td class=\"text-left\">{{ rol.nombre }}</td>\n        <td>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Edit\"\n          (click)=\"open(content,rol)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.rol)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<!-- modal delete -->\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar el rol <span class=\"text-danger\">{{rolAux.nombre}} ({{rolAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete(usuario)\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Rol</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"rolUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalRol)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">Número Rol</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"nombre\"\n              #nombreRol=\"ngModel\"\n              [(ngModel)]=\"rolUpdate.nombre\"\n              placeholder=\"Número de Rol\"\n              required\n              min=\"1\"\n              max=\"1000\"\n              pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ]){2,20}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && nombreRol.invalid) ||\n                  (nombreRol.touched && !nombreRol.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && nombreRol.invalid) ||\n                (nombreRol.touched && !nombreRol.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"nombreRol.errors.required || nombreRol.invalid\">\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalRol let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Rol } from \"@modelsRest/Rol\";\nimport { RolServiceService } from \"@servicesRest/rol/rol-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HelperService } from '@core/services/helper.service';\n\n@Component({\n  selector: \"app-rol-list\",\n  templateUrl: \"./rol-list.component.html\",\n  styleUrls: [\"./rol-list.component.css\"],\n})\nexport class RolListComponent implements OnInit {\n  mostrarRolAdd: boolean = false;\n  roles: Rol[];\n\n  //update\n  rolUpdate: any;\n  closeResult = \"\";\n  textoModal: string = \"\";\n\n  //confirm delete\n  rolAux:any;\n\n  constructor(\n    private _service: RolServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n    ,private _helperService: HelperService\n  ) {\n    this.rolUpdate = {};\n    this.rolAux={};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isRolOK(\"admin\");\n\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getRoles().subscribe((data) => {\n      this.roles = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteRol(this.rolAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal) {\n    this._service.updateRol(this.rolUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Rol actualizado!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarRol() {\n    this.mostrarRolAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n  deshabilitarRol() {\n    this.mostrarRolAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, rol: Rol) {\n    this._service.getRol(rol.id).subscribe((data) => {\n      this.rolUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n        },\n        (reason) => {\n        }\n      );\n  }\n\n  //abre modal confirm delete\n  openModalDelete(confirmDelete, rol: Rol) {\n    this.rolAux = rol;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh(){\n    window.location.reload();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class HomeMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- MAP -->\n<section id=\"section6\" class=\"no-padding\">\n    <!-- Google Map -->\n    <app-mapa-google></app-mapa-google>\n    <!-- <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3037.0882479114916!2d-3.55135448369394!3d40.4290447793638!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd423064dd5ea8f1%3A0xe8ea07d40bdf703d!2sSmartFit%20gym%20Coslada!5e0!3m2!1sen!2ses!4v1616957228181!5m2!1sen!2ses\" width=\"100&%\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"></iframe> -->\n    <!-- <div class=\"map\" data-latitude=\"-37.817240\" data-longitude=\"144.955826\" data-style=\"dark\" data-info=\"Hello from &lt;br&gt; Inspiro Themes\"></div> -->\n    <!-- end: Google Map -->\n</section>\n<!-- end: MAP -->\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n// importamos los modulos\nimport { SharedModule } from '@shared/shared.module';\nimport { CoreModule } from '@core/core.module';\nimport { PagesModule } from './pages/pages.module';\nimport { RestModule } from './rest/rest.module';\nimport { CuentaModule } from './cuenta/cuenta.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport * as $ from '../../src/assets/js/jquery';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    CoreModule,\n    PagesModule,\n    RestModule,\n    CuentaModule,\n    NgbModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    enabled\n    (click)=\"habilitarSlot()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Slot\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarSlot()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Slot\n  </button>\n</div>\n<div *ngIf=\"mostrarSlotAdd == true\">\n  <app-slot-add></app-slot-add>\n</div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-6\">\n    <h3 class=\"text-left\">Slots</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-6 d-flex justify-content-end\">\n    <div class=\"\">\n      <label\n        >Sala / Día semana\n        <input\n          [(ngModel)]=\"filterSala\"\n          type=\"search\"\n          class=\"form-control\"\n          placeholder=\"\"\n      /></label>\n      <label for=\"\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary mt-2\"\n          (click)=\"filtrarTabla()\"\n        >\n          <i class=\"fas fa-search\"></i></button\n      ></label>\n      <button\n        type=\"button\"\n        class=\"btn btn-secondary mt-2 ml-4\"\n        (click)=\"quitarFiltroTabla()\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-text\">\n  <div class=\"card-text\">\n    <table\n      id=\"datatable\"\n      class=\"table table-bordered table-hover dataTable text-center\"\n      style=\"width: 100%\"\n      role=\"grid\"\n      aria-describedby=\"datatable_info\"\n    >\n      <thead>\n        <tr>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Actividad\n          </th>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Tipo Actividad\n          </th>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Monitor\n          </th>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Sala\n          </th>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Dia\n          </th>\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Hora\n          </th>\n          <!--th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Aforo Actual\n          </th-->\n          <th\n            id=\"\"\n            class=\"noExport sorting\"\n            tabindex=\"0\"\n            aria-controls=\"datatable\"\n            rowspan=\"1\"\n            colspan=\"1\"\n            aria-label=\"Actions: activate to sort column ascending\"\n            style=\"width: 54px\"\n          >\n            Acciones\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let slot of slots\" class=\"text-center\">\n          <td class=\"text-left\">{{ slot.actividad.nombre }}</td>\n          <td class=\"text-left\">{{ slot.actividad.tipoActividad.nombre }}</td>\n          <td class=\"text-left\">{{ slot.monitor.nombre }}</td>\n          <td>{{ slot.sala.numero == null ? \"-\" : slot.sala.numero }}</td>\n          <td class=\"text-left\">{{ slot.diaSemana }}</td>\n          <td>{{ slot.horaInicio | formatoHora }}</td>\n          <!--td>{{ slot.aforoActual }}</td-->\n          <td>\n            <a\n              class=\"ml-2\"\n              data-toggle=\"tooltip\"\n              data-original-title=\"Edit\"\n              (click)=\"open(content, slot)\"\n              ><i class=\"icon-edit\"></i\n            ></a>\n            <a\n              class=\"ml-2\"\n              data-toggle=\"tooltip\"\n              data-original-title=\"Delete\"\n              (click)=\"openModalDelete(confirmDelete, this.slot)\"\n              ><i class=\"icon-trash-2\"></i\n            ></a>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Actividad</th>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Tipo Actividad</th>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Monitor</th>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Sala</th>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Día</th>\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Hora</th>\n          <!--th id=\"\" rowspan=\"1\" colspan=\"1\">Aforo Actual</th-->\n          <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¿Seguro que quieres borrar el slot\n        <span class=\"text-danger\"\n          >{{ slotAux.actividad.nombre }}-{{\n            slotAux.actividad.tipoActividad.nombre\n          }}\n          ({{ slotAux.horaInicio | formatoHora }})?</span\n        >\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancelar\n    </button>\n    <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">\n      Borrar\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Slot</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"slotUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalSlot)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"dia\">(*) Dia Semana</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"dia\"\n              id=\"dia\"\n              #slotDia=\"ngModel\"\n              [(ngModel)]=\"slotUpdate.diaSemana\"\n              required\n              placeholder=\"Ej: Lunes, Martes, ...\"\n              pattern=\"^([a-zA-Z]){1}([a-zA-ZáéíóúÁÉÍÓÚ]){1,}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && slotDia.invalid) ||\n                  (slotDia.touched && !slotDia.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && slotDia.invalid) ||\n                (slotDia.touched && !slotDia.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"slotDia.errors.required || slotDia.invalid\">\n                * opción no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"hora\">(*) Hora Inicio</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"hora\"\n              id=\"hora\"\n              #slotHora=\"ngModel\"\n              [(ngModel)]=\"slotUpdate.horaInicio\"\n              required\n              placeholder=\"Ej: 1300(13:00), 0935(09:35)\"\n              pattern=\"^(0([0-9])|1([0-9])|2([0-3]))(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|)\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && slotHora.invalid) ||\n                  (slotHora.touched && !slotHora.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && slotHora.invalid) ||\n                (slotHora.touched && !slotHora.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"slotHora.errors.required || slotHora.invalid\">\n                * Hora no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"actividad\">(*) Actividad</label>\n            <select\n              class=\"form-control\"\n              name=\"actividad\"\n              id=\"actividad\"\n              #slotActividad=\"ngModel\"\n              [(ngModel)]=\"actividadId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && slotActividad.invalid) ||\n                  (slotActividad.touched && !slotActividad.valid)\n              }\"\n              [(ngModel)]=\"slotUpdate.actividad.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option\n                *ngFor=\"let actividad of actividades\"\n                value=\"{{ actividad.id }}\"\n              >\n                {{ actividad.nombre }} - {{ actividad.tipoActividad.nombre }}\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && slotActividad.invalid) ||\n                (slotActividad.touched && !slotActividad.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"slotActividad.errors.required || slotActividad.invalid\"\n              >\n                * actividad no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"monitor\">(*) Monitor</label>\n            <select\n              class=\"form-control\"\n              name=\"monitor\"\n              id=\"monitor\"\n              #slotMonitor=\"ngModel\"\n              [(ngModel)]=\"monitorId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && slotMonitor.invalid) ||\n                  (slotMonitor.touched && !slotMonitor.valid)\n              }\"\n              [(ngModel)]=\"slotUpdate.monitor.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option\n                *ngFor=\"let monitor of monitores\"\n                value=\"{{ monitor.id }}\"\n              >\n                {{ monitor.nombre }}\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && slotMonitor.invalid) ||\n                (slotMonitor.touched && !slotMonitor.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"slotMonitor.errors.required || slotMonitor.invalid\">\n                * Monitor no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"sala\">(*) Sala</label>\n            <select\n              class=\"form-control\"\n              name=\"sala\"\n              id=\"sala\"\n              #slotSala=\"ngModel\"\n              [(ngModel)]=\"salaId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && slotSala.invalid) ||\n                  (slotSala.touched && !slotSala.valid)\n              }\"\n              [(ngModel)]=\"slotUpdate.sala.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option *ngFor=\"let sala of salas\" value=\"{{ sala.id }}\">\n                {{ sala.numero }} (Aforo {{ sala.aforoMax }} pers.)\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && slotSala.invalid) ||\n                (slotSala.touched && !slotSala.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"slotSala.errors.required || slotSala.invalid\">\n                * Sala no válida\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalSlot let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{ textoModal }}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss(); refresh()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Actividad } from \"@modelsRest/Actividad\";\nimport { Sala } from \"@modelsRest/sala\";\nimport { Slot } from \"@modelsRest/Slot\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { ActividadServiceService } from \"@servicesRest/actividad/actividad-service.service\";\nimport { SalaServiceService } from \"@servicesRest/sala/sala-service.service\";\nimport { SlotServiceService } from \"@servicesRest/slot/slot-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HelperService } from '@core/services/helper.service';\n\n@Component({\n  selector: \"app-slot-list\",\n  templateUrl: \"./slot-list.component.html\",\n  styleUrls: [\"./slot-list.component.css\"],\n})\nexport class SlotListComponent implements OnInit {\n  //list\n  mostrarSlotAdd: boolean = false;\n  slots: Slot[];\n\n  //update\n  slotUpdate: any;\n  monitores: Usuario[];\n  actividades: Actividad[];\n  salas: Sala[];\n  textoModal: string;\n\n  //confirm delete\n  slotAux:any;\n\n  //filtros\n  filterSala:any;\n  mainTablaSlot:Slot[];\n  filterTabla:Slot[];\n\n  constructor(\n    private _service: SlotServiceService,\n    private _serviceActividad: ActividadServiceService,\n    private _serviceSala: SalaServiceService,\n    private _serviceMonitor: UsuarioServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {\n    this.slotUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n\n    document.getElementById(\"minus\").hidden = true;\n\n    this._service.getSlots().subscribe((data) => {\n      this.slots = data;\n      this.mainTablaSlot = data;\n    });\n\n    this._serviceActividad.getActividades().subscribe((data) => {\n      this.actividades = data;\n    });\n  //este número de rolId irá en función de el script definitivo de roles en la bbdd\n    this._serviceMonitor.getUsuariosByRol(2).subscribe((data) => {\n      this.monitores = data;\n    });\n\n    this._serviceSala.getSalas().subscribe((data) => {\n      this.salas = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteSlot(this.slotAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal){\n    this._service.updateSlot(this.slotUpdate).subscribe(data=>{\n      this.textoModal = \"¡Slot actualizado!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarSlot() {\n    this.mostrarSlotAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarSlot() {\n    this.mostrarSlotAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, slot: Slot) {\n    this._service.getSlot(slot.id).subscribe((data) => {\n      this.slotUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true,size:\"xl\" })\n      .result.then(\n        (result) => {\n        },\n        (reason) => {\n        }\n      );\n  }\n  openModalDelete(confirmDelete, slot){\n    this.slotAux = slot;\n    this.modalService\n    .open(confirmDelete, { ariaLabelledBy: \"modal-basic-title\", centered: true, size : \"md\"})\n    .result.then(\n      (result) => {\n      },\n      (reason) => {\n      }\n    );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n  filtrarTabla(){\n    this.filterTabla=[];\n\n    for (let slot of this.mainTablaSlot){\n      if(slot.sala.numero == this.filterSala || slot.diaSemana.toLocaleLowerCase() == this.filterSala.toLocaleLowerCase()){\n        this.filterTabla.push(slot);\n      }\n    }\n    console.log(this.filterTabla.length);\n    \n    if (this.filterTabla.length > 0){\n        this.slots = this.filterTabla;\n    } else {\n      this.slots = this.mainTablaSlot;\n    }\n  }\n  quitarFiltroTabla(){\n    this.slots = this.mainTablaSlot;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CallToActionComponent } from '@shared/components/call-to-action/call-to-action.component';\n@Component({\n  selector: 'app-politica',\n  templateUrl: './politica.component.html',\n  styleUrls: ['./politica.component.css']\n})\nexport class PagePoliticaComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Política de privacidad';\n    this.pageDesc = 'Tus datos son importantes';\n    this.pageImg = 'aboutus.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"mb-0\">Política de privacidad</h4>\n                    <h3 class=\"font-weight-600\">Datos personales</h3>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>En cumplimiento de la normativa vigente en materia de Protección de Datos personales, le informamos que los datos personales facilitados por los usuario de esta Web en sus distintos formularios serán incorporados y tratados en uno o más ficheros titularidad de FIL's Center Gym SL con la finalidad de gestionar su solicitud y facilitarle el alta como cliente, así como para mantenerle informado, incluso por vía electrónica, de futuras noticias y novedades relacionadas con nuestra empresa.</p>\n                <p>Los datos que se solicitan en los distintos formularios marcados con asterisco (*) son los  estrictamente necesarios para poder proporcionarle el servicio solicitado o poder contactar con el usuario.</p>\n                <p>El usuario garantiza la veracidad de los datos personales proporcionados, siendo el único responsable de cualquier daño o perjuicio, directo o indirecto, que pudiera ocasionar a FIL's Center Gym SL  a causa de la cumplimentación de los formularios con datos falsos, inexactos o incompletos.</p>\n                <p>En caso de que el usuario incluya datos personales de terceras personas  deberá, con carácter previo a su inclusión, informarles de lo establecido en la presente política de privacidad, siendo el único responsable de su inclusión.</p>\n                <p>FIL's Center Gym S.L. se compromete a no ceder los datos de carácter personal facilitados por los usuarios de esta web a terceras personas o empresas sin el consentimiento previo, expreso, informado e inequívoco del afectado.</p>\n                <p>Los usuarios pueden ejercitar los derechos de acceso, rectificación, cancelación, limitación del tratamiento,  oposición y portabilidad reconocidos en la actual legislación mediante comunicación escrita al responsable del tratamiento que se cita abajo, o a la dirección de correo electrónico:  info@filscentergym.com  o mediante el formulario de ejercicio de derechos proporcionado en la dirección antes indicada.</p>\n                <p>La aceptación de los términos expuestos en esta política de privacidad en necesaria para el envío y transmisión de la solicitud realizada.</p>\n                \n                <h4>Responsable del Tratamiento:</h4>\n                <p>\n                FIL's Center Gym<br/>\n                AVDA. JOSE GARATE, 5<br/>\n                COSLADA<br/>\n                MADRID<br/>\n                </p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"mb-0\">Política de privacidad</h4>\n                    <h3 class=\"font-weight-600\">Redes Sociales</h3>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <p>FIL's Center Gym S.L. informa que los datos personales cedidos para el uso en las redes sociales pueden ser cedidos entre las diferentes empresas del grupo FIL's Center.</p>\n                <p>Los usuarios pueden ejercitar los derechos de acceso, rectificación, cancelación, limitación del tratamiento,  oposición y portabilidad reconocidos en la actual legislación mediante comunicación escrita al responsable del tratamiento que se cita abajo, o a la dirección de correo electrónico:  info@filscentergy,.com  o mediante el formulario de ejercicio de derechos proporcionado en la dirección antes indicada.</p>\n                <p>La aceptación de los términos expuestos en esta política de privacidad en necesaria para el envío y transmisión de la solicitud realizada.</p>\n                \n                <h4>Responsable del Tratamiento:</h4>\n                <p>\n                FIL's Center Gym<br/>\n                AVDA. JOSE GARATE, 5<br/>\n                COSLADA<br/>\n                MADRID<br/>\n                </p>\n            </div>\n            <div class=\"col-md-12 mt-5\">\n                <div class=\"heading-text heading-section\">\n                    <h4 class=\"mb-0\">Política de privacidad</h4>\n                    <h3 class=\"font-weight-600\"> Comunicaciones Comerciales</h3>\n                </div>\n\n                <p>He sido informado:</p>\n                <p>Que mis datos personales facilitados también podrán ser tratados para el envío de comunicaciones comerciales, por cualquier medio, relacionadas con los productos y servicios de FIL's Center Gym, S.L., así como el envío de invitaciones a eventos organizados por la empresa.</p>\n                <p>Los datos proporcionados se conservarán mientras no solicite la revocación o cancelación del tratamiento. Los datos no se cederán a terceros salvo en los casos en que exista una obligación legal.</p>\n                <p>También he sido informado del derecho a solicitar al responsable del tratamiento el acceso a mis datos personales, y su rectificación o supresión, o la limitación de su tratamiento, o a oponerme al tratamiento, así como el derecho a la portabilidad de mis datos, y a presentar una reclamación ante una autoridad de control.</p>\n                <p>Otorgo mi consentimiento para el tratamiento de mis datos personales para el envío de comunicaciones comerciales por parte de FIL's Center Gym, S.L.</p>\n            </div>\n        </div>\n    </div>\n</section>\n\n<shared-call-to-action\n    [title]=\"'Te esperamos'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [img]=\"'haltere.jpg'\"\n    [overlayStyle] = \"11\"\n    [btnTxt]=\"'Inscríbete'\"\n    [btnUrl]=\"'/registro'\"\n    [btnClass]=\"'btn-light btn-lg'\"\n    ></shared-call-to-action>","import {Pipe,PipeTransform} from '@angular/core';\n\n@Pipe({name: 'formatoStringToHora'})\nexport class FormatoStringToHoraPipe implements PipeTransform{\n    //coge el parametro pasado y lo pone en formato hora (requiere 4 dígitos)\n    //dato    | calculadora: otroDato\n   //param1         param2\n    transform(value:number){\n        var cadena = value.toString();\n        var resultado;\n        if(cadena.charAt(0) != '0' && cadena.charAt(0) != '1' && cadena.charAt(0) != '2') {\n            resultado = '0'+cadena.charAt(0)+\":\"+cadena.charAt(1)+cadena.charAt(2);\n        } else {\n            resultado = cadena.charAt(0)+cadena.charAt(1)+\":\"+cadena.charAt(2)+cadena.charAt(3);\n        }\n\n        return resultado;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Servicio } from '@shared/models/servicio';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiciosService {\n\n  public servicios: Array<Servicio>;\n\n    constructor() {\n        this.servicios = [\n            new Servicio('Espacio','1400 m2 repartidos en dos plantas con las mejores instalaciones de la zona.','fa fa-expand'),\n            new Servicio('Luz Natural','Grandes ventanales de suelo a techo proporcionan abundante luz y vistas al exterior.','fa fa-lightbulb'),\n            new Servicio('Entrenadores Personales','Los mejores monitores fitness están a tu disposición para personalizar al máximo tu entrenamiento.','fa fa-user-friends'),\n            new Servicio('Amplios Horarios','Abrimos todos los días del año, en una amplia franja horaria, para que puedas entrenar siempre que quieras.','fa fa-clock'),\n            new Servicio('Clases Colectivas','Contamos con varias actividades colectivas impartidas por monitores certificados por Les Mills.','fa fa-users'),\n            new Servicio('Máquinas','Equipamiento high tech de las marcas más punteras en el sector fitness.','fa fa-wrench'),\n            new Servicio('Masaje','Servicio gratuito de masaje. Tenemos expertos en diferentes estilos de masajes que te pueden hacer sentir como nuevo despues de una dura sesión de entrenamiento.','fa fa-bed'),\n            new Servicio('Fisioterapeuta','Ponemos a tu dispoción un servicio de Fisioterapia gratuito para que puedas consultar a nuestros expertos siempre que lo necesitas.','fa fa-stethoscope'),\n            new Servicio('Taquilla Individual','Todos nuestros usuarios tienen asignada una taquilla individual para guardar las cosas personales mientras entrenan.','fa fa-lock'),\n            new Servicio('Cabinas Individuales de Ducha','Ya sabemos lo delicado que es el tema de las duchas. Por eso habilitamos cabinas individuales. Además seguimos todos los protocolos de sanidad y las duchas se limpian y desinfectan después de cada uso.','fa fa-shower'),\n            new Servicio('Toallas','Si te has olvidado tu toalla, te ofrecemos una toalla para tu entrenamiento. Pregunta en el mostrador siempre que lo necesitas. ¡No te olvides de devolvernosla! ','fa fa-sticky-note'),\n            // new Servicio('Bebidas isotonicas','Si te has olvidado tu toalla, te ofrecemos una toalla para tu entrenamiento. Pregunta en el mostrador siempre que lo necesitas. ¡No te olvides de devolvernosla! ','fa fa-sticky-note'),\n            new Servicio('Parking Gratuito','Disponemos de un parking amplio para todos nuestros usuarios. Tranquilo, no tendrás que pensar: ¿Dónde dejo el coche?','fa fa-car'),\n        ];\n    }\n\n    findAll(): Array<Servicio> {\n        return this.servicios;\n    }\n\n    getOneRandomServicio(): Servicio {\n        return this.servicios[this.getIndexRandom()];\n    }\n\n    getServicios(cant: number): Array<Servicio> {\n        var seleccionadas = [];\n        var indexes = [];\n        for (let i = 0; i < cant; i++) {\n            var index: number;\n            do {\n                index = this.getIndexRandom();\n            } while (indexes.includes(index));\n\n            indexes.push(index);\n            var frase = this.servicios[index];\n            seleccionadas.push(frase);\n        }\n        return seleccionadas;\n    }\n\n    getIndexRandom(): number{\n        return Math.floor(Math.random() * (this.servicios.length-1));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-actividad',\n  templateUrl: './actividad.component.html',\n  styleUrls: ['./actividad.component.css']\n})\nexport class ActividadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>actividad works!</p>\n","<section class=\"pt-5\">\n    <div class=\"container\">\n        <div *ngIf=\"!isDataLoaded\" class=\"d-flex justify-content-center\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Cargando...</span>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"isDataLoaded\">\n            <div class=\"col-lg-12 text-center mb-3\">\n                <div class=\"heading-text heading-line heading-gradient text-center mb-0\">\n                    <h4 class=\"mb-0 font-size-h2\"><span>{{ title }}</span></h4>\n                </div>\n            </div>\n            <div class=\"col-md-8 offset-md-2 my-5\" *ngIf=\"!isSuscribed\">\n                <div role=\"alert\" class=\"alert alert-info\">\n                  <h4><strong><i class=\"fa fa-info-circle\"></i> ¡No tienes ninguna suscripción activa!</strong></h4>\n                  <a href=\"/cuenta/mis/datos\" class=\"alert-link\">Suscríbete ya</a>, para tener acceso a todos nuestros servicios y actividades.\n                </div>\n            </div>\n            <div class=\"col-lg-12 my-5\" *ngIf=\"isSuscribed\">\n                <div *ngIf=\"showHorario\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <h4 class=\"text-primary\">Mi horario</h4>\n                        </div>\n                        <div class=\"col-md-4 text-right\">\n                            <!-- <div class=\"icon-set-container\"><div class=\"icon-preview\"><div class=\"icon-holder\"><i class=\"icon-chevron-down\"></i></div></div></div> -->\n                            <button class=\"btn btn-xs btn-slide\" data-width=\"80\" (click)=\"closeHorario()\" style=\"width: 28px;\">\n                                <i class=\"icon-chevron-up\"></i>\n                                <span>Cerrar</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"line my-3\"></div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <cuenta-inicio-horario></cuenta-inicio-horario>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"!showHorario\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <h4 class=\"text-primary\">Mi horario</h4>\n                        </div>\n                        <div class=\"col-md-4 text-right\">\n                            <!-- <div class=\"icon-set-container\"><div class=\"icon-preview\"><div class=\"icon-holder\"><i class=\"icon-chevron-down\"></i></div></div></div> -->\n                            <button class=\"btn btn-xs btn-slide\" data-width=\"80\" (click)=\"openHorario()\" style=\"width: 28px;\">\n                                <i class=\"icon-chevron-down\"></i>\n                                <span>Abrir</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"line my-3\"></div>\n                </div>\n\n                <div *ngIf=\"showTablas\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <h4 class=\"text-primary\">Mis tablas de ejercicios</h4>\n                        </div>\n                        <div class=\"col-md-4 text-right\">\n                            <!-- <div class=\"icon-set-container\"><div class=\"icon-preview\"><div class=\"icon-holder\"><i class=\"icon-chevron-down\"></i></div></div></div> -->\n                            <button class=\"btn btn-xs btn-slide\" data-width=\"80\" (click)=\"closeTablas()\" style=\"width: 28px;\">\n                                <i class=\"icon-chevron-up\"></i>\n                                <span>Cerrar</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"row mb-3 mt-5\">\n                        <div class=\"col-md-12\">\n                            <cuenta-inicio-tablas></cuenta-inicio-tablas>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"!showTablas\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <h4 class=\"text-primary\">Mis tablas de ejercicios</h4>\n                        </div>\n                        <div class=\"col-md-4 text-right\">\n                            <!-- <div class=\"icon-set-container\"><div class=\"icon-preview\"><div class=\"icon-holder\"><i class=\"icon-chevron-down\"></i></div></div></div> -->\n                            <button class=\"btn btn-xs btn-slide\" data-width=\"80\" (click)=\"openTablas()\" style=\"width: 28px;\">\n                                <i class=\"icon-chevron-down\"></i>\n                                <span>Abrir</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"line my-3\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuComponent } from '../../components/menu/menu.component';\nimport { HelperService } from '@core/services/helper.service';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class PageCuentaInicioComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n  public title: string;\n  public menuActive: string;\n  public isDataLoaded: boolean = false;\n  public showHorario: boolean = false;\n  public showTablas: boolean = true;\n\n  public sessionUser: any;\n  public isSuscribed: boolean = false;\n\n  constructor(\n    private _helperService: HelperService,\n  ) { \n    this.pageTitle = 'Mi Cuenta';\n    this.pageDesc = 'Todo lo que necesitas de tu perfil';\n    this.pageImg = 'login.jpg';\n    this.title = 'Gracias por volver';\n    this.menuActive = 'inicio';\n  }\n\n  ngOnInit(): void {\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n      console.log(this.sessionUser);\n    })\n    .then(()=>{\n      if(!this.sessionUser.suscripcion) {\n        return this._helperService.checkAndSaveSessionSubscription()\n        .then(()=>{\n          return this._helperService.getSessionUser();\n        })\n        .then((user:any)=>{\n          this.sessionUser = user;\n          //console.log(this.sessionUser);\n        });\n      }\n    })\n    .then(()=>{\n      this.isSuscribed = this.sessionUser.suscripcion.isSubscribed;\n      if(!this.isSuscribed) {\n        this.title = 'Sin suscripción';\n      }\n      //console.log(this.sessionUser);\n    })\n    .then(()=>{\n      this.isDataLoaded=true;\n    });\n  }\n\n  openHorario(){\n    this.showHorario=true;\n  }\n\n  closeHorario(){\n    this.showHorario=false;\n  }\n\n  openTablas(){\n    this.showTablas=true;\n  }\n\n  closeTablas(){\n    this.showTablas=false;\n  }\n\n}\n","<h3>Nueva Dirección</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addDireccion()\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-2\">\n        <label for=\"calle\">(*) Calle</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"calle\"\n          name=\"calle\"\n          #direccionCalle=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.calle\"\n          placeholder=\"C/\"\n          required\n          pattern=\"^([a-zA-Z]){1}([a-zA-Z ]){2,50}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionCalle.invalid) ||\n              (direccionCalle.touched && !direccionCalle.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionCalle.invalid) ||\n            (direccionCalle.touched && !direccionCalle.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionCalle.errors.required ||\n              direccionCalle.invalid\n            \"\n          >\n            * Calle no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"numero\">(*) Número</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"numero\"\n          name=\"numero\"\n          #direccionNumero=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.numero\"\n          placeholder=\"Nº\"\n          min=\"1\"\n          max=\"1000\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionNumero.invalid) ||\n              (direccionNumero.touched && !direccionNumero.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionNumero.invalid) ||\n            (direccionNumero.touched && !direccionNumero.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionNumero.errors.required ||\n              direccionNumero.invalid\n            \"\n          >\n            * Número no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"bloque\">Bloque</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"bloque\"\n          name=\"bloque\"\n          #direccionBloque=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.bloque\"\n          placeholder=\"Ej: 1\"\n          pattern=\"^([1-9]\\d*)\"\n          min=\"1\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionBloque.invalid) ||\n              (direccionBloque.touched && !direccionBloque.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionBloque.invalid) ||\n            (direccionBloque.touched && !direccionBloque.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionBloque.errors.required ||\n              direccionBloque.invalid\n            \"\n          >\n            * Bloque no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"escalera\">Escalera</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"escalera\"\n          name=\"escalera\"\n          #direccionEscalera=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.escalera\"\n          placeholder=\"Ej: 1\"\n          pattern=\"^([1-9]\\d*)\"\n          min=\"1\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionEscalera.invalid) ||\n              (direccionEscalera.touched && !direccionEscalera.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionEscalera.invalid) ||\n            (direccionEscalera.touched && !direccionEscalera.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionEscalera.errors.required ||\n              direccionEscalera.invalid\n            \"\n          >\n            * Escalera no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"piso\">Piso</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          id=\"piso\"\n          name=\"piso\"\n          #direccionPiso=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.piso\"\n          placeholder=\"Ej: 1\"\n          pattern=\"^([1-9]\\d*)\"\n          min=\"1\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionPiso.invalid) ||\n              (direccionPiso.touched && !direccionPiso.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionPiso.invalid) ||\n            (direccionPiso.touched && !direccionPiso.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionPiso.errors.required ||\n              direccionPiso.invalid\n            \"\n          >\n            * Piso no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-2\">\n        <label for=\"puerta\">Puerta</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"puerta\"\n          name=\"puerta\"\n          #direccionPuerta=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.puerta\"\n          placeholder=\"Ej: 1,A\"\n          pattern=\"^(\\d|[a-zA-Z]{1})\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionPuerta.invalid) ||\n              (direccionPuerta.touched && !direccionPuerta.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionPuerta.invalid) ||\n            (direccionPuerta.touched && !direccionPuerta.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionPuerta.errors.required ||\n              direccionPuerta.invalid\n            \"\n          >\n            * Puerta no válida\n          </div>\n        </div>\n      </div>\n\n\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"cp\"> (*) Código Postal</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"cp\"\n          name=\"cp\"\n          #direccionCP=\"ngModel\"\n          [(ngModel)]=\"nuevaDireccion.codigoPostal\"\n          placeholder=\"Ej: 29850\"\n          required\n          pattern=\"^\\d{5,6}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionCP.invalid) ||\n              (direccionCP.touched && !direccionCP.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && direccionCP.invalid) ||\n            (direccionCP.touched && !direccionCP.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionCP.errors.required ||\n              direccionCP.invalid\n            \"\n          >\n            * Código Postal no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"localidad\">(*) Localidad</label>\n        <select\n          class=\"form-control\"\n          name=\"localidad\"\n          id=\"localidad\"\n          #direccionLocalidad=\"ngModel\"\n          [(ngModel)]=\"localidadId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionLocalidad.invalid) ||\n              (direccionLocalidad.touched && !direccionLocalidad.valid)\n          }\"\n          (ngModelChange)=\"obtenerLocalidad()\"\n          [(ngModel)]=\"localidadSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option *ngFor=\"let localidad of localidades\" value=\"{{ localidad.id }}\">\n            {{ localidad.nombre }}, {{localidad.provincia.nombre}}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && direccionLocalidad.invalid) ||\n            (direccionLocalidad.touched &&\n              !direccionLocalidad.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionLocalidad.errors.required ||\n              direccionLocalidad.invalid\n            \"\n          >\n            * Seleccione una Localidad\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"usuario\">(*) Usuario</label>\n        <select\n          class=\"form-control\"\n          name=\"usuario\"\n          id=\"usuario\"\n          #direccionUsuario=\"ngModel\"\n          [(ngModel)]=\"usuarioId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && direccionUsuario.invalid) ||\n              (direccionUsuario.touched && !direccionUsuario.valid)\n          }\"\n          [(ngModel)]=\"usuarioSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n            {{ usuario.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && direccionUsuario.invalid) ||\n            (direccionUsuario.touched &&\n              !direccionUsuario.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              direccionUsuario.errors.required ||\n              direccionUsuario.invalid\n            \"\n          >\n            * Seleccione un usuario\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Localidad } from \"@modelsRest/Localidad\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { DireccionServiceService } from \"@servicesRest/direccion/direccion-service.service\";\nimport { LocalidadServiceService } from \"@servicesRest/localidad/localidad-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { Direccion } from \"@shared/models/direccion\";\n\n@Component({\n  selector: \"app-direccion-add\",\n  templateUrl: \"./direccion-add.component.html\",\n  styleUrls: [\"./direccion-add.component.css\"],\n})\nexport class DireccionAddComponent implements OnInit {\n  nuevaDireccion: any;\n\n  localidadId: number;\n  usuarioId: number;\n\n  localidadSelect = \"\";\n  usuarioSelect = \"\";\n\n  localidades: Localidad[];\n  usuarios: Usuario[];\n\n  constructor(\n    private _service: DireccionServiceService,\n    private _serviceLocalidad: LocalidadServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private _router: Router\n  ) {\n    this.nuevaDireccion = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceLocalidad.getLocalidades().subscribe((data) => {\n      this.localidades = data;\n    });\n    this._serviceUsuario.getUsuarios().subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n\n  obtenerUsuario() {\n    return this._serviceUsuario\n      .getUsuario(this.usuarioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaDireccion.usuario = data;\n        console.log(this.nuevaDireccion.usuario);\n      });\n  }\n\n  obtenerLocalidad() {\n    return this._serviceLocalidad\n      .getLocalidad(this.localidadId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaDireccion.localidad = data;\n      });\n  }\n\n  addDireccion() {\n    this.obtenerLocalidad()\n      .then(() => this.obtenerUsuario())\n      .then(() => {\n        //console.log(JSON.stringify(this.nuevaDireccion));\n\n        this._service.createDireccion(this.nuevaDireccion).subscribe(\n          (data) => {\n            alert(\"Dirección agregada\");\n            window.location.reload();\n          },\n          (err) => {\n            alert(\"error\");\n            console.log(err);\n          }\n        );\n      });\n  }\n}\n","<app-tipo-actividad-list></app-tipo-actividad-list>\n<div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n  <button\n    id=\"plusActividad\"\n    (click)=\"habilitarActividad()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Actividad\n  </button>\n  <button\n    id=\"minusActividad\"\n    (click)=\"deshabilitarActividad()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Actividad\n  </button>\n</div>\n<div *ngIf=\"mostrarActividadAdd == true\">\n  <app-actividad-add></app-actividad-add>\n</div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-4\">\n    <h3 class=\"card-title text-left\">Actividad</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-8 d-flex justify-content-end\">\n    <div class=\"form-outline\">\n      <label\n        >Actividad / Tipo actividad:\n        <input\n          [(ngModel)]=\"filterActividad\"\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          placeholder=\"\"\n      /></label>\n      <label for=\"\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary mt-2\"\n          (click)=\"filtrarTabla()\"\n        >\n          <i class=\"fas fa-search\"></i>\n        </button>\n      </label>\n\n      <button\n        style=\"height: 40px\"\n        (click)=\"quitarFiltroTabla()\"\n        type=\"button\"\n        class=\"btn btn-secondary mt-2 ml-4\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n<div class=\"card-text text-center \">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable \"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead class=\"align-middle\">\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc align-middle\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc align-middle\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Dificultad\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting align-middle\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Tipo De Actividad\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting align-middle\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Descripción\n        </th>\n        <th\n        id=\"\"\n        class=\"noExport sorting align-middle\"\n        tabindex=\"0\"\n        aria-controls=\"datatable\"\n        rowspan=\"1\"\n        colspan=\"1\"\n        aria-label=\"Actions: activate to sort column ascending\"\n        style=\"width: 54px\"\n      >\n        color\n      </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting align-middle\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let actividad of actividades\">\n        <td class=\"text-left align-middle\">{{ actividad.nombre }}</td>\n        <td class=\"text-center align-middle\">{{ actividad.dificultad }}</td>\n        <td class=\"text-left align-middle\">{{ actividad.tipoActividad.nombre }}</td>\n        <td class=\"text-left align-middle\">{{ actividad.descripcion }}</td>\n        <td class=\"text-center align-middle\">\n          <div class=\"m-auto\" style=\"width: 20px; height: 20px;\" [ngStyle]=\"{'background-color': actividad.color }\">\n          </div>\n        </td>\n        <td class=\"text-center align-middle\">\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, actividad)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.actividad)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\" class=\"text-center align-middle\">Nombre</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\" class=\"text-center align-middle\">Dificultad</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\" class=\"text-center align-middle\">Tipo De Actividad</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\" class=\"text-center align-middle\">Descripción</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\" class=\"text-center align-middle\">Color</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\" class=\"text-center align-middle\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar la actividad <span class=\"text-danger\">{{actividadAux.nombre}} ({{actividadAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete(actividad)\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n<hr />\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Actividad</h4>\n  </div>\n  <div class=\"modal-body text-left\" *ngIf=\"actividadUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalActividad)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"nombre\">(*) Nombre</label>\n            <input\n              type=\"text\"\n              id=\"nombre\"\n              class=\"form-control\"\n              name=\"nombre\"\n              #actividadNombre=\"ngModel\"\n              [(ngModel)]=\"actividadUpdate.nombre\"\n              placeholder=\"Nombre Tipo Actividad\"\n              required=\"\"\n              pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚÜ]){1}[a-zA-Z áéíóúÁÉÍÓÚÜ]{2,50}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && actividadNombre.invalid) ||\n                  (actividadNombre.touched && !actividadNombre.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && actividadNombre.invalid) ||\n                (actividadNombre.touched && !actividadNombre.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  actividadNombre.errors.required || actividadNombre.invalid\n                \"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"username\">(*) Dificultad</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"dificultad\"\n              value=\"1\"\n              #actividadDificultad=\"ngModel\"\n              [(ngModel)]=\"actividadUpdate.dificultad\"\n              min=\"1\"\n              max=\"10\"\n              required=\"\"\n              pattern=\"([1-9]|10)\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && actividadDificultad.invalid) ||\n                  (actividadDificultad.touched && !actividadDificultad.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && actividadDificultad.invalid) ||\n                (actividadDificultad.touched && !actividadDificultad.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  actividadDificultad.errors.required ||\n                  actividadDificultad.invalid\n                \"\n              >\n                * Actividad no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4 \">\n            <label for=\"color\">(*) Color</label>\n            <input\n              type=\"color\"\n              name=\"color\"\n              id=\"color\"\n              #colorTipoActividad=\"ngModel\"\n              [(ngModel)]=\"actividadUpdate.color\"\n            />\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"descripcion\">Descripción</label>\n            <textarea\n              class=\"form-control\"\n              name=\"descripcion\"\n              id=\"descripcion\"\n              cols=\"50\"\n              rows=\"4\"\n              #actividadDescripcion=\"ngModel\"\n              [(ngModel)]=\"actividadUpdate.descripcion\"\n              placeholder=\"Descripción.\"\n              pattern=\"([a-zA-Z áéíóúüÁÉÍÓÚÜ0-9.,]){0,}\"\n            ></textarea>\n\n            <span\n              style=\"color: red\"\n              *ngIf=\"\n                actividadDescripcion.touched && !actividadDescripcion.valid\n              \"\n            >\n              * Descripcion no válida</span\n            >\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"tipoActividad\">(*) Tipo de Actividad</label>\n            <select\n              class=\"form-control\"\n              name=\"tipoActividad\"\n              id=\"tipoActividad\"\n              #actividadTipoActividad=\"ngModel\"\n              [(ngModel)]=\"tipoActividadId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && actividadTipoActividad.invalid) ||\n                  (actividadTipoActividad.touched &&\n                    !actividadTipoActividad.valid)\n              }\"\n              [(ngModel)]=\"actividadUpdate.tipoActividad.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let tipoActividad of tiposActividades\"\n                value=\"{{ tipoActividad.id }}\"\n              >\n                {{ tipoActividad.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && actividadTipoActividad.invalid) ||\n                (actividadTipoActividad.touched &&\n                  !actividadTipoActividad.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  actividadTipoActividad.errors.required ||\n                  actividadTipoActividad.invalid\n                \"\n              >\n                * Seleccione un tipo de actividad\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalActividad let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Actividad } from \"@modelsRest/Actividad\";\nimport { TipoActividad } from \"@modelsRest/TipoActividad\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ActividadServiceService } from \"@servicesRest/actividad/actividad-service.service\";\nimport { TipoActividadServiceService } from \"@servicesRest/tipo_actividad/tipo-actividad-service.service\";\nimport { HelperService } from \"@core/services/helper.service\";\n\n@Component({\n  selector: \"app-actividad-list\",\n  templateUrl: \"./actividad-list.component.html\",\n  styleUrls: [\"./actividad-list.component.css\"],\n})\nexport class ActividadListComponent implements OnInit {\n  mostrarActividadAdd = false;\n\n  //update\n  actividadUpdate: any;\n\n  actividades: Actividad[];\n  tiposActividades: TipoActividad[];\n  textoModal: string;\n\n  //parte confirm delete\n  actividadAux: any;\n\n  //filtro\n  filterActividad: any;\n  mainTablaActividad: Actividad[];\n  filterTabla: Actividad[];\n\n  constructor(\n    private _service: ActividadServiceService,\n    private _serviceTipoActividad: TipoActividadServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {\n    this.actividadUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n    document.getElementById(\"minusActividad\").hidden = true;\n\n    this._service.getActividades().subscribe((data) => {\n      this.actividades = data;\n      this.mainTablaActividad = data;\n    });\n\n    this._serviceTipoActividad.getTipoActividades().subscribe((data) => {\n      this.tiposActividades = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteActividad(this.actividadAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n  update(modal) {\n    this._service.updateActividad(this.actividadUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Actividad actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarActividad() {\n    this.mostrarActividadAdd = true;\n    document.getElementById(\"plusActividad\").hidden = true;\n    document.getElementById(\"minusActividad\").hidden = false;\n  }\n\n  deshabilitarActividad() {\n    this.mostrarActividadAdd = false;\n    document.getElementById(\"plusActividad\").hidden = false;\n    document.getElementById(\"minusActividad\").hidden = true;\n  }\n\n  //abre modal confirm delete\n  openModalDelete(confirmDelete, actividad) {\n    this.actividadAux = actividad;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //modal ventada update\n  open(content, actividad: Actividad) {\n    this._service.getActividad(actividad.id).subscribe((data) => {\n      this.actividadUpdate = data;\n    });\n    this.modalService\n      .open(content, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"lg\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n  filtrarTabla() {\n    this.filterTabla = [];\n\n    for (let actividad of this.mainTablaActividad) {\n      if (\n        actividad.nombre.toLowerCase() == this.filterActividad.toLowerCase() ||\n        actividad.tipoActividad.nombre.toLowerCase() == this.filterActividad.toLowerCase()\n      ) {\n        this.filterTabla.push(actividad);\n      }\n    }\n\n    if (this.filterTabla.length > 0) {\n      this.actividades = this.filterTabla;\n    } else {\n      this.actividades = this.mainTablaActividad;\n    }\n  }\n\n  quitarFiltroTabla() {\n    this.actividades = this.mainTablaActividad;\n  }\n}\n","import { AuthService } from './auth.service';\nimport { TokenStorageService } from './token-storage.service';\nimport { FraseMotivadoraService } from './frase-motivadora.service';\nimport { ServiciosService } from './servicios.service';\nimport { MailService } from './mail.service';\n\nexport const services: any[] = [\n    AuthService,\n    TokenStorageService,\n    FraseMotivadoraService,\n    ServiciosService,\n    MailService\n];\n\nexport * from './auth.service';\nexport * from './token-storage.service';\nexport * from './frase-motivadora.service';\nexport * from './servicios.service';\nexport * from './mail.service';","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { HomeModule } from './home/home.module';\nimport { AboutusModule } from './aboutus/aboutus.module';\nimport { ClasesModule } from './clases/clases.module';\nimport { ServiciosModule } from './servicios/servicios.module';\nimport { ContactoModule } from './contacto/contacto.module';\nimport { HorarioModule } from './horario/horario.module';\nimport { PrivacidadModule } from './privacidad/privacidad.module';\n\nimport { LoginModule } from './login/login.module';\nimport { SignupModule } from './signup/signup.module';\nimport { RecoverModule } from './recover/recover.module';\n\n@NgModule({\n  declarations: [ ],\n  imports: [\n    SharedModule,\n    HomeModule,\n    AboutusModule,\n    ClasesModule,\n    ServiciosModule,\n    ContactoModule,\n    LoginModule,\n    SignupModule,\n    RecoverModule,\n    HorarioModule,\n    PrivacidadModule\n  ]\n})\nexport class PagesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MapaComponent } from '@shared/components/mapa/mapa.component';\n@Component({\n  selector: 'aboutus-dondeestamos',\n  templateUrl: './dondeestamos.component.html',\n  styleUrls: ['./dondeestamos.component.css']\n})\nexport class DondeestamosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pb-0 pb-0\">\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <div class=\"heading-text text-center heading-div pt-5\">\n        <h5 class=\"text-uppercase\">¿Dónde estamos?</h5>\n        <h2><span class=\"font-weight-600\">FIL's Center Gym</span></h2>\n        <p class=\"font-weight-400\">\n          Av. de José Gárate, 5, Coslada<br>\n          28832, Madrid\n        </p>\n        <p class=\"font-weight-400 text-xs\"><span>912.345.678</span></p>\n        <a href=\"/contacto\" class=\"btn btn-rounded\">Contacta con nosotros</a>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <app-mapa-google [mapHeight]=\"450\"></app-mapa-google>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { SlotServiceService as SlotService } from '@servicesRest/slot/slot-service.service';\nimport { SalaServiceService as SalaService } from '@servicesRest/sala/sala-service.service';\nimport { UsuarioServiceService as UsuarioService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { ReservaServiceService as ReservaService } from \"@servicesRest/reserva/reserva-service.service\";\nimport { HelperService } from '@core/services/helper.service';\n\nimport { Slot } from \"@modelsRest/Slot\";\nimport { Reserva } from \"@modelsRest/Reserva\";\n\ndeclare var $:any;\n@Component({\n  selector: 'horario-tabla',\n  templateUrl: './tabla.component.html',\n  styleUrls: ['./tabla.component.css'],\n})\nexport class TablaComponent implements OnInit, OnChanges {\n  public slots: Slot[];\n  public horas: Object[]=[];\n  public reservasUser: Reserva[];\n  public diasSemana: String[] = ['Lunes','Martes','Miercoles','Jueves','Viernes','Sabado','Domingo'];\n  public isDataLoaded: boolean = false;\n  public reserva: any = {};\n  public slotSeleccionado: any;\n  public isRecurrente:boolean = false;\n  public aforoActual:number = 0;\n  public isLoggedIn: boolean = false;\n  public isSubscribed:boolean = false;\n  public hasReserva: boolean = false;\n  public reservaToDel: Reserva;\n  public closeResult:string = '';\n  public sessionUser: any;\n\n  @Input() searchResults: Slot[];\n\n  constructor(\n    private modalService: NgbModal,\n    private _helperService: HelperService,\n    private _serviceSlot: SlotService,\n    private _serviceSala: SalaService,\n    private _serviceReserva: ReservaService,\n    private _serviceUsuario: UsuarioService,\n  ) { \n\n    for(var i=7; i<23; i++){\n      var hora:String;\n      var index:number;\n      if(i<10) {\n        hora = '0'+i+':00';\n        index = parseInt('0'+i+'00');\n      } else if (i>9 && i<20) {\n        hora = i+':00';\n        index = parseInt(i+'00');\n      } else if(i>19) {\n        hora = i+':00';\n        index = parseInt(i+'00');\n      }\n      this.horas.push({\n        index: index,\n        hora: hora,\n        Lunes: null,\n        Martes: null,\n        Miercoles: null,\n        Jueves: null,\n        Viernes: null,\n        Sabado: null,\n        Domingo: null,\n      });\n    } \n  \n  }\n\n  ngOnInit(): void {\n    this._helperService.checkIsLoginAndRedirectToLogin();\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n      return user;\n      //console.log(this.sessionUser);\n    })\n    .then((user)=>{\n      this.isLoggedIn = this._helperService.checkIsLogin();\n      this.isSubscribed = user.suscripcion.isSubscribed;\n      this.loadSlots();\n    });\n    \n  }\n\n  ngOnChanges(){\n    this.loadSlots();\n  }\n\n  loadSlots(){\n    if(this.sessionUser) {\n      this._serviceReserva.getReservasByUsuarioId(this.sessionUser.id).toPromise()\n      .then((reservas)=>{\n        this.reservasUser = reservas;\n        //console.log(this.reservasUser);\n      })\n      .then(()=>{\n        return this._serviceSlot.getSlots().toPromise();\n      })\n      .then((slots)=>{\n        //console.log(data);\n        this.slots = slots;\n      })\n      .then(()=>{\n        //console.log(this.horas);\n        for(var slot of this.slots) {\n          var index = slot.horaInicio;\n          var diaSemana = slot.diaSemana;\n          var indexArray = this.getIndexOfK(this.horas, index);\n          var isDisabled = this.checkIsDisabled(slot);\n          var isReserved = this.checkIsReserved(slot);\n          this.horas[indexArray][diaSemana] = {\n            id: slot.id,\n            isDisabled: isDisabled,\n            isReserved: isReserved,\n            imagen: (slot.monitor.imagen) ? 'assets/uploads/'+slot.monitor.imagen : 'assets/uploads/user-perfil.png',\n            monitor: slot.monitor.nombre,\n            actividad: slot.actividad.nombre,\n            color: slot.actividad.color,\n            slot: slot\n          }\n        }\n      })\n      .then(()=>{\n        this.isDataLoaded=true;\n      });\n    }\n  }\n\n  checkIsDisabled(slot:Slot) {\n    return !this.searchResults.some(elem => elem.id === slot.id);\n  }\n\n  checkIsReserved(slot:Slot) {\n    return this.reservasUser.some(elem => elem.slot.id === slot.id);\n  }\n\n  getIndexOfK(arr:any, value:number) {\n    for (var i = 0; i < arr.length; i++) {\n      var index = Object.values(arr[i]).indexOf(value);\n      //Object.keys(object).find(key => object[key] === value)\n      if (index > -1) {\n        return i;\n      }\n    }\n  }\n\n  open(content:any, slot:Slot) {\n    this.aforoActual = 0;\n    this._serviceSlot.getSlot(slot.id).toPromise()\n    .then((data) => {\n      this.slotSeleccionado = data;\n      this.isRecurrente = false;\n    })\n    .then(()=>{\n      this._serviceReserva.getReservasBySlotId(slot.id).toPromise()\n      .then((reservas)=>{\n        for(let reserva of reservas) {\n          if(reserva.recurrente) {\n            ++this.aforoActual;\n          } else {\n            var dateString = reserva.fechaInicio.substring(0,10);\n            var today = new Date();\n            var fechaInicio = new Date(dateString.substring(0,4), dateString.substring(5,7)-1, dateString.substring(8,10));\n            if(fechaInicio.getTime() >= today.getTime()) {\n              ++this.aforoActual;\n            }\n          }\n        }\n      })\n    })\n    .then(()=>{\n      //comprobamos si tiene ya una reserva\n      if(this.isLoggedIn && this.isSubscribed) {\n        return this._serviceReserva.getReservaBySlotIdAndUsuarioId(this.slotSeleccionado.id, this.sessionUser.id).toPromise()\n      }\n      return false;\n    })\n    .then((data)=>{\n      //console.log(data);\n      this.hasReserva = (data) ? data[0] : false;\n    })\n    .then(()=>{\n      this.modalService.open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  closeModal(){\n    this.modalService.dismissAll();\n    this.aforoActual = 0;\n  }\n\n  doReserva(){\n    this.reserva.recurrente = this.isRecurrente ? 'true' : 'false';\n    this.reserva.fechaInicio = new Date().toISOString();\n    \n    return this._serviceSlot.getSlot(this.slotSeleccionado.id).toPromise()\n    .then((data)=>{\n      this.reserva.slot = data;\n    })\n    .then(()=>{\n      return this._serviceUsuario.getUsuario(this.sessionUser.id).toPromise();\n    })\n    .then((data) => {\n      this.reserva.usuario = data;\n    })\n    .then(()=>{\n      //console.log(this.reserva);\n      this._serviceReserva.createReserva(this.reserva).subscribe((data)=>{\n        this.loadSlots();\n        this.closeModal();\n        $.notify({\n          // options\n          icon: 'fas fa-check',\n          title: '¡Muy bien!',\n          message: 'Te hemos reservado una plaza.',\n        },{\n          // settings\n          type: 'success'\n        });\n        \n      },(err)=>{\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n      });\n    });\n\n  }\n\n  delConfirm(reserva:Reserva){\n    this.reservaToDel = reserva;\n  }\n\n  delCancelar(){\n    this.reservaToDel = null;\n  }\n\n  delReserva() {\n    this._serviceReserva.deleteReserva(this.reservaToDel).subscribe(\n      (data) => {\n        this.reservaToDel = null;\n        this.loadSlots();\n        this.closeModal();\n        $.notify({\n            // options\n            icon: 'fas fa-check',\n            title: '¡Muy bien!',\n            message: 'La reserva se ha eliminado correctamente.',\n          },{\n          // settings\n          type: 'success'\n        });\n      },\n      (err) => {\n\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n\n      }\n    );\n  }\n\n}\n","<div *ngIf=\"!isDataLoaded\" class=\"d-flex justify-content-center\">\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Cargando...</span>\n  </div>\n</div>\n\n<div *ngIf=\"isDataLoaded\" class=\"table-responsive\">\n  <table class=\"table table-striped horario\">\n    <thead>\n      <tr>\n        <th scope=\"col\" class=\"text-center\">Hora</th>\n        <th scope=\"col\" class=\"text-center\">Lunes</th>\n        <th scope=\"col\" class=\"text-center\">Martes</th>\n        <th scope=\"col\" class=\"text-center\">Miercoles</th>\n        <th scope=\"col\" class=\"text-center\">Jueves</th>\n        <th scope=\"col\" class=\"text-center\">Viernes</th>\n        <th scope=\"col\" class=\"text-center\">Sabado</th>\n        <th scope=\"col\" class=\"text-center\">Domingo</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let hora of horas\" class=\"text-center\">\n        <th scope=\"row\" class=\"text-center\">{{ hora.hora }}</th>\n        <td *ngFor=\"let dia of diasSemana\"  class=\"text-center\">\n          <div *ngIf=\"hora[dia]\">\n            <button\n              class=\"btn btn-xs btn-rounded horarioClase d-flex align-items-center\" [ngStyle]=\"{'border-color':hora[dia].color, 'background-color': hora[dia].color }\"\n              (click)=\"open(content,hora[dia].slot)\"\n              [class.disabled]=\"hora[dia].isDisabled\"\n            >\n              <img\n                src=\"{{ hora[dia].imagen }}\"\n                alt=\"{{ hora[dia].monitor }}\"\n                class=\"rounded-circle m-r-10\"\n                width=\"26\"\n              />\n              <div class=\"line-height-12 m-r-5\">\n                {{ hora[dia].actividad}}\n              </div>\n              <div class=\"\" *ngIf=\"hora[dia].isReserved\"><span><i class=\"fa fa-check\"></i></span></div>\n            </button>\n          </div>\n          <div *ngIf=\"!hora[dia]\">\n            <h3><span class=\"text-danger\"><i class=\"icon-x\"></i></span></h3>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-label\"><span class=\"badge badge-pill claseTitle text-uppercase font-size-14 text-white\" [style.backgroundColor]=\"slotSeleccionado.actividad.color\" [style.borderColor]=\"slotSeleccionado.actividad.color\">{{slotSeleccionado.actividad.nombre}}</span></h4>\n    <button type=\"button\" class=\"close\" (click)=\"modal.dismiss()\"><i class=\"icon-x\"></i></button>\n  </div>\n  <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"monitor\">\n                <img src=\"{{ slotSeleccionado.monitor.imagen ? '/assets/uploads/'+slotSeleccionado.monitor.imagen : '/assets/uploads/' + slotSeleccionado.monitor.imagen }}\" alt=\"Alan Monroe\" class=\"rounded-circle\"/>\n                <span class=\"nombre\">{{ slotSeleccionado.monitor.nombre + ' '+ slotSeleccionado.monitor.apellidos }}</span>\n                <span>Monitor</span>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <ul class=\"list-group\">\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    Hora\n                    <span class=\"font-weight-bold dataHora\">{{ slotSeleccionado.horaInicio | formatoStringToHora }}</span>\n                </li>\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    Día\n                    <span class=\"font-weight-bold dataDia\">{{ slotSeleccionado.diaSemana }}</span>\n                </li>\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    Aforo\n                    <span class=\"font-weight-bold dataAforo\">{{ aforoActual }} (max {{ slotSeleccionado.sala.aforoMax }})</span>\n                </li>\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    Sala\n                    <span class=\"font-weight-bold dataSala\">{{ slotSeleccionado.sala.numero }}</span>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-md-12 my-4\" *ngIf=\"isLoggedIn\">\n            <div class=\"\" *ngIf=\"isSubscribed\">\n              <h4 class=\"text-center mb-3\">Reserva tu plaza en la clase</h4>\n              <div class=\"row\" *ngIf=\"!hasReserva\">\n                  <div class=\"col-4 offset-4 text-right\">\n                      <input type=\"checkbox\" name=\"recurrente\" class=\"form-control\" [(ngModel)]=\"isRecurrente\" /> <label>¿Es recurrente?</label>\n                  </div>\n                  <div class=\"col-md-8 offset-md-2 text-center\">\n                      <button type=\"button\" class=\"btn btn-xs btn-success\" (click)=\"doReserva()\">Reservar clase</button>\n                  </div>\n              </div>\n              <div class=\"row\" *ngIf=\"hasReserva\">\n                <div class=\"col-md-12 text-center\" *ngIf=\"!reservaToDel\">\n                  <span class=\"badge badge-pill badge-success font-size-14 mb-2\">Ya tienes una plaza reservada para esta clase</span>\n                  <button class=\"btn btn-danger btn-sm\" (click)=\"delConfirm(hasReserva)\">Eliminar reserva</button>\n                </div>\n                <div class=\"col-md-12 text-center\" *ngIf=\"reservaToDel\">\n                  <span class=\"badge badge-pill badge-warning font-size-14 mb-2\">¿Estás seguro?</span><br />\n                  <button class=\"btn btn-primary btn-sm\" (click)=\"delCancelar()\">Cancelar</button>\n                  <button class=\"btn btn-danger btn-sm\" (click)=\"delReserva()\">Si, eliminar reserva</button>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"!isSubscribed\">\n              <div class=\"col-md-12 text-center mb-2\">\n                <span class=\"badge badge-pill badge-info font-size-14\">Para reservar plazas, suscríbete</span>\n              </div>\n              <div class=\"col-md-12 text-center\">\n                <a href=\"/cuenta/mis/datos\" class=\"btn btn-primary btn-sm\" >Suscríbete</a>\n              </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"modal.dismiss()\">Cerrar</button>\n</div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\nimport * as aboutusComponents from '../../components';\nimport { CallToActionComponent } from '@shared/components/call-to-action/call-to-action.component';\n\n@Component({\n  selector: 'app-aboutus',\n  templateUrl: './aboutus.component.html',\n  styleUrls: ['./aboutus.component.css'],\n})\nexport class PageAboutusComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Quiénes somos';\n    this.pageDesc = 'Estamos aqui para ayudarte';\n    this.pageImg = 'aboutus.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<aboutus-about></aboutus-about>\n<aboutus-conceptos></aboutus-conceptos>\n<aboutus-galeria></aboutus-galeria>\n<aboutus-callaction></aboutus-callaction>\n<aboutus-features></aboutus-features>\n<aboutus-monitores></aboutus-monitores>\n<aboutus-testimonios></aboutus-testimonios>\n<shared-call-to-action\n    [title]=\"'Te esperamos'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [img]=\"'haltere.jpg'\"\n    [overlayStyle] = \"11\"\n    [btnTxt]=\"'Inscríbete'\"\n    [btnUrl]=\"'/registro'\"\n    [btnClass]=\"'btn-light btn-lg'\"\n    ></shared-call-to-action>\n<aboutus-dondeestamos></aboutus-dondeestamos>","import { Component, OnInit } from '@angular/core';\nimport { PortfolioItemComponent } from '@shared/components/portfolio-item/portfolio-item.component';\n@Component({\n  selector: 'home-galeria',\n  templateUrl: './galeria.component.html',\n  styleUrls: ['./galeria.component.css']\n})\nexport class HomeGaleriaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- GALLERY -->\n<section class=\"no-padding\">\n    <!-- Portfolio -->\n    <div id=\"portfolio\" class=\"grid-layout portfolio-4-columns\" data-margin=\"0\" data-lightbox=\"gallery\">\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_8.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_7.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_6.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_5.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_4.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_3.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_2.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n        <galeria-portfolio-item [itemTitle]=\"'Fil\\'s Center Gym'\"  [itemImage]=\"'assets/fitness/images/gallery/gym_1.jpg'\" [itemTxt]=\"'Ver'\"></galeria-portfolio-item>\n    </div>\n    <!-- end: Portfolio -->\n</section>\n<!-- end: GALLERY -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home-goals',\n  templateUrl: './goals.component.html',\n  styleUrls: ['./goals.component.css']\n})\nexport class HomeGoalsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- GOALS -->\n<section id=\"section4\" class=\"p-t-150 p-b-150 parallax\" data-bg-parallax=\"assets/fitness/images/parallax/pesas.jpg\">\n    <div class=\"bg-overlay\" data-style=\"10\"></div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-12 text-center text-light\">\n                <h2 class=\"text-lg font-weight-600\">¡Cuidamos de ti!</h2>\n                <p class=\"lead font-weight-400\">Trabajamos constantemente para mejorar y conseguir ser el mejor gymnasio.</p>\n            </div>\n        </div>\n        <div class=\"row mt-5\">\n            <div class=\"col-lg-3 text-center\" data-animate=\"fadeInUp\" data-animate-delay=\"100\">\n                <!-- <div class=\"pie-chart\" data-percent=\"90\" data-color=\"#FCC43F\" data-width=\"14\"> <span class=\"percent\"></span> </div> -->\n                <h4 class=\"text-orange\">Programas</h4>\n                <p class=\"text-light\">Nuestro equipo de monitores tienen la experiencia para ofrecerte el mejor programa personalizado para conseguir tus objetivos.</p>\n            </div>\n            <div class=\"col-lg-3 text-center\" data-animate=\"fadeInUp\" data-animate-delay=\"200\">\n                <!-- <div class=\"pie-chart\" data-percent=\"65\" data-color=\"#FCC43F\" data-width=\"14\"> <span class=\"percent\"></span> </div> -->\n                <h4 class=\"text-orange\">Maquinaria</h4>\n                <p class=\"text-light\">Ponemos a tu disposición los últimos equipos de Life Fitness y Hammer Strength para que tu entrenamiento sea tan eficaz como saludable.</p>\n            </div>\n            <div class=\"col-lg-3 text-center\" data-animate=\"fadeInUp\" data-animate-delay=\"400\">\n                <!-- <div class=\"pie-chart\" data-percent=\"44\" data-color=\"#FCC43F\" data-width=\"14\"> <span class=\"percent\"></span> </div> -->\n                <h4 class=\"text-orange\">Actividades</h4>\n                <p class=\"text-light\">Nuestras actividades colectivas son diseñadas por los mejores expertos en actividades físicas de manera que sean eficaces y adaptables a diferentes niveles de dificultad.</p>\n            </div>\n            <div class=\"col-lg-3 text-center\" data-animate=\"fadeInUp\" data-animate-delay=\"300\">\n                <!-- <div class=\"pie-chart\" data-percent=\"35\" data-color=\"#FCC43F\" data-width=\"14\"> <span class=\"percent\"></span> </div> -->\n                <h4 class=\"text-orange\">Horarios</h4>\n                <p class=\"text-light\">Ofrecemos unos horarios amplios para que puedas encontrar el mejor momento y organizarte de la manera más acorde con tus actividades.</p>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: GOALS -->\n","<section class=\"pt-5\">\n    <div class=\"container\">\n      <div class=\"row mb-5\">\n        <div class=\"col-lg-12 text-center mb-3\">\n          <div\n            class=\"heading-text heading-line heading-gradient text-center mb-0\"\n          >\n            <h4 class=\"mb-0 font-size-h2\">\n              <span>{{ title }}</span>\n            </h4>\n          </div>\n        </div>\n        <div *ngIf=\"!isDataLoaded\" class=\"col-lg-12 my-5\">\n          <div *ngIf=\"!isDataLoaded\" class=\"d-flex justify-content-center\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Cargando...</span>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"isDataLoaded\" class=\"col-lg-12\">\n          <!-- suscripcion -->\n          <div class=\"row my-4\">\n            <div class=\"col-md-12 mb-4\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped horario\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" class=\"text-left\">Nr. Factura</th>\n                                <th scope=\"col\" class=\"text-left\">Fecha</th>\n                                <th scope=\"col\" class=\"text-center\">Importe</th>\n                                <th scope=\"col\" class=\"text-center\">Pagado</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let factura of userFacturas\">\n                                <td># {{ factura.numero }}</td>\n                                <td>{{ factura.fecha | date: mediumDate }}</td>\n                                <td class=\"text-center\">{{ factura.importe | currency: \"€\" }}</td>\n                                <td class=\"text-center\">\n                                    <span class=\"badge badge-success\" *ngIf=\"factura.pagado\"><i class=\"icon-check\"></i></span>\n                                    <span class=\"badge badge-danger\" *ngIf=\"!factura.pagado\"><i class=\"icon-x\"></i></span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component, OnInit } from '@angular/core';\n\nimport { HelperService } from '@core/services/helper.service';\nimport { FacturaServiceService as FacturaService } from \"@servicesRest/factura/factura-service.service\";\nimport { Factura } from \"@modelsRest/Factura\";\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-facturas',\n  templateUrl: './facturas.component.html',\n  styleUrls: ['./facturas.component.css']\n})\nexport class PageCuentaFacturasComponent implements OnInit {\n  public title: string = 'Mis Facturas';\n  public sessionUser: any;\n  public userFacturas: Factura[];\n  public isDataLoaded: boolean = false;\n\n  constructor(\n    private _helperService: HelperService,\n    private _facturaService: FacturaService,\n    private datePipe:DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this._helperService.checkIsLoginAndRedirectToLogin();\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n      console.log(this.sessionUser);\n    })\n    .then(()=>{\n      this.loadFacturas();\n    })\n  }\n\n  loadFacturas(){\n    this._facturaService.getFacturasByUsuarioId(this.sessionUser.id).toPromise()\n    .then((facturas)=>{\n      this.userFacturas = facturas;\n    })\n    .then(()=>{\n      console.log(this.userFacturas);\n      this.isDataLoaded=true;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home-horario',\n  templateUrl: './horario.component.html',\n  styleUrls: ['./horario.component.css']\n})\nexport class HomeHorarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- FAQ & OPENING HOURS -->\n<section id=\"section2\" class=\"background-image\" style=\"background-image:url(assets/fitness/images/background1.png);\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8\">\n                <div class=\"text-medium font-weight-600 mb-0 pb-0 text-dark\">Actividades</div>\n                <p class=\"lead font-weight-400\">Algunas de nuestras clases colectivas.</p>\n                <div class=\"accordion toggle fancy clean accordion-transparent\">\n                    <div class=\"ac-item\">\n                        <h5 class=\"ac-title text-uppercase\">Cross Training</h5>\n                        <div class=\"ac-content\">\n                            El entrenamiento cruzado es simplemente una rutina de entrenamiento que involucra varios tipos diferentes de ejercicio. Esto trabaja más grupos de músculos, mejora la agilidad y facilita la participación en una variedad de deportes recreativos, como el esquí.\n                        </div>\n                    </div>\n                    <div class=\"ac-item\">\n                        <h5 class=\"ac-title text-uppercase\">Boby Combat</h5>\n                        <div class=\"ac-content\">\n                            El Body Combat es un programa cardiovascular inspirado en las Artes Marciales, con movimientos que provienen del Karate, Boxeo, Tae Kwon Do, Tai Chi y Muay Thai. Coreografiado en base a una buena música, con sus excelentes instructores, los participantes realizan golpes, puñetazos, patadas y katas, queman calorías y consiguen una mayor resistencia cardiovascular.\n                        </div>\n                    </div>\n                    <div class=\"ac-item\">\n                        <h5 class=\"ac-title text-uppercase\">Ciclo Indoor</h5>\n                        <div class=\"ac-content\">\n                            El ciclismo indoor es una actividad cardiovascular en la que pedaleas al ritmo de la música. Una sala de fitnes o una bici estática en casa, música, un monitor dispuesto a motivarte y muchas ganas de dar pedaladas.    \n                        </div>\n                    </div>\n                    <div class=\"ac-item\">\n                        <h5 class=\"ac-title text-uppercase\">Zumba</h5>\n                        <div class=\"ac-content\">\n                            Zumba es una disciplina deportiva que se imparte en clases dirigidas en la que se realizan ejercicios aeróbicos al ritmo de música latina (merengue, samba, reggaeton, cumbia y salsa) con la finalidad de perder peso de forma divertida y mejorar el estado de ánimo de los deportistas.    \n                        </div>\n                    </div>\n                    <div class=\"ac-item\">\n                        <h5 class=\"ac-title text-uppercase\">Pilates</h5>\n                        <div class=\"ac-content\">\n                            El método Pilates, o simplemente Pilates, es un sistema de entrenamiento físico y mental creado a principios del siglo XX por Joseph Hubertus Pilates, quien lo ideó basándose en su conocimiento de distintas especialidades como gimnasia, traumatología y yoga; uniendo el dinamismo y la fuerza muscular con el control mental, la respiración y la relajación.    \n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"col-lg-4\">\n                <div class=\"text-medium font-weight-600 text-dark\">Horario</div>\n                <div class=\"working-hours\">\n                    <ul>\n                        <li>Lunes<span class=\"opening-hour\">07:00 - 23:00</span></li>\n                        <li>Martes<span class=\"opening-hour\">07:00 - 23:00</span></li>\n                        <li>Miercoles<span class=\"opening-hour\">07:00 - 23:00</span></li>\n                        <li>Jueves<span class=\"opening-hour\">07:00 - 23:00</span></li>\n                        <li>Viernes<span class=\"opening-hour\">07:00 - 23:00</span></li>\n                        <li>Sabado<span class=\"opening-hour\">10:00 - 15:00</span></li>\n                        <li>Domingo<span class=\"opening-hour\">10:00 - 15:00</span></li>\n                    </ul>\n                    <p><b>Nota:</b> Abrimos también en los días de fiesta con un horario de 10:00 a 15:00.</p>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</section>\n<!-- end: FAQ & OPENING HOURS -->","import { Component, OnInit } from '@angular/core';\nimport { FraseMotivadoraService } from '@core/services';\nimport { FraseMotivadora } from '@shared/models/frase.motivadora';\n\n@Component({\n  selector: 'aboutus-monitores',\n  templateUrl: './monitores.component.html',\n  styleUrls: ['./monitores.component.css'],\n  providers: [FraseMotivadoraService]\n})\nexport class MonitoresComponent implements OnInit {\n\n  public frases: Array<FraseMotivadora>;\n\n  constructor(\n    public _fraseMotivadoraService: FraseMotivadoraService\n  ) { \n    this.frases = _fraseMotivadoraService.getFrases(4);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- TRAINERS -->\n<section id=\"section5\" style=\"background-color: #2D2C2A\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-12 text-center m-b-40\">\n                <h2 class=\"text-lg font-weight-600 m-b-20 text-light\">El Equipo</h2>\n                <p class=\"lead text-light font-weight-400\">Tenemos un gran equipo de entrenadores persoales que te ayudarán a conseguir tus objetivos.</p>\n            </div>\n        </div>\n        <div class=\"row team-members team-members-circle team-members-transparent m-b-40 text-light\">\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"100\">\n                <team-member\n                    [memberImg]=\"'1.png'\"\n                    [memberNombre]=\"'Alea Sánchez'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[0].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'alea@filscenter.com'\"></team-member>\n            </div>\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"200\">\n                <team-member\n                    [memberImg]=\"'2.png'\"\n                    [memberNombre]=\"'Carlos Perea'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[1].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'carlos@filscenter.com'\"></team-member>\n            </div>\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"300\">\n                <team-member\n                    [memberImg]=\"'3.png'\"\n                    [memberNombre]=\"'Pedro Rodríguez'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[2].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'pedro@filscenter.com'\"></team-member>\n            </div>\n            <div class=\"col-lg-3\" data-animate=\"fadeInUp\" data-animate-delay=\"400\">\n                <team-member\n                    [memberImg]=\"'4.png'\"\n                    [memberNombre]=\"'Carla Pérez'\"\n                    [memberTitulo]=\"'Monitor'\"\n                    [memberBio]=\"frases[3].frase\"\n                    [facebook]=\"'#'\"\n                    [twitter]=\"'#'\"\n                    [instagram]=\"'#'\"\n                    [email]=\"'carla@filscenter.com'\"></team-member>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: TRAINERS -->\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { TablaEjercicio } from \"@modelsRest/TablaEjercicio\";\nimport { Observable } from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TablaEjercicioServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + \"tablaEjercicio\";\n\n  getTablasEjercicios(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getTablasEjerciciosByUsuarioId(userID:number): Observable<any> {\n    return this._http.get(this.url+'/suscriptor/'+userID);\n  }\n\n  getTablaEjercicio(tablaEjercicio:number):Observable<any>{\n    return this._http.get<TablaEjercicio>(this.url+\"/\"+tablaEjercicio);\n  }\n\n  deleteTablaEjercicio(tablaEjercicio: TablaEjercicio) {\n    return this._http.delete<TablaEjercicio>(this.url + \"/\" + tablaEjercicio.id);\n  }\n\n  createTablaEjercicio(tablaEjercicio:TablaEjercicio):Observable<any>{\n    return this._http.post<TablaEjercicio>(this.url,tablaEjercicio);\n  }\n\n  updateTablaEjercicio(tablaEjercicio: TablaEjercicio): Observable<any> {\n    return this._http.put<TablaEjercicio>(this.url + \"/\" + tablaEjercicio.id, tablaEjercicio);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pagetitle',\n  templateUrl: './pagetitle.component.html',\n  styleUrls: ['./pagetitle.component.css']\n})\nexport class PagetitleComponent implements OnInit {\n\n  @Input() pageTitle: string;\n  @Input() pageDesc: string;\n  @Input() pageImg: string;\n\n  public pageImgUrl: string;\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n    this.pageImgUrl = 'assets/fitness/images/parallax/' + this.pageImg;\n  }\n\n}\n","<!-- Page title -->\n<section id=\"page-title\" [attr.data-bg-parallax]=\"pageImgUrl\" data-height-xs=\"360\">\n    <div class=\"bg-overlay\" data-style=\"10\"></div>\n    <div class=\"container\">\n        <div class=\"page-title text-center text-light\">\n            <h1 class=\"fadeInUp\">{{ pageTitle }}</h1>\n            <span class=\"strong\">{{ pageDesc }}</span>\n        </div>\n    </div>\n</section>\n<!-- end: Page title -->\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EjercicioSerie } from '@modelsRest/EjercicioSerie';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EjercicioSerieServiceService {\n\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'ejercicioSerie';\n  url2 = appSettings.apiUrl + 'ejercicioSerieTabla';\n\n  getEjercicioSeries(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getEjercicioSerie(ejercicioSerie:number):Observable<any>{\n    return this._http.get<EjercicioSerie>(this.url+\"/\"+ejercicioSerie);\n  }\n\n  getEjerciciosPorTablaId(tablaid:number):Observable<any>{\n    return this._http.get<EjercicioSerie>(this.url2+\"/\"+tablaid)\n  }\n\n  deleteEjercicioSerie(ejercicioSerie:EjercicioSerie){\n    return this._http.delete<EjercicioSerie>(this.url+\"/\"+ejercicioSerie.id)\n  }\n\n  createEjercicioSerie(ejercicioSerie:EjercicioSerie):Observable<any>{\n    return this._http.post<EjercicioSerie>(this.url,ejercicioSerie);\n  }\n\n\n  updateEjercicioSerie(ejercicioSerie: EjercicioSerie): Observable<any> {\n    return this._http.put<EjercicioSerie>(this.url + \"/\" + ejercicioSerie.id, ejercicioSerie);\n  }\n}\n","<h3>Nuevo Slot</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addSlot(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label for=\"dia\">(*) Día Semana</label>\n        <select\n          class=\"form-control\"\n          name=\"dia\"\n          id=\"dia\"\n          #slotDia=\"ngModel\"\n          [(ngModel)]=\"nuevoSlot.diaSemana\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && slotDia.invalid) ||\n              (slotDia.touched && !slotDia.valid)\n          }\"\n          [(ngModel)]=\"slotDiaId\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option value=\"Lunes\" selected >Lunes </option>\n          <option value=\"Martes\" selected >Martes </option>\n          <option value=\"Miercoles\" selected >Miercoles </option>\n          <option value=\"Jueves\" selected >Jueves </option>\n          <option value=\"Viernes\" selected >Viernes </option>\n          <option value=\"Sabado\" selected >Sábado </option>\n          <option value=\"Domingo\" selected >Domingo </option>\n    \n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && slotDia.invalid) ||\n            (slotDia.touched && !slotDia.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              slotDia.errors.required || slotDia.invalid\n            \"\n          >\n            * Día no válido\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"hora\">(*) Hora Inicio</label>\n        <input\n        type=\"text\"\n          class=\"form-control\"\n          name=\"hora\"\n          id=\"hora\"\n          #slotHora=\"ngModel\"\n          [(ngModel)]=\"nuevoSlot.horaInicio\"\n          required\n          placeholder=\"Ej: 1300(13:00), 0935(09:35)\"\n          pattern=\"^(0([0-9])|1([0-9])|2([0-3]))(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|)\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && slotHora.invalid) ||\n              (slotHora.touched && !slotHora.valid)\n          }\"\n\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && slotHora.invalid) ||\n            (slotHora.touched && !slotHora.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              slotHora.errors.required || slotHora.invalid\n            \"\n          >\n            * Hora no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"actividad\">(*) Actividad</label>\n        <select\n          class=\"form-control\"\n          name=\"actividad\"\n          id=\"actividad\"\n          #slotActividad=\"ngModel\"\n          [(ngModel)]=\"actividadId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && slotActividad.invalid) ||\n              (slotActividad.touched && !slotActividad.valid)\n          }\"\n          [(ngModel)]=\"slotActividadSelect\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option *ngFor=\"let actividad of actividades\" value=\"{{ actividad.id }}\">\n            {{ actividad.nombre }} - {{actividad.tipoActividad.nombre}}\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && slotActividad.invalid) ||\n            (slotActividad.touched && !slotActividad.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              slotActividad.errors.required || slotActividad.invalid\n            \"\n          >\n            * actividad no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"monitor\">(*) Monitor</label>\n        <select\n          class=\"form-control\"\n          name=\"monitor\"\n          id=\"monitor\"\n          #slotMonitor=\"ngModel\"\n          [(ngModel)]=\"monitorId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && slotMonitor.invalid) ||\n              (slotMonitor.touched && !slotMonitor.valid)\n          }\"\n          [(ngModel)]=\"slotMonitorSelect\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option *ngFor=\"let monitor of monitores\" value=\"{{ monitor.id }}\">\n            {{ monitor.nombre }}\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && slotMonitor.invalid) ||\n            (slotMonitor.touched && !slotMonitor.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              slotMonitor.errors.required || slotMonitor.invalid\n            \"\n          >\n            * Monitor no válido\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"sala\">(*) Sala</label>\n        <select\n          class=\"form-control\"\n          name=\"sala\"\n          id=\"sala\"\n          #slotSala=\"ngModel\"\n          [(ngModel)]=\"salaId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && slotSala.invalid) ||\n              (slotSala.touched && !slotSala.valid)\n          }\"\n          [(ngModel)]=\"slotSalaSelect\"\n        >\n          <option value=\"\" selected >- Elige una opción - </option>\n          <option *ngFor=\"let sala of salas\" value=\"{{ sala.id }}\">\n            {{ sala.numero }}  (Aforo {{sala.aforoMax}} pers.)\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && slotSala.invalid) ||\n            (slotSala.touched && !slotSala.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              slotSala.errors.required || slotSala.invalid\n            \"\n          >\n            * Sala no válida\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Sala <span class=\"text-danger\">{{nuevoSlot.actividad.nombre}}-{{nuevoSlot.actividad.tipoActividad.nombre}} ({{nuevoSlot.horaInicio | formatoHora}})</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Actividad } from \"@modelsRest/Actividad\";\nimport { Sala } from \"@modelsRest/Sala\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ActividadServiceService } from \"@servicesRest/actividad/actividad-service.service\";\nimport { SalaServiceService } from \"@servicesRest/sala/sala-service.service\";\nimport { SlotServiceService } from \"@servicesRest/slot/slot-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\n\n@Component({\n  selector: \"app-slot-add\",\n  templateUrl: \"./slot-add.component.html\",\n  styleUrls: [\"./slot-add.component.css\"],\n})\nexport class SlotAddComponent implements OnInit {\n  nuevoSlot: any;\n\n  actividadId: number;\n  salaId: number;\n  monitorId: number;\n\n  slotActividadSelect = \"\";\n  slotSalaSelect = \"\";\n  slotMonitorSelect = \"\";\n  slotDiaId=\"\";\n\n  monitores: Usuario[];\n  salas: Sala[];\n  actividades: Actividad[];\n\n  constructor(\n    private _service: SlotServiceService,\n    private _serviceSala: SalaServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private _serviceActividad: ActividadServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevoSlot = {};\n  }\n\n  ngOnInit(): void {\n    //este número de rolId irá en función de el script definitivo de roles en la bbdd\n    this._serviceUsuario.getUsuariosByRol(2).subscribe((data) => {\n      this.monitores = data;\n    });\n\n    this._serviceSala.getSalas().subscribe((data) => {\n      this.salas = data;\n    });\n\n    this._serviceActividad.getActividades().subscribe((data) => {\n      this.actividades = data;\n    });\n  }\n\n  obtenerUsuario() {\n    return this._serviceUsuario\n      .getUsuario(this.monitorId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoSlot.monitor = data;\n      });\n  }\n\n  obtenerActividad() {\n    return this._serviceActividad\n      .getActividad(this.actividadId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoSlot.actividad = data;\n      });\n  }\n\n  obtenerSala() {\n    return this._serviceSala\n      .getSala(this.salaId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoSlot.sala = data;\n      });\n  }\n\n  addSlot(create, errorModal) {\n    this.obtenerActividad()\n      .then(() => this.obtenerUsuario())\n      .then(() => this.obtenerSala())\n      .then(() => {\n        this._service.createSlot(this.nuevoSlot).subscribe(\n          (data) => {\n            this.modalService.open(create, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n            setTimeout(function () {\n              window.location.reload();\n            }, 3000);\n          },\n          (err) => {\n            this.modalService.open(errorModal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n      });\n  }\n  refresh() {\n    window.location.reload();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'shared-servicio',\n  templateUrl: './servicio.component.html',\n  styleUrls: ['./servicio.component.css']\n})\nexport class ServicioComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() descr: string;\n  @Input() icon: string;\n\n\n  constructor() {\n    this.title = 'Espacio';\n    this.descr = '1400 m2 repartidos en dos plantas con las mejores instalaciones de la zona.';\n    this.icon = 'fa fa-circle';\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"icon-box effect medium center\">\n  <div class=\"icon\">\n    <a href=\"javascript:;\"><i [attr.class]=\"icon\"></i></a>\n  </div>\n  <h3 class=\"text-primary\">{{ title }}</h3>\n  <p>{{ descr }}</p>\n</div>\n","<div class=\"row\">\n    <div class=\"col-md-8\">\n        <div class=\"d-flex align-items-center\">\n            <div class=\"mr-4\">\n                <img [src]=\"'/assets/uploads/'+image\" id=\"imgAvatar\" class=\"img-fluid rounded-circle\" alt=\"\" width=\"100\">\n            </div>\n            <div class=\"mr-4\">\n                <input type=\"file\" class=\"file-input\" accept=\"image/*\" (change)=\"onFileSelected($event)\" #fileUpload>\n                <div class=\"file-upload\">\n\n                    <button class=\"btn btn-primary p-2 mr-3\" (click)=\"fileUpload.click()\">\n                        <i class=\"icon-upload\"></i>\n                    </button>\n\n                    {{ fileName || \"Seleccione y Sube una imagen.\" }}        \n                </div>\n            </div>\n            <div class=\"mr-4\" *ngIf=\"message\">\n                <div class=\"badge badge-pill font-size-12\" [class]=\"'badge-'+messageClass\" role=\"alert\">{{ message }}</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\">\n        \n\n        <!-- <div class=\"p-progress-bar-container radius small title-up\" *ngIf=\"progress > 0\">\n            <div class=\"p-progress-bar progress-animated\" [data-percent]=\"progress\" data-delay=\"1000\" data-type=\"%\" [ngStyle]=\"{ width: progress + '%' }\">\n            <div class=\"progress-title\">Subiendo imagen</div>\n            <span class=\"progress-type\">%</span><span class=\"progress-number animated fadeIn\">{{ progress }}</span></div>\n        </div>\n        <span class=\"btn btn-danger btn-sm\" (click)=\"cancelUpload()\" \n              *ngIf=\"progress > 0\"><i class=\"icon-x mr-1\"></i> cancelar</span> -->\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { UsuarioServiceService as UsuarioService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { UploadFileService } from '@core/services/upload-file.service';\nimport { TokenStorageService } from '@core/services/token-storage.service';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\nimport { HelperService } from '@core/services/helper.service';\ndeclare var $:any;\n@Component({\n  selector: 'cuenta-upload-image',\n  templateUrl: './upload-image.component.html',\n  styleUrls: ['./upload-image.component.css']\n})\nexport class CuentaUploadImageComponent implements OnInit {\n\n  public fileName: any;\n  uploadProgress:number;\n  uploadSub: Subscription;\n\n  private selectedFiles?: FileList;\n  private currentFile?: File;\n  public progress = 0;\n  public message = '';\n  public messageClass='danger';\n  public isImageUploaded: boolean = false;\n  public image:string;\n  public imagenAnterior: string;\n\n  fileInfos?: Observable<any>;\n\n  @Input() user: any;\n\n  constructor(\n    private _serviceUploadFile: UploadFileService,\n    private _serviceUsuario: UsuarioService,\n    private _tokenStorageService: TokenStorageService,\n    private _helperService: HelperService\n\n  ) { }\n\n  ngOnInit(): void {\n    //console.log(this.user);\n    this.image = (this.user.imagen) ? this.user.imagen : 'user-perfil.png';\n    //this.fileInfos = this._serviceUploadFile.getFiles();\n  }\n\n  cancelUpload() {\n    this.uploadSub.unsubscribe();\n    this.reset();\n  }\n\n  reset() {\n    this.progress = 0;\n    this.uploadSub = null;\n  }\n\n  async onFileSelected(event) {\n    this.progress = 0;\n\n      const file:File = event.target.files[0];\n      console.log(file);\n  \n      if (file) {\n        this.currentFile = file;\n        this.fileName = file.name;\n        console.log(file);\n\n        var reader = new FileReader();\n        reader.onload = function (e) {\n          //console.log(e.target.result);\n          $('#imgAvatar').attr('src', e.target.result);\n        }\n        reader.readAsDataURL(file);\n        \n        this.imagenAnterior = this.user.imagen;\n        this.isImageUploaded = await this.showAndSaveAvatar();\n        if(this.fileName != this.imagenAnterior) {\n          await this.deleteOldFile();\n        }\n\n      }\n  }\n\n  async deleteOldFile(){\n    await new Promise((resolve, reject) => {\n      this._serviceUploadFile.deleteFile(this.imagenAnterior).toPromise()\n      .then((data)=>{\n        console.log(data);\n        resolve;\n      })\n      .catch((err)=>{\n        console.log(err);\n        console.log(err.error.message);\n        reject;\n      });\n    });\n  }\n\n  async showAndSaveAvatar() {\n\n    await new Promise((resolve, reject) => {\n      \n      this.uploadSub = this._serviceUploadFile.upload(this.currentFile).subscribe(\n        (event: any) => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progress = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            this.message = event.body.message;\n            this.messageClass = 'success';\n          }\n        },\n        (err: any) => {\n          console.log(err);\n          console.log(err.error.message);\n          this.progress = 0;\n  \n          if (err.error && err.error.message) {\n            this.message = err.error.message;\n          } else {\n            this.message = 'No se ha podido subir la imagen!';\n          }\n  \n          this.currentFile = undefined;\n      });\n\n      resolve(true);\n    })\n    .then(()=>{\n      return this.updateImageUser();   \n    })\n    .then((data)=>{\n      return this._tokenStorageService.saveUser(this.user);\n    })\n    .then((user)=>{\n      console.log(user);\n      this.isImageUploaded = true;\n    });\n\n    return true;\n  }\n\n  updateImageUser(){\n    return this._serviceUsuario.getUsuario(this.user.id).toPromise()\n      .then((user) => {\n        user.imagen = this.fileName;\n        return user;\n      })\n      .then((user)=>{\n        this.user = user;\n        return this._serviceUsuario.updateUsuario(user).toPromise();\n      });\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { TipoActividadListComponent } from \"../rest/components/tipo_actividad/tipo-actividad-list/tipo-actividad-list.component\";\nimport { PageCuentaPerfilComponent } from \"./pages/perfil/perfil.component\";\nimport { ActividadListComponent } from \"@componentsRest/actividad/actividad-list/actividad-list.component\";\nimport { DireccionListComponent } from \"@componentsRest/direccion/direccion-list/direccion-list.component\";\nimport { SlotListComponent } from \"@componentsRest/slot/slot-list/slot-list.component\";\nimport { UsuarioListComponent } from \"@componentsRest/usuario/usuario-list/usuario-list.component\";\nimport { RolListComponent } from \"@componentsRest/rol/rol-list/rol-list.component\";\nimport { TaquillaListComponent } from \"@componentsRest/taquilla/taquilla-list/taquilla-list.component\";\nimport { SuscripcionListComponent } from \"@componentsRest/suscripcion/suscripcion-list/suscripcion-list.component\";\nimport { ReservaListComponent } from \"@componentsRest/reserva/reserva-list/reserva-list.component\";\nimport { SalaListComponent } from \"@componentsRest/sala/sala-list/sala-list.component\";\nimport { TablaEjercicioListComponent } from \"@componentsRest/tabla_ejercicio/tabla-ejercicio-list/tabla-ejercicio-list.component\";\nimport { EjercicioSerieListComponent } from \"@componentsRest/ejercicio_serie/ejercicio-serie-list/ejercicio-serie-list.component\";\nimport { EjercicioListComponent } from \"@componentsRest/ejercicio/ejercicio-list/ejercicio-list.component\";\nimport { FacturaListComponent } from \"@componentsRest/factura/factura-list/factura-list.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: PageCuentaPerfilComponent,\n    children: [\n      // config usuarios\n      {\n        path: \"usuario/list\",\n        component: UsuarioListComponent,\n      },\n      {\n        path: \"rol/list\",\n        component: RolListComponent,\n      },\n      {\n        path: \"taquilla/list\",\n        component: TaquillaListComponent,\n      },\n      {\n        path: \"direccion/list\",\n        component: DireccionListComponent,\n      },\n      {\n        path: \"suscripcion/list\",\n        component: SuscripcionListComponent,\n      },\n      //config actividades/reservas\n      \n      {\n        path: \"actividad/list\",\n        component: ActividadListComponent,\n      },\n      {\n        path: \"tipo_actividad/list\",\n        component: TipoActividadListComponent,\n      },\n      {\n        path: \"slot/list\",\n        component: SlotListComponent,\n      },\n      {\n        path: \"reserva/list\",\n        component: ReservaListComponent,\n      },\n      {\n        path: \"sala/list\",\n        component: SalaListComponent,\n      },\n      //config tablas\n      {\n        path: \"tablaEjercicio/list\",\n        component: TablaEjercicioListComponent,\n      },\n      {\n        path: \"ejercicioSerie/list\",\n        component: EjercicioSerieListComponent,\n      },\n      {\n        path: \"ejercicio/list\",\n        component: EjercicioListComponent,\n      },\n      //otros\n      {\n        path: \"factura/list\",\n        component: FacturaListComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class CuentaRoutingModule {}\n","<h3 class=\"text-center\">Provincias</h3>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let provincia of provincias\" class=\"text-center\">\n        <td>{{ provincia.nombre }}</td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Nombre</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Provincia } from '@modelsRest/Provincia';\nimport { ProvinciaServiceService } from '@servicesRest/provincia/provincia-service.service';\n\n@Component({\n  selector: 'app-provincia-list',\n  templateUrl: './provincia-list.component.html',\n  styleUrls: ['./provincia-list.component.css'],\n})\nexport class ProvinciaListComponent implements OnInit {\n  constructor(\n    private service: ProvinciaServiceService,\n    private router: Router\n  ) {}\n\n  provincias: Provincia[];\n\n  ngOnInit(): void {\n    this.service.getProvincias().subscribe((data) => {\n      this.provincias = data;\n    });\n  }\n}\n","<h3>Nueva Sala</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addSala(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">Aforo Máximo</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"aforoMax\"\n          #aforoSala=\"ngModel\"\n          [(ngModel)]=\"nuevaSala.aforoMax\"\n          placeholder=\"Aforo Máximo\"\n          required\n          min=\"1\"\n          max=\"100\"\n          pattern=\"(([1-9])|([1-9])([0-9])|100)\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && aforoSala.invalid) ||\n              (aforoSala.touched && !aforoSala.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && aforoSala.invalid) ||\n            (aforoSala.touched && !aforoSala.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"aforoSala.errors.required || aforoSala.invalid\">\n            * Aforo no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">Número de Sala</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          name=\"numeroSala\"\n          #numeroSala=\"ngModel\"\n          [(ngModel)]=\"nuevaSala.numero\"\n          placeholder=\"Número de Sala\"\n          required\n          min=\"1\"\n          max=\"100\"\n          pattern=\"(([1-9])|([1-9])([0-9])|100)\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && numeroSala.invalid) ||\n              (numeroSala.touched && !numeroSala.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && numeroSala.invalid) ||\n            (numeroSala.touched && !numeroSala.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"numeroSala.errors.required || numeroSala.invalid\">\n            * Número no válido\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Sala <span class=\"text-danger\">{{nuevaSala.numero}}</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Sala } from \"@modelsRest/Sala\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { SalaServiceService } from \"@servicesRest/sala/sala-service.service\";\n\n@Component({\n  selector: \"app-sala-add\",\n  templateUrl: \"./sala-add.component.html\",\n  styleUrls: [\"./sala-add.component.css\"],\n})\nexport class SalaAddComponent implements OnInit {\n  nuevaSala: any;\n\n  constructor(\n    private _service: SalaServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaSala = {\n      aforoMax: \"\",\n      numero: \"\",\n    };\n  }\n\n  ngOnInit(): void {}\n\n  addSala(create, errorModal) {\n    this._service.createSala(this.nuevaSala).subscribe(\n      (data) => {\n        this.modalService.open(create, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 3000);\n      },\n      (err) => {\n        this.modalService.open(errorModal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","<!-- Section -->\n<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <div class=\"heading-text heading-gradient heading-line text-center\">\n                    <h4 class=\"text-center\"><span>¿Has olvidado tu contraseña?</span></h4>\n                </div>\n                <form #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit(f)\" class=\"form-validate\">\n                    <div class=\"form-group\">\n                        <p class=\"text-center\">Para recibir una nueva contraseña, introduce tu dirección de correo electrónico.</p>\n                        <label for=\"email\">Email <span class=\"text-danger\">*</span></label>\n                        <input \n                            type=\"email\"\n                            name=\"email\"\n                            class=\"form-control form-white placeholder required\"\n                            placeholder=\"Introduce tu email...\"\n                            required\n                            [(ngModel)]=\"email\"\n                            #usuarioEmail=\"ngModel\"\n                            pattern=\"^([a-z0-9]{1})((\\.|\\-)?([a-z0-9])){0,}@([a-z0-9]){1}((\\.|\\-)?([a-z0-9]))*\\.([a-z]){2,4}$\"\n                            [ngClass]=\"{\n                                'is-invalid':\n                                (f.submitted && usuarioEmail.invalid) ||\n                                (usuarioEmail.touched && !usuarioEmail.valid)\n                            }\"\n                            >\n                            <div\n                                *ngIf=\"\n                                (f.submitted && usuarioEmail.invalid) ||\n                                (usuarioEmail.touched && !usuarioEmail.valid)\n                                \"\n                                class=\"invalid-feedback\"\n                                >\n                                <div *ngIf=\"usuarioEmail.errors.required || usuarioEmail.invalid\">\n                                    Email no válido\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"text-center\">\n                        <button type=\"submit\" class=\"btn\">Reset Contraseña</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: Section -->\n","import { formatCurrency } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { MailService } from '@core/services/mail.service';\nimport { Router } from '@angular/router';\ndeclare var $:any;\n@Component({\n  selector: 'recover-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css']\n})\nexport class FormularioComponent implements OnInit {\n  public email: string;\n  public enviando: boolean = false;\n  constructor(\n    private _serviceMail: MailService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form:any){\n    console.log(this.email);\n    this.enviando = true;\n    this._serviceMail.resetPass(this.email).subscribe(\n      response => {\n        console.log(response);\n        this.email='';\n        this.enviando = false;\n        form.resetForm();\n\n        $.notify({\n          // options\n          icon: 'fas fa-check',\n          title: '¡Muy bien!',\n          message: 'Hemos enviado un correo con tus nuevas credenciales.',\n        },{\n          // settings\n          type: 'success'\n        });\n\n        setTimeout(()=>{\n          this.redirectPage();\n        },3000);\n      },\n      err => {\n        //console.log(err);\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n      }\n    );\n  }\n\n  redirectPage(){\n    this._router.navigate(['/iniciar-sesion']).then(() => {\n      window.location.reload();\n    });\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Actividad } from \"../../models/Actividad\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ActividadServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'actividad';\n\n  getActividades(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getActividad(actividad: number): Observable<any> {\n    return this._http.get<Actividad>(this.url + \"/\" + actividad);\n  }\n\n  deleteActividad(actividad: Actividad): Observable<any> {\n    return this._http.delete<Actividad>(this.url + \"/\" + actividad.id);\n  }\n\n  createActividad(actividad: Actividad): Observable<any> {\n    return this._http.post<Actividad>(this.url, actividad);\n  }\n\n  updateActividad(actividad: Actividad): Observable<any> {\n    return this._http.put<Actividad>(this.url + \"/\" + actividad.id, actividad);\n  }\n}\n","<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-12\">\n    <div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n      <button\n        id=\"plus\"\n        enabled\n        (click)=\"habilitarTablaEjercicio()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n      >\n        <i class=\"icon-plus\"></i> Tabla Ejercicio\n      </button>\n      <button\n        id=\"minus\"\n        (click)=\"deshabilitarTablaEjercicio()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n      >\n        <i class=\"icon-minus\"></i> Tabla Ejercicio\n      </button>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"mostrarTablaEjercicioAdd == true\">\n  <app-tabla-ejercicio-add></app-tabla-ejercicio-add>\n</div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-4\">\n    <h3 class=\"text-left\">Tablas Ejercicio</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-8 d-flex justify-content-end\">\n    <div class=\"form-outline\">\n      <label\n        >Usuario / Monitor:\n        <input\n          [(ngModel)]=\"filterUser\"\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          placeholder=\"\"\n      /></label>\n      <label for=\"\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary mt-2\"\n          (click)=\"filtrarTabla()\"\n        >\n          <i class=\"fas fa-search\"></i>\n        </button>\n      </label>\n\n      <button\n        style=\"height: 40px\"\n        (click)=\"quitarFiltroTabla()\"\n        type=\"button\"\n        class=\"btn btn-secondary mt-2 ml-4\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Monitor\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Usuario\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Fecha inicio\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Fecha fin\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Activa\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tablaEjercicio of tablasEjercicio\" class=\"text-center\">\n        <td class=\"text-left\">{{ tablaEjercicio.monitor.nombre }}</td>\n        <td class=\"text-left\">{{ tablaEjercicio.suscriptor.nombre }}</td>\n        <td>{{ tablaEjercicio.fechaInicio | date: 'dd/MM/yyyy' }}</td>\n        <td>{{ tablaEjercicio.fechaFin | date: 'dd/MM/yyyy' }}</td>\n        <td class=\"text-left\">\n          {{ tablaEjercicio.activa == true ? \"Activa\" : \"Inactiva\" }}\n        </td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, tablaEjercicio)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete, this.tablaEjercicio)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Detalles tabla\"\n            (click)=\"openDetalleTabla(detalle, tablaEjercicio)\"\n            ><i class=\"icon-settings\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\">Monitor</th>\n        <th id=\"\">Usuario</th>\n        <th id=\"\">Fecha inicio</th>\n        <th id=\"\">Fecha fin</th>\n        <th id=\"\">Activa</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n<!-- ======================================= MODAL CONFIRM DELETE==============================  -->\n<!-- ======================================= MODAL CONFIRM DELETE==============================  -->\n<!-- ======================================= MODAL CONFIRM DELETE==============================  -->\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¿Seguro que quieres borrar la tabla del usuario\n        <span class=\"text-danger\"\n          >{{ tablaAux.suscriptor.nombre }} ({{\n            tablaAux.suscriptor.id\n          }})?</span\n        >\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancelar\n    </button>\n    <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">\n      Borrar\n    </button>\n  </div>\n</ng-template>\n\n<!-- ======================================= MODAL UPDATE TABLA==============================  -->\n<!-- ======================================= MODAL UPDATE TABLA==============================  -->\n<!-- ======================================= MODAL UPDATE TABLA==============================  -->\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Tabla Ejercicio</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"tablaUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update()\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-2\">\n            <label for=\"tablaActiva\">(*) ¿Tabla Activa?</label>\n            <select\n              class=\"form-control\"\n              name=\"tablaActiva\"\n              id=\"tablaActiva\"\n              #tablaEjercicioActiva=\"ngModel\"\n              [(ngModel)]=\"tablaUpdate.activa\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && tablaEjercicioActiva.invalid) ||\n                  (tablaEjercicioActiva.touched && !tablaEjercicioActiva.valid)\n              }\"\n              [(ngModel)]=\"tablaUpdate.activa\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option value=\"true\">Sí</option>\n              <option value=\"false\">No</option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && tablaEjercicioActiva.invalid) ||\n                (tablaEjercicioActiva.touched && !tablaEjercicioActiva.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  tablaEjercicioActiva.errors.required ||\n                  tablaEjercicioActiva.invalid\n                \"\n              >\n                * opción no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-5\">\n            <label for=\"fechaInicio\">(*) Fecha de Inicio</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              id=\"fechaInicio\"\n              name=\"fechaInicio\"\n              #tablaEjercicioFechaInicio=\"ngModel\"\n              [(ngModel)]=\"tablaUpdate.fechaInicio\"\n              required=\"\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && tablaEjercicioFechaInicio.invalid) ||\n                  (tablaEjercicioFechaInicio.touched &&\n                    !tablaEjercicioFechaInicio.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && tablaEjercicioFechaInicio.invalid) ||\n                (tablaEjercicioFechaInicio.touched &&\n                  !tablaEjercicioFechaInicio.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  tablaEjercicioFechaInicio.errors.required ||\n                  tablaEjercicioFechaInicio.invalid\n                \"\n              >\n                * Fecha no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-5\">\n            <label for=\"fechaFin\">(*) Fecha de Fin</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              id=\"fechaFin\"\n              name=\"fechaFin\"\n              #tablaEjercicioFechaFin=\"ngModel\"\n              [(ngModel)]=\"tablaUpdate.fechaFin\"\n              required=\"\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && tablaEjercicioFechaFin.invalid) ||\n                  (tablaEjercicioFechaFin.touched &&\n                    !tablaEjercicioFechaFin.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && tablaEjercicioFechaFin.invalid) ||\n                (tablaEjercicioFechaFin.touched &&\n                  !tablaEjercicioFechaFin.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  tablaEjercicioFechaFin.errors.required ||\n                  tablaEjercicioFechaFin.invalid\n                \"\n              >\n                * Fecha no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"monitor\">(*) Monitor</label>\n            <select\n              class=\"form-control\"\n              name=\"monitor\"\n              id=\"monitor\"\n              #monitorTabla=\"ngModel\"\n              [(ngModel)]=\"monitorId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && monitorTabla.invalid) ||\n                  (monitorTabla.touched && !monitorTabla.valid)\n              }\"\n              [(ngModel)]=\"tablaUpdate.monitor.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option\n                *ngFor=\"let monitor of monitores\"\n                value=\"{{ monitor.id }}\"\n              >\n                {{ monitor.nombre }}\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && monitorTabla.invalid) ||\n                (monitorTabla.touched && !monitorTabla.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"monitorTabla.errors.required || monitorTabla.invalid\">\n                * Monitor no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"sala\">(*) Suscriptor</label>\n            <select\n              class=\"form-control\"\n              name=\"sala\"\n              id=\"sala\"\n              #suscriptorTabla=\"ngModel\"\n              [(ngModel)]=\"suscriptorId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && suscriptorTabla.invalid) ||\n                  (suscriptorTabla.touched && !suscriptorTabla.valid)\n              }\"\n              [(ngModel)]=\"tablaUpdate.suscriptor.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <!--p> aqui se haria un if que sacase todos los que tuvieran usuario.rol == usuario </p-->\n              <option\n                *ngFor=\"let suscriptor of suscriptores\"\n                value=\"{{ suscriptor.id }}\"\n              >\n                {{ suscriptor.nombre }} -\n                {{\n                  suscriptor.numeroTarjeta == null\n                    ? \"tarjetaNull\"\n                    : suscriptor.numeroTarjeta\n                }}\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && suscriptorTabla.invalid) ||\n                (suscriptorTabla.touched && !suscriptorTabla.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  suscriptorTabla.errors.required || suscriptorTabla.invalid\n                \"\n              >\n                * Usuario no válido\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<!-- ======================================= MODAL DETALLE TABLA==============================  -->\n<!-- ======================================= MODAL DETALLE TABLA==============================  -->\n<!-- ======================================= MODAL DETALLE TABLA==============================  -->\n\n<ng-template #detalle let-modal>\n  <div class=\"container\">\n    <div class=\"modal-header text-center\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Detalle Tabla Ejercicio de\n        <span class=\"text-primary\">{{ tablaDetalle.suscriptor.nombre }}</span>\n        idtabla ({{ tablaDetalle.id }})\n      </h4>\n    </div>\n    <div class=\"modal-body content-center\">\n    \n      <div class=\"row input-group\">\n        <div class=\"col-sm-12 col-md-12 mb-3\">\n          <div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n            <button (click)=\"abrirAniadirModal(true)\" class=\"btn btn-light\">\n              <i class=\"icon-plus\"></i> Añadir Ejercicio Serie\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!--parte formulario add ejercicioSerie-->\n      <div *ngIf=\"modalAniadir == true\">\n        <div class=\"card-body\">\n          <form\n            class=\"form-validate\"\n            name=\"form\"\n            (ngSubmit)=\"\n              f.form.valid &&\n                aniadirEjercicioSerie(\n                  detalle,\n                  this.tablaDetalle,\n                  createEjer,\n                  errorModalEjer\n                )\n            \"\n            #f=\"ngForm\"\n          >\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-4\">\n                <label for=\"semana\">(*) Día número Semana</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  id=\"semana\"\n                  name=\"semana\"\n                  #ejercicioSerieSemana=\"ngModel\"\n                  [(ngModel)]=\"nuevoEjercicioSerie.porSemana\"\n                  placeholder=\"Veces a realizar por semana\"\n                  required\n                  min=\"1\"\n                  max=\"7\"\n                  pattern=\"^([1-7]){1}\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      (f.submitted && ejercicioSerieSemana.invalid) ||\n                      (ejercicioSerieSemana.touched &&\n                        !ejercicioSerieSemana.valid)\n                  }\"\n                />\n                <div\n                  *ngIf=\"\n                    (f.submitted && ejercicioSerieSemana.invalid) ||\n                    (ejercicioSerieSemana.touched &&\n                      !ejercicioSerieSemana.valid)\n                  \"\n                  class=\"invalid-feedback\"\n                >\n                  <div\n                    *ngIf=\"\n                      ejercicioSerieSemana.errors.required ||\n                      ejercicioSerieSemana.invalid\n                    \"\n                  >\n                    * Veces seleccionadas no válida\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-4\">\n                <label for=\"repeticiones\">(*) Repeticiones</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  id=\"repeticiones\"\n                  name=\"repeticiones\"\n                  #ejercicioSerieRepeticiones=\"ngModel\"\n                  [(ngModel)]=\"nuevoEjercicioSerie.repeticiones\"\n                  placeholder=\"Repeticiones del ejercicio\"\n                  required\n                  min=\"1\"\n                  max=\"999\"\n                  pattern=\"^([1-9]){1}\\d*\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                      (ejercicioSerieRepeticiones.touched &&\n                        !ejercicioSerieRepeticiones.valid)\n                  }\"\n                />\n                <div\n                  *ngIf=\"\n                    (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                    (ejercicioSerieRepeticiones.touched &&\n                      !ejercicioSerieRepeticiones.valid)\n                  \"\n                  class=\"invalid-feedback\"\n                >\n                  <div\n                    *ngIf=\"\n                      ejercicioSerieRepeticiones.errors.required ||\n                      ejercicioSerieRepeticiones.invalid\n                    \"\n                  >\n                    * Repeticiones no válidas\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-4\">\n                <label for=\"series\">(*) Series</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  id=\"series\"\n                  name=\"series\"\n                  #ejercicioSerieSeries=\"ngModel\"\n                  [(ngModel)]=\"nuevoEjercicioSerie.series\"\n                  placeholder=\"Series del ejercicio\"\n                  required\n                  min=\"1\"\n                  max=\"15\"\n                  pattern=\"^([1-9]){1}\\d*\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      (f.submitted && ejercicioSerieSeries.invalid) ||\n                      (ejercicioSerieSeries.touched &&\n                        !ejercicioSerieSeries.valid)\n                  }\"\n                />\n                <div\n                  *ngIf=\"\n                    (f.submitted && ejercicioSerieSeries.invalid) ||\n                    (ejercicioSerieSeries.touched &&\n                      !ejercicioSerieSeries.valid)\n                  \"\n                  class=\"invalid-feedback\"\n                >\n                  <div\n                    *ngIf=\"\n                      ejercicioSerieSeries.errors.required ||\n                      ejercicioSerieSeries.invalid\n                    \"\n                  >\n                    * Series seleccionadas no válida\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group col-md-6\">\n                <label for=\"tipoEjercicio\">(*)Tipo Ejercicio</label>\n                <select\n                  class=\"form-control\"\n                  name=\"tipoEjercicio\"\n                  id=\"tipoEjercicio\"\n                  #tipoEjercicioSerieEjercicio=\"ngModel\"\n                  [(ngModel)]=\"tipoEjercicioId\"\n                  required\n                  [ngClass]=\"{\n                    'is-invalid':\n                      (f.submitted && tipoEjercicioSerieEjercicio.invalid) ||\n                      (tipoEjercicioSerieEjercicio.touched &&\n                        !tipoEjercicioSerieEjercicio.valid)\n                  }\"\n                  [(ngModel)]=\"tipoEjerSelect\"\n                  (ngModelChange)=\"cargarEjercicios(this.tipoEjercicioId, 'no')\"\n                >\n                  <option value=\"\" selected>-- Elige una opción --</option>\n                  <option\n                    *ngFor=\"let tipoEjercicio of tiposEjercicio\"\n                    value=\"{{ tipoEjercicio.id }}\"\n                  >\n                    {{ tipoEjercicio.nombre }}\n                  </option>\n                </select>\n\n                <div\n                  *ngIf=\"\n                    (f.submitted && tipoEjercicioSerieEjercicio.invalid) ||\n                    (tipoEjercicioSerieEjercicio.touched &&\n                      !tipoEjercicioSerieEjercicio.valid)\n                  \"\n                  class=\"invalid-feedback\"\n                >\n                  <div\n                    *ngIf=\"\n                      tipoEjercicioSerieEjercicio.errors.required ||\n                      tipoEjercicioSerieEjercicio.invalid\n                    \"\n                  >\n                    * Seleccione un tipo ejercicio\n                  </div>\n                </div>\n              </div>\n\n              <div *ngIf=\"tipoEjercicioId != ''\" class=\"form-group col-md-6\">\n                <label for=\"ejercicio\">(*) Ejercicio</label>\n                <select\n                  class=\"form-control\"\n                  name=\"ejercicio\"\n                  id=\"ejercicio\"\n                  #ejercicioSerieEjercicio=\"ngModel\"\n                  [(ngModel)]=\"ejercicioId\"\n                  required\n                  [ngClass]=\"{\n                    'is-invalid':\n                      (f.submitted && ejercicioSerieEjercicio.invalid) ||\n                      (ejercicioSerieEjercicio.touched &&\n                        !ejercicioSerieEjercicio.valid)\n                  }\"\n                  [(ngModel)]=\"ejerSelect\"\n                >\n                  <option value=\"\" selected>-- Elige una opción --</option>\n                  <option\n                    *ngFor=\"let ejercicio of ejercicios\"\n                    value=\"{{ ejercicio.id }}\"\n                  >\n                    {{ ejercicio.nombre }}\n                  </option>\n                </select>\n\n                <div\n                  *ngIf=\"\n                    (f.submitted && ejercicioSerieEjercicio.invalid) ||\n                    (ejercicioSerieEjercicio.touched &&\n                      !ejercicioSerieEjercicio.valid)\n                  \"\n                  class=\"invalid-feedback\"\n                >\n                  <div\n                    *ngIf=\"\n                      ejercicioSerieEjercicio.errors.required ||\n                      ejercicioSerieEjercicio.invalid\n                    \"\n                  >\n                    * Seleccione un ejercicio\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row justify-content-end m-4\">\n              <button (click)=\"abrirAniadirModal(false)\" class=\"btn btn-danger\">\n                Cancelar\n              </button>\n              <button type=\"submit\" class=\"btn btn-primary\">\n                <i class=\"icon-plus\"></i> Añadir\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"row input-group\">\n        <div class=\"col-sm-12 col-md-6\">\n          <h3 class=\"text-left\">Ejercicios Serie</h3>\n        </div>\n        <div class=\"col-sm-12 col-md-6 d-flex justify-content-end\">\n          <div class=\"form-outline\">\n            <label\n              >Día:\n              <input\n                [(ngModel)]=\"filterDia\"\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                placeholder=\"1 , 2 , 3 , 4 ...\"\n            /></label>\n            <label for=\"\">\n              <button\n                type=\"button\"\n                class=\"btn btn-primary mt-2\"\n                (click)=\"filtrarTablaES()\"\n              >\n                <i class=\"fas fa-search\"></i></button\n            ></label>\n\n            <button\n              style=\"height: 40px\"\n              (click)=\"quitarFiltroTablaES()\"\n              type=\"button\"\n              class=\"btn btn-secondary mt-2 ml-4\"\n            >\n              <i class=\"fas fa-sync text-light\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- parte listado ejercicios-->\n      <div class=\"card-text\">\n        <div class=\"card-text\">\n          <table\n            id=\"datatable\"\n            class=\"table table-bordered table-hover dataTable text-center\"\n            style=\"width: 100%\"\n            role=\"grid\"\n            aria-describedby=\"datatable_info\"\n          >\n            <thead>\n              <tr role=\"row\">\n                <th\n                  id=\"\"\n                  id=\"\"\n                  class=\"noExport sorting\"\n                  tabindex=\"0\"\n                  aria-controls=\"datatable\"\n                  rowspan=\"1\"\n                  colspan=\"1\"\n                  aria-label=\"Actions: activate to sort column ascending\"\n                  style=\"width: 54px\"\n                >\n                  Tipo ejercicio\n                </th>\n                <th\n                  id=\"\"\n                  id=\"\"\n                  class=\"noExport sorting\"\n                  tabindex=\"0\"\n                  aria-controls=\"datatable\"\n                  rowspan=\"1\"\n                  colspan=\"1\"\n                  aria-label=\"Actions: activate to sort column ascending\"\n                  style=\"width: 54px\"\n                >\n                  Nombre ejercicio\n                </th>\n                <th\n                  id=\"\"\n                  id=\"\"\n                  class=\"noExport sorting\"\n                  tabindex=\"0\"\n                  aria-controls=\"datatable\"\n                  rowspan=\"1\"\n                  colspan=\"1\"\n                  aria-label=\"Actions: activate to sort column ascending\"\n                  style=\"width: 54px\"\n                >\n                  Repeticiones\n                </th>\n                <th\n                  id=\"\"\n                  id=\"\"\n                  class=\"noExport sorting\"\n                  tabindex=\"0\"\n                  aria-controls=\"datatable\"\n                  rowspan=\"1\"\n                  colspan=\"1\"\n                  aria-label=\"Actions: activate to sort column ascending\"\n                  style=\"width: 54px\"\n                >\n                  Series\n                </th>\n\n                <th\n                  id=\"\"\n                  id=\"\"\n                  class=\"noExport sorting\"\n                  tabindex=\"0\"\n                  aria-controls=\"datatable\"\n                  rowspan=\"1\"\n                  colspan=\"1\"\n                  aria-label=\"Actions: activate to sort column ascending\"\n                  style=\"width: 54px\"\n                >\n                  Dia número semana\n                </th>\n                <th\n                  id=\"\"\n                  id=\"\"\n                  class=\"noExport sorting\"\n                  tabindex=\"0\"\n                  aria-controls=\"datatable\"\n                  rowspan=\"1\"\n                  colspan=\"1\"\n                  aria-label=\"Actions: activate to sort column ascending\"\n                  style=\"width: 54px\"\n                >\n                  Acciones\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                *ngFor=\"let ejercicio of ejerciciosSerieTablaDetalle\"\n                class=\"text-center\"\n              >\n                <td>{{ ejercicio.ejercicio.tipoEjercicio.nombre }}</td>\n                <td>{{ ejercicio.ejercicio.nombre }}</td>\n                <td>{{ ejercicio.repeticiones }}</td>\n                <td>{{ ejercicio.series }}</td>\n                <td>{{ ejercicio.porSemana }}</td>\n                <td>\n                  <a\n                    class=\"ml-2\"\n                    data-toggle=\"tooltip\"\n                    data-original-title=\"Edit\"\n                    (click)=\"\n                      modalUpdateEjercicioSerie(updateES, this.ejercicio)\n                    \"\n                    ><i class=\"icon-edit\"></i\n                  ></a>\n                  <a\n                    class=\"ml-2\"\n                    data-toggle=\"tooltip\"\n                    data-original-title=\"Delete\"\n                    (click)=\"\n                      openModalDeleteEjerSerie(\n                        confirmDeleteEjerSerie,\n                        this.ejercicio\n                      )\n                    \"\n                    ><i class=\"icon-trash-2\"></i\n                  ></a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-danger\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cerrar\n      </button>\n    </div>\n  </div>\n</ng-template>\n<!-- ======================================= MODAL DELETE EJERCICIO SERIE==============================  -->\n<!-- ======================================= MODAL DELETE EJERCICIO SERIE==============================  -->\n<!-- ======================================= MODAL DELETE EJERCICIO SERIE==============================  -->\n<ng-template #confirmDeleteEjerSerie let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¿Seguro que quieres borrar la serie ejercicio\n        <span class=\"text-danger\"\n          >{{ ejercicioAux.ejercicio.nombre }} ({{ ejercicioAux.id }})?</span\n        >\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancelar\n    </button>\n    <button\n      (click)=\"deleteEjercicioSerie()\"\n      type=\"button\"\n      class=\"btn btn-primary\"\n    >\n      Borrar\n    </button>\n  </div>\n</ng-template>\n\n<!-- ======================================= MODAL ADD EJERCICIO==============================  -->\n<!-- ======================================= MODAL ADD EJERCICIO==============================  -->\n<!-- ======================================= MODAL ADD EJERCICIO==============================  -->\n<ng-template #createEjer let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¡Ejercicio Serie\n        <span class=\"text-danger\"\n          >{{ nuevoEjercicioSerie.ejercicio.nombre }}-{{\n            nuevoEjercicioSerie.series\n          }}x{{ nuevoEjercicioSerie.repeticiones }}\n        </span>\n        registrado!\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss(); closeUpdateModalResult()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #errorModalEjer let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{ textoModal }}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n\n<!-- ======================================= MODAL UPDATE EJERCICIO==============================  -->\n<!-- ======================================= MODAL UPDATE EJERCICIO==============================  -->\n<!-- ======================================= MODAL UPDATE EJERCICIO==============================  -->\n<ng-template #updateES let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Ejercicio</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"ejercicioSerieUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && updateEjercicio(updateModalEjer)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"semana\">(*) Día número Semana</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"semana\"\n              name=\"semana\"\n              #ejercicioSerieSemana=\"ngModel\"\n              [(ngModel)]=\"ejercicioSerieUpdate.porSemana\"\n              placeholder=\"Veces a realizar por semana\"\n              required\n              min=\"1\"\n              max=\"7\"\n              pattern=\"^([1-7]){1}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieSemana.invalid) ||\n                  (ejercicioSerieSemana.touched && !ejercicioSerieSemana.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieSemana.invalid) ||\n                (ejercicioSerieSemana.touched && !ejercicioSerieSemana.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieSemana.errors.required ||\n                  ejercicioSerieSemana.invalid\n                \"\n              >\n                * Veces seleccionadas no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"repeticiones\">(*) Repeticiones</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"repeticiones\"\n              name=\"repeticiones\"\n              #ejercicioSerieRepeticiones=\"ngModel\"\n              [(ngModel)]=\"ejercicioSerieUpdate.repeticiones\"\n              placeholder=\"Series del ejercicio\"\n              required\n              min=\"1\"\n              max=\"999\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                  (ejercicioSerieRepeticiones.touched &&\n                    !ejercicioSerieRepeticiones.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieRepeticiones.invalid) ||\n                (ejercicioSerieRepeticiones.touched &&\n                  !ejercicioSerieRepeticiones.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieRepeticiones.errors.required ||\n                  ejercicioSerieRepeticiones.invalid\n                \"\n              >\n                * Repeticiones no válidas\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"series\">(*) Series</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"series\"\n              name=\"series\"\n              #ejercicioSerieSeries=\"ngModel\"\n              [(ngModel)]=\"ejercicioSerieUpdate.series\"\n              placeholder=\"Series del ejercicio\"\n              required\n              min=\"1\"\n              max=\"15\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieSeries.invalid) ||\n                  (ejercicioSerieSeries.touched && !ejercicioSerieSeries.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieSeries.invalid) ||\n                (ejercicioSerieSeries.touched && !ejercicioSerieSeries.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieSeries.errors.required ||\n                  ejercicioSerieSeries.invalid\n                \"\n              >\n                * Series seleccionadas no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"tipoEjercicio\">(*)Tipo Ejercicio</label>\n            <select\n              class=\"form-control\"\n              name=\"tipoEjercicio\"\n              id=\"tipoEjercicio\"\n              #tipoEjercicioSerieEjercicio=\"ngModel\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && tipoEjercicioSerieEjercicio.invalid) ||\n                  (tipoEjercicioSerieEjercicio.touched &&\n                    !tipoEjercicioSerieEjercicio.valid)\n              }\"\n              [(ngModel)]=\"ejercicioSerieUpdate.ejercicio.tipoEjercicio.id\"\n              (ngModelChange)=\"\n                cargarEjercicios(\n                  this.ejercicioSerieUpdate.ejercicio.tipoEjercicio.id,\n                  'si'\n                )\n              \"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let tipoEjercicio of tiposEjercicio\"\n                value=\"{{ tipoEjercicio.id }}\"\n              >\n                {{ tipoEjercicio.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && tipoEjercicioSerieEjercicio.invalid) ||\n                (tipoEjercicioSerieEjercicio.touched &&\n                  !tipoEjercicioSerieEjercicio.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  tipoEjercicioSerieEjercicio.errors.required ||\n                  tipoEjercicioSerieEjercicio.invalid\n                \"\n              >\n                * Seleccione un tipo ejercicio\n              </div>\n            </div>\n          </div>\n\n          <div\n            *ngIf=\"ejercicioSerieUpdate.ejercicio.tipoEjercicio.id != ''\"\n            class=\"form-group col-md-6\"\n          >\n            <label for=\"ejercicio\">(*) Ejercicio</label>\n            <select\n              class=\"form-control\"\n              name=\"ejercicio\"\n              id=\"ejercicio\"\n              #ejercicioSerieEjercicio=\"ngModel\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioSerieEjercicio.invalid) ||\n                  (ejercicioSerieEjercicio.touched &&\n                    !ejercicioSerieEjercicio.valid)\n              }\"\n              [(ngModel)]=\"ejercicioSerieUpdate.ejercicio.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let ejercicio of ejercicios\"\n                value=\"{{ ejercicio.id }}\"\n              >\n                {{ ejercicio.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioSerieEjercicio.invalid) ||\n                (ejercicioSerieEjercicio.touched &&\n                  !ejercicioSerieEjercicio.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioSerieEjercicio.errors.required ||\n                  ejercicioSerieEjercicio.invalid\n                \"\n              >\n                * Seleccione un ejercicio\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalEjer let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{ textoModal }}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"closeUpdateModalResult()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TablaEjercicio } from \"@modelsRest/TablaEjercicio\";\nimport { EjercicioSerieServiceService } from \"@servicesRest/ejercicio_serie/ejercicio-serie-service.service\";\nimport { TablaEjercicioServiceService } from \"@servicesRest/tabla_ejercicio/tabla-ejercicio-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { EjercicioSerie } from \"@modelsRest/EjercicioSerie\";\nimport { EjercicioServiceService } from \"@servicesRest/ejercicio/ejercicio-service.service\";\nimport { TipoEjercicio } from \"@modelsRest/TipoEjercicio\";\nimport { TipoEjercicioServiceService } from \"@servicesRest/tipo_ejercicio/tipo-ejercicio-service.service\";\nimport { Ejercicio } from \"@modelsRest/Ejercicio\";\nimport { HelperService } from \"@core/services/helper.service\";\nimport { DatePipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-tabla-ejercicio-list\",\n  templateUrl: \"./tabla-ejercicio-list.component.html\",\n  styleUrls: [\"./tabla-ejercicio-list.component.css\"],\n})\nexport class TablaEjercicioListComponent implements OnInit {\n  //parte list\n  mostrarTablaEjercicioAdd: boolean = false;\n  tablasEjercicio: TablaEjercicio[];\n\n  //parte update tablaEjercicio\n  tablaUpdate: any;\n  monitores: Usuario[];\n  suscriptores: Usuario[];\n  closeResult = \"\";\n  inicio = new Date();\n\n  //parte Detalle tabla\n  tablaDetalle: any;\n  ejerciciosSerieTablaDetalle: EjercicioSerie[];\n\n  //abrir añadir ejercicioSerieModal\n  modalAniadir = false;\n  tiposEjercicio: TipoEjercicio[];\n  ejerciciosSerie: EjercicioSerie[];\n  ejercicios: Ejercicio[];\n  nuevoEjercicioSerie: any;\n  ejercicioId: any;\n  tipoEjerSelect = \"\";\n  ejerSelect = \"\";\n  content: any;\n  tipoEjercicioId: any;\n\n  //parte update EjercicioSerie\n  ejercicioSerieUpdate: any;\n\n  //confirm delete\n  tablaAux: any;\n  //confirm delete ejer serie\n  ejercicioAux: any;\n\n  //modales\n  textoModal: string;\n\n  //filtros tabla ejer\n  filterUser: string;\n  mainTablaTablaEjercicios: TablaEjercicio[];\n  filterTabla: TablaEjercicio[];\n\n  //filtros ejer serie\n  filterDia: number;\n  mainTablaEjerciciosSerie: EjercicioSerie[];\n  filterTablaES: EjercicioSerie[];\n\n  constructor(\n    private _service: TablaEjercicioServiceService,\n    private _serviceEjercicio: EjercicioServiceService,\n    private _serviceTipoEjercicio: TipoEjercicioServiceService,\n    private _serviceEjerciciosSerie: EjercicioSerieServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService,\n    private datePipe: DatePipe\n  ) {\n    this.tablaUpdate = {};\n    this.tablaDetalle = {};\n    this.nuevoEjercicioSerie = {};\n    this.ejercicioSerieUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n    document.getElementById(\"minus\").hidden = true;\n\n    this._service.getTablasEjercicios().subscribe((data) => {\n      this.tablasEjercicio = data;\n      this.mainTablaTablaEjercicios = data;\n    });\n\n    this._serviceUsuario.getUsuariosByRol(3).subscribe((data) => {\n      this.suscriptores = data;\n    });\n    this._serviceUsuario.getUsuariosByRol(2).subscribe((data) => {\n      this.monitores = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteTablaEjercicio(this.tablaAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update() {\n    this._service.updateTablaEjercicio(this.tablaUpdate).subscribe((data) => {\n      alert(\"Tabla Actualizada!\");\n      this.modalService.dismissAll();\n    });\n    window.location.reload();\n  }\n\n  habilitarTablaEjercicio() {\n    this.mostrarTablaEjercicioAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarTablaEjercicio() {\n    this.mostrarTablaEjercicioAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  //desplegar añadir ejercicios en modal\n  abrirAniadirModal(info) {\n    this.tipoEjerSelect = \"\";\n    this.modalAniadir = info;\n  }\n\n  //cargar ejercicios para añadir desde modal\n  cargarEjercicios(id, param) {\n    this._serviceEjercicio\n      .getEjerciciosPorTipoEjercicioId(id)\n      .subscribe((data) => {\n        this.ejercicios = data;\n        console.log(this.ejercicios);\n        this.ejerSelect = \"\";\n        if (param == \"si\") {\n          this.ejercicioSerieUpdate.ejercicio.id = \"\";\n        }\n      });\n  }\n\n  //id para obtener el ejercicio seleccionado\n  obtenerEjercicioParaCreacionPorModal() {\n    return this._serviceEjercicio\n      .getEjercicio(this.ejercicioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevoEjercicioSerie.ejercicio = data;\n      });\n  }\n\n  //añadir ejercicio serie desde modal\n  aniadirEjercicioSerie(detalle, tablaDetalle, createEjer, errorModalEjer) {\n    this.obtenerEjercicioParaCreacionPorModal().then(() => {\n      this.nuevoEjercicioSerie.tablaEjercicio = tablaDetalle;\n      this._serviceEjerciciosSerie\n        .createEjercicioSerie(this.nuevoEjercicioSerie)\n        .subscribe(\n          (data) => {\n            this.modalService.open(createEjer, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          },\n          (err) => {\n            this.textoModal = \"¡Hubo un error!\";\n            this.modalService.open(errorModalEjer, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n    });\n  }\n\n  closeUpdateModalResult() {\n    this.modalService.dismissAll();\n    this.modalAniadir = false;\n    this.openDetalleTabla(this.content, this.tablaDetalle);\n    this.nuevoEjercicioSerie = {};\n    this.ejerSelect = \"\";\n  }\n\n  modalUpdateEjercicioSerie(updateES, ejercicioSerie) {\n    this.ejercicioSerieUpdate = ejercicioSerie;\n    this.cargarEjercicios(\n      this.ejercicioSerieUpdate.ejercicio.tipoEjercicio.id,\n      \"no\"\n    );\n\n    this.modalService\n      .open(updateES, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"lg\",\n      })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {}\n      );\n  }\n\n  deleteEjercicioSerie() {\n    console.log(this.ejercicioAux);\n    this._serviceEjerciciosSerie\n      .deleteEjercicioSerie(this.ejercicioAux)\n      .subscribe((data) => {\n        this.modalService.dismissAll();\n        this.openDetalleTabla(this.content, this.tablaDetalle);\n      });\n  }\n\n  updateEjercicio(modal) {\n    this._serviceEjerciciosSerie\n      .updateEjercicioSerie(this.ejercicioSerieUpdate)\n      .subscribe((data) => {\n        this.textoModal = \"¡Ejercicio actualizado!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        }),\n          (err) => {\n            this.textoModal = \"¡Error al actualizar!\";\n            this.modalService.open(modal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          };\n      });\n  }\n\n  //modal detalle tabla\n  openDetalleTabla(detalle, tabla: TablaEjercicio) {\n    this.tipoEjercicioId = \"\";\n    this.content = detalle;\n    this.tablaDetalle = tabla;\n    this._serviceEjercicio.getEjercicios().subscribe((data) => {\n      this.tiposEjercicio = data;\n    });\n\n    this._serviceTipoEjercicio.getTipoEjercicios().subscribe((data) => {\n      this.tiposEjercicio = data;\n    });\n\n    this._serviceEjerciciosSerie\n      .getEjerciciosPorTablaId(tabla.id)\n      .subscribe((data) => {\n        this.ejerciciosSerieTablaDetalle = data;\n        this.mainTablaEjerciciosSerie = data;\n      });\n    this.modalService\n      .open(detalle, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"xl\",\n      })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {}\n      );\n  }\n\n  //modal update tabla\n  open(content, tabla: TablaEjercicio) {\n    this._service.getTablaEjercicio(tabla.id).subscribe((data) => {\n      this.tablaUpdate = data;\n      this.tablaUpdate.fechaInicio = this.datePipe.transform(\n        this.tablaUpdate.fechaInicio,\n        \"yyyy-MM-dd\" /*'dd-MM-yyyy'*/\n      );\n      this.tablaUpdate.fechaFin = this.datePipe.transform(\n        this.tablaUpdate.fechaFin,\n        \"yyyy-MM-dd\" /*'dd-MM-yyyy'*/\n      );\n      this.inicio = this.tablaUpdate.fechaInicio;\n    });\n    this.modalService\n      .open(content, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"xl\",\n      })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {}\n      );\n  }\n\n  //modal coinfirm delete\n  openModalDelete(confirmDelete, tabla: TablaEjercicio) {\n    this.tablaAux = tabla;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n  //modal coinfirm delete ejerSerie\n  openModalDeleteEjerSerie(confirmDeleteEjerSerie, ejercicio: EjercicioSerie) {\n    this.ejercicioAux = ejercicio;\n    this.modalService\n      .open(confirmDeleteEjerSerie, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  filtrarTabla() {\n    this.filterTabla = [];\n    \n    for (let tabla of this.mainTablaTablaEjercicios) {\n      if (\n        tabla.monitor.nombre.toLocaleLowerCase() ==\n          this.filterUser.toLocaleLowerCase() ||\n        tabla.suscriptor.nombre.toLocaleLowerCase() ==\n          this.filterUser.toLocaleLowerCase()\n      ) {\n        this.filterTabla.push(tabla);\n      }\n    }\n\n    if (this.filterTabla.length > 0) {\n      this.tablasEjercicio = this.filterTabla;\n    } else {\n      this.tablasEjercicio = this.mainTablaTablaEjercicios;\n    }\n  }\n\n  filtrarTablaES() {\n    this.filterTablaES = [];\n    //this.ejerciciosSerieTablaDetalle = data;\n    for (let ejercicioSerie of this.mainTablaEjerciciosSerie) {\n      if (ejercicioSerie.porSemana == this.filterDia) {\n        this.filterTablaES.push(ejercicioSerie);\n      }\n    }\n\n    if (this.filterTablaES.length > 0) {\n      this.ejerciciosSerieTablaDetalle = this.filterTablaES;\n    } else {\n      this.ejerciciosSerieTablaDetalle = this.mainTablaEjerciciosSerie;\n    }\n  }\n\n  quitarFiltroTabla() {\n    this.tablasEjercicio = this.mainTablaTablaEjercicios;\n  }\n  quitarFiltroTablaES() {\n    this.ejerciciosSerieTablaDetalle = this.mainTablaEjerciciosSerie;\n  }\n}\n","<h3>Nuevo Tabla de Ejercicio</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addTablaEjercicio(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-2\">\n        <label for=\"tablaActiva\">(*) ¿Tabla Activa?</label>\n        <select\n          class=\"form-control\"\n          name=\"tablaActiva\"\n          id=\"tablaActiva\"\n          #tablaEjercicioActiva=\"ngModel\"\n          [(ngModel)]=\"nuevaTablaEjercicio.activa\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && tablaEjercicioActiva.invalid) ||\n              (tablaEjercicioActiva.touched && !tablaEjercicioActiva.valid)\n          }\"\n          [(ngModel)]=\"tablaAcivaSelect\"\n        >\n          <option value=\"\" selected>- Elige una opción -</option>\n          <option value=\"true\">Sí</option>\n          <option value=\"false\">No</option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && tablaEjercicioActiva.invalid) ||\n            (tablaEjercicioActiva.touched && !tablaEjercicioActiva.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              tablaEjercicioActiva.errors.required ||\n              tablaEjercicioActiva.invalid\n            \"\n          >\n            * opción no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-5\">\n        <label for=\"fechaInicio\">(*) Fecha de Inicio</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          id=\"fechaInicio\"\n          name=\"fechaInicio\"\n          #tablaEjercicioFechaInicio=\"ngModel\"\n          [(ngModel)]=\"nuevaTablaEjercicio.fechaInicio\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required=\"\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && tablaEjercicioFechaInicio.invalid) ||\n              (tablaEjercicioFechaInicio.touched &&\n                !tablaEjercicioFechaInicio.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && tablaEjercicioFechaInicio.invalid) ||\n            (tablaEjercicioFechaInicio.touched &&\n              !tablaEjercicioFechaInicio.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              tablaEjercicioFechaInicio.errors.required ||\n              tablaEjercicioFechaInicio.invalid\n            \"\n          >\n            * Fecha no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-5\">\n        <label for=\"fechaFin\">(*) Fecha de Fin</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          id=\"fechaFin\"\n          name=\"fechaFin\"\n          #tablaEjercicioFechaFin=\"ngModel\"\n          [(ngModel)]=\"nuevaTablaEjercicio.fechaFin\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required=\"\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && tablaEjercicioFechaFin.invalid) ||\n              (tablaEjercicioFechaFin.touched && !tablaEjercicioFechaFin.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && tablaEjercicioFechaFin.invalid) ||\n            (tablaEjercicioFechaFin.touched && !tablaEjercicioFechaFin.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              tablaEjercicioFechaFin.errors.required ||\n              tablaEjercicioFechaFin.invalid\n            \"\n          >\n            * Fecha no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"monitor\">(*) Monitor</label>\n        <select\n          class=\"form-control\"\n          name=\"monitor\"\n          id=\"monitor\"\n          #monitorTabla=\"ngModel\"\n          [(ngModel)]=\"monitorId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && monitorTabla.invalid) ||\n              (monitorTabla.touched && !monitorTabla.valid)\n          }\"\n          [(ngModel)]=\"slotMonitorSelect\"\n        >\n          <option value=\"\" selected>- Elige una opción -</option>\n          <!--p> aqui se haria un if que sacase todos los que tuvieran usuario.rol == monitor </p-->\n          <option *ngFor=\"let monitor of monitores\" value=\"{{ monitor.id }}\">\n            {{ monitor.nombre }}\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && monitorTabla.invalid) ||\n            (monitorTabla.touched && !monitorTabla.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"monitorTabla.errors.required || monitorTabla.invalid\">\n            * Monitor no válido\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"sala\">(*) Suscriptor</label>\n        <select\n          class=\"form-control\"\n          name=\"sala\"\n          id=\"sala\"\n          #suscriptorTabla=\"ngModel\"\n          [(ngModel)]=\"suscriptorId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && suscriptorTabla.invalid) ||\n              (suscriptorTabla.touched && !suscriptorTabla.valid)\n          }\"\n          [(ngModel)]=\"suscriptorSelect\"\n        >\n          <option value=\"\" selected>- Elige una opción -</option>\n          <!--p> aqui se haria un if que sacase todos los que tuvieran usuario.rol == usuario </p-->\n          <option\n            *ngFor=\"let suscriptor of suscriptores\"\n            value=\"{{ suscriptor.id }}\"\n          >\n            {{ suscriptor.nombre }} -\n            {{ suscriptor.numeroTarjeta == null ? \"tarjetaNull\" : \"\" }}\n          </option>\n        </select>\n        <div\n          *ngIf=\"\n            (f.submitted && suscriptorTabla.invalid) ||\n            (suscriptorTabla.touched && !suscriptorTabla.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"suscriptorTabla.errors.required || suscriptorTabla.invalid\"\n          >\n            * Usuario no válido\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>Tabla del usuario <span class=\"text-danger\">{{nuevaTablaEjercicio.suscriptor.nombre}} ({{nuevaTablaEjercicio.suscriptor.id}})</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TablaEjercicioServiceService } from \"@servicesRest/tabla_ejercicio/tabla-ejercicio-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\n\n@Component({\n  selector: \"app-tabla-ejercicio-add\",\n  templateUrl: \"./tabla-ejercicio-add.component.html\",\n  styleUrls: [\"./tabla-ejercicio-add.component.css\"],\n})\nexport class TablaEjercicioAddComponent implements OnInit {\n  nuevaTablaEjercicio: any;\n  monitorId: number;\n  suscriptorId: number;\n  monitores: Usuario[];\n  suscriptores: Usuario[];\n\n  tablaAcivaSelect = \"\";\n  slotMonitorSelect = \"\";\n  suscriptorSelect = \"\";\n  constructor(\n    private _serviceUsuario: UsuarioServiceService,\n    private _service: TablaEjercicioServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaTablaEjercicio = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceUsuario.getUsuariosByRol(3).subscribe((data) => {\n      this.suscriptores = data;\n    });\n    this._serviceUsuario.getUsuariosByRol(2).subscribe((data) => {\n      this.monitores = data;\n    });\n  }\n\n  obtenerSuscriptor() {\n    return this._serviceUsuario\n      .getUsuario(this.suscriptorId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaTablaEjercicio.suscriptor = data;\n      });\n  }\n\n  obtenerMonitor() {\n    return this._serviceUsuario\n      .getUsuario(this.monitorId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaTablaEjercicio.monitor = data;\n      });\n  }\n\n  addTablaEjercicio(create, errorModal) {\n    this.obtenerSuscriptor()\n      .then(() => this.obtenerMonitor())\n      .then(() => {\n        this._service.createTablaEjercicio(this.nuevaTablaEjercicio).subscribe(\n          (data) => {\n            this.modalService.open(create, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n            setTimeout(function () {\n              window.location.reload();\n            }, 3000);\n          },\n          (err) => {\n            this.modalService.open(errorModal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n      });\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","<h3>Nuevo Rol</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addRol(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">Nombre Rol</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"nombre\"\n          #nombreRol=\"ngModel\"\n          [(ngModel)]=\"nuevoRol.nombre\"\n          placeholder=\"Nombre de Rol\"\n          required\n          pattern=\"^([a-zA-ZáéíóúüÁÉÍÓÚÜ]){1}([a-zA-Z_ áéíóúüÁÉÍÓÚÜ]){2,20}\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && nombreRol.invalid) ||\n              (nombreRol.touched && !nombreRol.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && nombreRol.invalid) ||\n            (nombreRol.touched && !nombreRol.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div *ngIf=\"nombreRol.errors.required || nombreRol.invalid\">\n            * Nombre no válido\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>Rol <span class=\"text-danger\">{{nuevoRol.nombre}}</span> registrado!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { RolServiceService } from \"@servicesRest/rol/rol-service.service\";\n\n@Component({\n  selector: \"app-rol-add\",\n  templateUrl: \"./rol-add.component.html\",\n  styleUrls: [\"./rol-add.component.css\"],\n})\nexport class RolAddComponent implements OnInit {\n  nuevoRol: any;\n  constructor(\n    private _service: RolServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevoRol = {\n      nombre: \"\",\n    };\n  }\n\n  ngOnInit(): void {}\n\n  addRol(create, errorModal) {\n    this._service.createRol(this.nuevoRol).subscribe(\n      (data) => {\n        this.modalService.open(create, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 3000);\n      },\n      (err) => {\n        this.modalService.open(errorModal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n  \n  refresh(){\n    window.location.reload();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Factura } from \"@modelsRest/Factura\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { FacturaServiceService } from \"@servicesRest/factura/factura-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-factura-list\",\n  templateUrl: \"./factura-list.component.html\",\n  styleUrls: [\"./factura-list.component.css\"],\n})\nexport class FacturaListComponent implements OnInit {\n  mostrarFacturaAdd: boolean = false;\n  facturas: Factura[];\n\n  //update\n  facturaUpdate: any;\n  usuarios: Usuario[];\n  closeResult = \"\";\n\n  constructor(\n    private _service: FacturaServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {\n    this.facturaUpdate = {};\n  }\n\n  ngOnInit(): void {\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getFacturas().subscribe((data) => {\n      this.facturas = data;\n    });\n\n    this._serviceUsuario.getUsuarios().subscribe(data=>{\n      this.usuarios = data;\n    });\n  }\n\n  delete(factura: Factura) {\n    this._service.deleteFactura(factura).subscribe((data) => {\n      this.facturas = this.facturas.filter((p) => p != factura);\n      alert(\"Factura eliminada\");\n    });\n  }\n\n  update(){\n\n  }\n\n  habilitarFactura() {\n    this.mostrarFacturaAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n\n  deshabilitarFactura() {\n    this.mostrarFacturaAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, factura: Factura) {\n    this._service.getFactura(factura.id).subscribe((data) => {\n      this.facturaUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n","<div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    (click)=\"habilitarFactura()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Factura\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarFactura()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Factura\n  </button>\n</div>\n<div *ngIf=\"mostrarFacturaAdd == true\">\n  <app-factura-add></app-factura-add>\n</div>\n\n<h3 class=\"text-center\">Facturas</h3>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Fecha\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Número\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Pagado\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Usuario\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let factura of facturas\" class=\"text-center\">\n        <td>{{ factura.fecha | date: \"MM/dd/yyyy\" }}</td>\n        <td>{{ factura.numero }}</td>\n        <td>{{ factura.pagado == true ? \"Pagado\" : \"Pendiente\" }}</td>\n        <td>({{ factura.usuario.id }}) {{ factura.usuario.nombre }}</td>\n        <td>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Edit\"\n          (click)=\"open(content,factura)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"delete(factura)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Settings\"\n            ><i class=\"icon-settings\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Fecha</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Número</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Pagado</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Usuario</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Factura</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"facturaUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update()\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Fecha Factura</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              name=\"fecha\"\n              #facturaFecha=\"ngModel\"\n              [(ngModel)]=\"facturaUpdate.fecha\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && facturaFecha.invalid) ||\n                  (facturaFecha.touched && !facturaFecha.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && facturaFecha.invalid) ||\n                (facturaFecha.touched && !facturaFecha.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"facturaFecha.errors.required || facturaFecha.invalid\">\n                * Fecha no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"numero\">(*) Número Factura </label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"numero\"\n              #facturaNumero=\"ngModel\"\n              [(ngModel)]=\"facturaUpdate.numero\"\n              placeholder=\"Nombre Tipo ejercicio\"\n              required\n              min=\"1\"\n              pattern=\"^([1-9]){1}\\d*\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && facturaNumero.invalid) ||\n                  (facturaNumero.touched && !facturaNumero.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && facturaNumero.invalid) ||\n                (facturaNumero.touched && !facturaNumero.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"facturaNumero.errors.required || facturaNumero.invalid\"\n              >\n                * Número no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"pagado\">(*) Pagado/Pendiente</label>\n            <select\n              class=\"form-control\"\n              name=\"pagado\"\n              id=\"pagado\"\n              #facturaPagado=\"ngModel\"\n              [(ngModel)]=\"facturaUpdate.pagado\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && facturaPagado.invalid) ||\n                  (facturaPagado.touched && !facturaPagado.valid)\n              }\"\n              [(ngModel)]=\"facturaUpdate.pagado\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option value=\"true\">Pagado</option>\n              <option value=\"false\">Pendiente</option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && facturaPagado.invalid) ||\n                (facturaPagado.touched && !facturaPagado.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"facturaPagado.errors.required || facturaPagado.invalid\"\n              >\n                * Opción no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"usuario\">(*) Usuario Adj.</label>\n            <select\n              class=\"form-control\"\n              name=\"usuario\"\n              id=\"usuario\"\n              #facturaUsuario=\"ngModel\"\n              [(ngModel)]=\"usuarioId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && facturaUsuario.invalid) ||\n                  (facturaUsuario.touched && !facturaUsuario.valid)\n              }\"\n              [(ngModel)]=\"facturaUpdate.usuario.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n                {{ usuario.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && facturaUsuario.invalid) ||\n                (facturaUsuario.touched && !facturaUsuario.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"facturaUsuario.errors.required || facturaUsuario.invalid\"\n              >\n                * Seleccione un usuario\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Reserva } from '@modelsRest/Reserva';\nimport {Observable} from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservaServiceService {\n\n  constructor(private _http:HttpClient) { }\n\n  url = appSettings.apiUrl + \"reserva\";\n  \n\n  getreservas():Observable<any>{\n    return this._http.get(this.url);\n  }\n\n  getReserva(reserva:number):Observable<any>{\n    return this._http.get<Reserva>(this.url+\"/\"+reserva);\n  }\n\n  getReservaBySlotIdAndUsuarioId(slotID:number, userID:number):Observable<any>{\n    return this._http.get<Reserva>(this.url+\"/slot/\"+slotID+'/usuario/'+userID);\n  }\n\n  getReservasBySlotId(slotID:number):Observable<any>{\n    return this._http.get<Reserva>(this.url+\"/slot/\"+slotID);\n  }\n\n  getReservasByUsuarioId(userID:number):Observable<any>{\n    return this._http.get<Reserva>(this.url+\"/usuario/\"+userID);\n  }\n\n  deleteReserva(reserva:Reserva){\n    return this._http.delete<Reserva>(this.url+\"/\"+reserva.id);\n  }\n\n  createReserva(reserva:Reserva):Observable<any>{\n    return this._http.post<Reserva>(this.url,reserva);\n  }\n\n  updateReserva(reserva: Reserva): Observable<any> {\n    return this._http.put<Reserva>(this.url + \"/\" + reserva.id, reserva);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@shared/shared.module';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { authInterceptorProviders } from './helpers/auth.interceptor';\n\n@NgModule({\n  declarations: [HeaderComponent, FooterComponent, TopbarComponent],\n  imports: [\n    SharedModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [authInterceptorProviders],\n  exports: [HeaderComponent,FooterComponent]\n})\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from '@core/services/helper.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class PageSignupComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor(\n    private _helperService: HelperService,\n  ) {\n    this.pageTitle = 'Nueva Suscripción';\n    this.pageDesc = 'Introduce tus datos';\n    this.pageImg = 'registro.jpg';\n  }\n\n  ngOnInit(): void {\n    this._helperService.checkIsLoginAndRedirectToCuenta();\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<registro-formulario></registro-formulario>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home-thegym',\n  templateUrl: './thegym.component.html',\n  styleUrls: ['./thegym.component.css']\n})\nexport class HomeTheGymComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- TRAINING STUDIO -->\n<section class=\"p-t-150 p-b-150\" data-bg-parallax=\"assets/fitness/images/parallax/goals.jpg\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 text-light\">\n                <div class=\"text-medium font-weight-600\">El Gimnasio</div>\n                <p class=\"lead\">\n                    <b>Nuestro objetivo es que logres el tuyo</b>. <br/><br/>Para ello, ponemos a tu disposición un sistema de entrenamiento que se adapta a ti, con un equipo de profesionales que te ayuda a optimizar tus sesiones para que alcances tus objetivos de una forma rápida y divertida. FIL's Center Gym, tu gimnasio Premium a precio Low Cost.\n                </p>\n            </div>\n\n            <div class=\"col-lg-8\">\n                <div class=\"carousel\" data-items=\"1\" data-lightbox=\"gallery\" data-autoplay=\"true\" data-autoplay=\"3000\" data-loop=\"true\" data-dots=\"false\">\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_13.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_13.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_12.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_12.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_1.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_1.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_2.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_2.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_3.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_3.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_4.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_4.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_5.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_5.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_6.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_6.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_7.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_7.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_8.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_8.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_9.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_9.jpg\" alt=\"\"></a>\n                    <a data-lightbox=\"gallery-image\" href=\"assets/fitness/images/el_gym/el_gym_11.jpg\" title=\"Fil's Center Gym\"><img src=\"assets/fitness/images/el_gym/bw_el_gym_11.jpg\" alt=\"\"></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- end: TRAINING STUDIO -->\n","import { NgModule } from '@angular/core';\n\nimport { PageRecoverComponent } from './pages/recover/recover.component';\nimport { FormularioComponent } from './components/formulario/formulario.component';\n\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  declarations: [PageRecoverComponent, FormularioComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageRecoverComponent]\n})\nexport class RecoverModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'galeria-portfolio-item',\n  templateUrl: './portfolio-item.component.html',\n  styleUrls: ['./portfolio-item.component.css']\n})\nexport class PortfolioItemComponent implements OnInit {\n\n  @Input() itemImage: string;\n  @Input() itemTitle: string;\n  @Input() itemTxt: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- portfolio item -->\n<div class=\"portfolio-item img-zoom\">\n    <div class=\"portfolio-item-wrap\">\n        <div class=\"portfolio-image\">\n            <a href=\"javascript:;\"><img [attr.src]=\"itemImage\" [attr.alt]=\"itemTitle\"></a>\n        </div>\n        <div class=\"portfolio-description\">\n            <a [attr.title]=\"itemTitle\" data-lightbox=\"gallery-image\" [attr.href]=\"itemImage\" class=\"btn btn-light btn-rounded\">{{ itemTxt }}</a>\n        </div>\n    </div>\n</div>\n<!-- end: portfolio item -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'horario-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.css']\n})\nexport class TimelineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n<ul class=\"timeline\">\n  <li class=\"timeline-item\">\n    <div class=\"timeline-icon\">1</div>\n    <h4>How we started</h4>\n    <div class=\"timeline-item-date\">21 January, 2020</div>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n      scelerisque diam non nisi semper, et elementum lorem ornare. Maecenas\n      placerat facilisis mollis. Duis sagittis ligula in sodales vehicula....\n    </p>\n  </li>\n\n  <li class=\"timeline-item\">\n    <div class=\"timeline-icon\">2</div>\n    <h4>The Plan</h4>\n    <div class=\"timeline-item-date\">15 May, 2020</div>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n      scelerisque diam non nisi semper, et elementum lorem ornare. Maecenas\n      placerat facilisis mollis. Duis sagittis ligula in sodales vehicula....\n    </p>\n  </li>\n\n  <li class=\"timeline-item\">\n    <div class=\"timeline-icon\">3</div>\n    <h4>Research</h4>\n    <div class=\"timeline-item-date\">18 December, 2020</div>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n      scelerisque diam non nisi semper, et elementum lorem ornare. Maecenas\n      placerat facilisis mollis. Duis sagittis ligula in sodales vehicula....\n    </p>\n  </li>\n\n  <li class=\"timeline-item\">\n    <div class=\"timeline-icon\">4</div>\n    <h4>Were we are now</h4>\n    <div class=\"timeline-item-date\">30 October, 2020</div>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n      scelerisque diam non nisi semper, et elementum lorem ornare. Maecenas\n      placerat facilisis mollis. Duis sagittis ligula in sodales vehicula....\n    </p>\n  </li>\n</ul>\n</div>\n","<h3>Nueva Suscripción</h3>\n<div class=\"card-body\">\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addSuscripcion(create,errorModal)\"\n    #f=\"ngForm\"\n  >\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Fecha de alta</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          name=\"fechaAlta\"\n          #suscripcionFechaAlta=\"ngModel\"\n          [(ngModel)]=\"nuevaSuscripcion.fechaAlta\"\n          placeholder=\"Fecha Alta\"\n          required=\"\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && suscripcionFechaAlta.invalid) ||\n              (suscripcionFechaAlta.touched && !suscripcionFechaAlta.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && suscripcionFechaAlta.invalid) ||\n            (suscripcionFechaAlta.touched && !suscripcionFechaAlta.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              suscripcionFechaAlta.errors.required ||\n              suscripcionFechaAlta.invalid\n            \"\n          >\n            * Fecha no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"username\">(*) Fecha de baja</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          name=\"fechaBaja\"\n          #ejercicioNombre=\"ngModel\"\n          [(ngModel)]=\"nuevaSuscripcion.fechaBaja\"\n          placeholder=\"Nombre Tipo ejercicio\"\n          required=\"\"\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && ejercicioNombre.invalid) ||\n              (ejercicioNombre.touched && !ejercicioNombre.valid)\n          }\"\n        />\n        <div\n          *ngIf=\"\n            (f.submitted && ejercicioNombre.invalid) ||\n            (ejercicioNombre.touched && !ejercicioNombre.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"ejercicioNombre.errors.required || ejercicioNombre.invalid\"\n          >\n            * Fecha no válida\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"tipoEjercicio\">(*) Tipo de Suscripción</label>\n        <select\n          class=\"form-control\"\n          name=\"tipoSuscripcion\"\n          id=\"tipoSuscripcion\"\n          #suscripcionTipoSuscripcion=\"ngModel\"\n          [(ngModel)]=\"tipoSuscripcionId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n              (suscripcionTipoSuscripcion.touched &&\n                !suscripcionTipoSuscripcion.valid)\n          }\"\n          [(ngModel)]=\"tipoSusSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option\n            *ngFor=\"let tipoSuscripcion of tiposSuscripcion\"\n            value=\"{{ tipoSuscripcion.id }}\"\n          >\n            {{ tipoSuscripcion.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n            (suscripcionTipoSuscripcion.touched &&\n              !suscripcionTipoSuscripcion.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              suscripcionTipoSuscripcion.errors.required ||\n              suscripcionTipoSuscripcion.invalid\n            \"\n          >\n            * Seleccione un tipo de suscripcion\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group col-md-6\">\n        <label for=\"usuario\">(*) Usuario</label>\n        <select\n          class=\"form-control\"\n          name=\"usuario\"\n          id=\"usuario\"\n          #suscripcionUsuario=\"ngModel\"\n          [(ngModel)]=\"usuarioId\"\n          required\n          [ngClass]=\"{\n            'is-invalid':\n              (f.submitted && suscripcionUsuario.invalid) ||\n              (suscripcionUsuario.touched && !suscripcionUsuario.valid)\n          }\"\n          [(ngModel)]=\"usuarioSelect\"\n        >\n          <option value=\"\" selected>-- Elige una opción --</option>\n          <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n            {{ usuario.nombre }}\n          </option>\n        </select>\n\n        <div\n          *ngIf=\"\n            (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n            (suscripcionTipoSuscripcion.touched &&\n              !suscripcionTipoSuscripcion.valid)\n          \"\n          class=\"invalid-feedback\"\n        >\n          <div\n            *ngIf=\"\n              suscripcionTipoSuscripcion.errors.required ||\n              suscripcionTipoSuscripcion.invalid\n            \"\n          >\n            * Seleccione un usuario\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn m-t-30 mt-3\">Añadir</button>\n  </form>\n</div>\n\n<ng-template #create let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>Suscripcion del usuario <span class=\"text-danger\">{{nuevaSuscripcion.usuario.nombre}}</span> registrada!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n<ng-template #errorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¡Hubo un error!</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TipoSuscripcion } from \"@modelsRest/TipoSuscripcion\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { SuscripcionServiceService } from \"@servicesRest/suscripcion/suscripcion-service.service\";\nimport { TipoSuscripcionServiceService } from \"@servicesRest/tipo_suscripcion/tipo-suscripcion-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\n\n@Component({\n  selector: \"app-suscripcion-add\",\n  templateUrl: \"./suscripcion-add.component.html\",\n  styleUrls: [\"./suscripcion-add.component.css\"],\n})\nexport class SuscripcionAddComponent implements OnInit {\n  nuevaSuscripcion: any;\n  tipoSuscripcionId: number;\n  usuarioId: number;\n  tipoSusSelect = \"\";\n  usuarioSelect = \"\";\n  tiposSuscripcion: TipoSuscripcion[];\n  usuarios: Usuario[];\n\n  constructor(\n    private _service: SuscripcionServiceService,\n    private _serviceTipoSuscripcion: TipoSuscripcionServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n  ) {\n    this.nuevaSuscripcion = {};\n  }\n\n  ngOnInit(): void {\n    this._serviceTipoSuscripcion.getTiposSuscripcion().subscribe((data) => {\n      this.tiposSuscripcion = data;\n    });\n\n    this._serviceUsuario.getUsuariosByRol(3).subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n  obtenerTipoSuscripcion() {\n    return this._serviceTipoSuscripcion\n      .getTipoSuscripcion(this.tipoSuscripcionId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaSuscripcion.tipoSuscripcion = data;\n      });\n  }\n  obtenerUsuario() {\n    return this._serviceUsuario\n      .getUsuario(this.usuarioId)\n      .toPromise()\n      .then((data) => {\n        this.nuevaSuscripcion.usuario = data;\n      });\n  }\n  addSuscripcion(create, errorModal) {\n    this.obtenerTipoSuscripcion()\n      .then(() => this.obtenerUsuario())\n      .then(() => {\n        this._service.createSuscripcion(this.nuevaSuscripcion).subscribe(\n          (data) => {\n            this.modalService.open(create, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n            setTimeout(function () {\n              window.location.reload();\n            }, 3000);\n          },\n          (err) => {\n            this.modalService.open(errorModal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n      });\n  }\n  \n  refresh() {\n    window.location.reload();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContenidoComponent } from '../../components/contenido/contenido.component';\n@Component({\n  selector: 'app-contacto',\n  templateUrl: './contacto.component.html',\n  styleUrls: ['./contacto.component.css']\n})\nexport class PageContactoComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Contacto';\n    this.pageDesc = 'Estamos aqui para ayudarte';\n    this.pageImg = 'contacto.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<contacto-contenido></contacto-contenido>","<div class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    enabled\n    (click)=\"habilitarSala()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Sala\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarSala()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Sala\n  </button>\n</div>\n<div *ngIf=\"mostrarSalaAdd == true\">\n  <app-sala-add></app-sala-add>\n</div>\n\n<h3 class=\"card-title text-left\">Salas</h3>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Número sala\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Aforo Máximo\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let sala of salas\" class=\"text-center\">\n        <td>{{ sala.numero }}</td>\n        <td>{{ sala.aforoMax }}</td>\n        <td>\n          <a class=\"ml-2\" data-toggle=\"tooltip\" data-original-title=\"Edit\"\n          (click)=\"open(content,sala)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete,this.sala)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Número Sala</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Aforo Máximo</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>¿Seguro que quieres borrar la sala <span class=\"text-danger\">{{salaAux.numero}} ({{salaAux.id}})?</span></h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">Borrar</button>\n        </div>\n</ng-template>\n\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Sala</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"salaUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalSala)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">Aforo Máximo</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"aforoMax\"\n              #aforoSala=\"ngModel\"\n              [(ngModel)]=\"salaUpdate.aforoMax\"\n              placeholder=\"Aforo Máximo\"\n              required\n              min=\"1\"\n              max=\"100\"\n              pattern=\"(([1-9])|([1-9])([0-9])|100)\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && aforoSala.invalid) ||\n                  (aforoSala.touched && !aforoSala.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && aforoSala.invalid) ||\n                (aforoSala.touched && !aforoSala.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"aforoSala.errors.required || aforoSala.invalid\">\n                * Aforo no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">Número de Sala</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"numeroSala\"\n              #numeroSala=\"ngModel\"\n              [(ngModel)]=\"salaUpdate.numero\"\n              placeholder=\"Número de Sala\"\n              required\n              min=\"1\"\n              max=\"100\"\n              pattern=\"(([1-9])|([1-9])([0-9])|100)\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && numeroSala.invalid) ||\n                  (numeroSala.touched && !numeroSala.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && numeroSala.invalid) ||\n                (numeroSala.touched && !numeroSala.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"numeroSala.errors.required || numeroSala.invalid\">\n                * Número no válido\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalSala let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{textoModal}}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss();refresh()\"\n          >\n            Cerrar\n          </button>\n        </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Sala } from \"@modelsRest/Sala\";\nimport { SalaServiceService } from \"@servicesRest/sala/sala-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HelperService } from \"@core/services/helper.service\";\n\n@Component({\n  selector: \"app-sala-list\",\n  templateUrl: \"./sala-list.component.html\",\n  styleUrls: [\"./sala-list.component.css\"],\n})\nexport class SalaListComponent implements OnInit {\n  //list\n  mostrarSalaAdd: boolean = false;\n  salas: Sala[];\n\n  //update\n  salaUpdate: any;\n  closeResult = \"\";\n  textoModal: string;\n\n  //confirm delete\n  salaAux: any;\n\n  constructor(\n    private _service: SalaServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {}\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getSalas().subscribe((data) => {\n      this.salas = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteSalas(this.salaAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal) {\n    this._service.updateSala(this.salaUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Sala actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarSala() {\n    this.mostrarSalaAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n  deshabilitarSala() {\n    this.mostrarSalaAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, sala: Sala) {\n    this._service.getSala(sala.id).subscribe((data) => {\n      this.salaUpdate = data;\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //modal coinfirm delete\n  openModalDelete(confirmDelete, sala: Sala) {\n    this.salaAux = sala;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n}\n","export class ContactoUsuario {\n\n    constructor(\n        public nombre: string,\n        public apellidos: string,\n        public from: string,\n        public subject: string,\n        public text: string\n    ) {}\n\n    public getNombre() {\n        return this.nombre;\n    }\n\n    public getApellidos() {\n        return this.apellidos;\n    }\n\n    public getFrom() {\n        return this.from;\n    }\n\n    public getSubject() {\n        return this.subject;\n    }\n\n    public getText() {\n        return this.text;\n    }\n\n    /*== setters */\n    public setNombre(valor: string){\n        this.nombre = valor; \n    }\n\n    public setApellidos(valor: string){\n        this.apellidos = valor; \n    }\n\n    public setFrom(valor: string){\n        this.from = valor; \n    }\n\n    public setSubject(valor: string){\n        this.subject = valor; \n    }\n\n    public setText(valor: string){\n        this.text = valor; \n    }\n}","<section>\n  <div class=\"container\">\n    <div class=\"heading-text text-center heading-section\">\n      <h5 class=\"text-uppercase\">¡Calidad asegurada!</h5>\n      <h2><span>Todo lo que necesitas</span></h2>\n      <p>\n        Ofrecemos una gama de servicios muy variada que seguramente te\n        encantará.\n      </p>\n    </div>\n    <hr class=\"p-t-30\" />\n    <div class=\"row\">\n      <div class=\"col-lg-4\" *ngFor=\"let servicio of servicios\">\n        <shared-servicio\n          [title]=\"servicio.title\"\n          [descr]=\"servicio.descr\"\n          [icon]=\"servicio.icon\"\n        ></shared-servicio>\n      </div>\n    </div>\n    \n    <div class=\"p-cb mb-5\">\n      <div class=\"cb-icon\">\n        <i class=\"icon-info\"></i>\n      </div>\n      <div class=\"cb-content\">\n            <h4>Mensaje COVID</h4>\n            Por nuestra seguridad y la de todos nuestros usuarios seguimos con todos\n            los protocolos de sanidad al respecto y ofrecemos instrucciones a todos\n            nuestros usuarios de como seguir los protocolos. Todos nuestros monitores\n            y empleados han tomado cursos especializados de seguridad y estan muy\n            atentos para que se cumplan todos los protocolos necesarios. Adémas\n            tenemos sesiónes de limpieza y desinfencción varias veces al día en todos\n            los espacios y maquinas utilizadas.\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ServicioComponent } from '@shared/components/servicio/servicio.component';\nimport { Servicio } from '@shared/models/servicio';\nimport { ServiciosService } from '@core/services';\n@Component({\n  selector: 'servicios-all',\n  templateUrl: './all-servicios.component.html',\n  styleUrls: ['./all-servicios.component.css']\n})\nexport class AllServiciosComponent implements OnInit {\n  public servicios: Array<Servicio>;\n  constructor(\n    private _serviciosService: ServiciosService\n  ) { }\n\n  ngOnInit(): void {\n    this.servicios = this._serviciosService.findAll();\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Direccion } from \"@modelsRest/Direccion\";\nimport { Observable } from \"rxjs\";\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DireccionServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl + 'direccion';\n\n  getDirecciones(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getDireccion(direccion: number): Observable<any> {\n    return this._http.get<Direccion>(this.url + \"/\" + direccion);\n  }\n  deleteDireccion(direccion: Direccion) {\n    return this._http.delete<Direccion>(this.url + \"/\" + direccion.id);\n  }\n\n  createDireccion(direccion: Direccion): Observable<any> {\n    return this._http.post<Direccion>(this.url, direccion);\n  }\n\n  updateDireccion(direccion: Direccion): Observable<any> {\n    return this._http.put<Direccion>(this.url + \"/\" + direccion.id, direccion);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\n//importar componentes\nimport { PageHomeComponent } from \"./pages/home/pages/home/home.component\";\nimport { PageAboutusComponent } from \"./pages/aboutus/pages/aboutus/aboutus.component\";\nimport { PageServiciosComponent } from \"./pages/servicios/pages/servicios/servicios.component\";\nimport { PageHorarioComponent } from \"./pages/horario/pages/horario/horario.component\";\nimport { PageClasesComponent } from \"./pages/clases/pages/clases/clases.component\";\nimport { PageContactoComponent } from \"./pages/contacto/pages/contacto/contacto.component\";\n\nimport { PageLoginComponent } from \"./pages/login/pages/login/login.component\";\nimport { PageSignupComponent } from \"./pages/signup/pages/signup/signup.component\";\nimport { PageRecoverComponent } from \"./pages/recover/pages/recover/recover.component\";\nimport { PagePoliticaComponent } from \"./pages/privacidad/pages/politica/politica.component\";\nimport { PageCookiesComponent } from \"./pages/privacidad/pages/cookies/cookies.component\";\nimport { PageLegalComponent } from \"./pages/privacidad/pages/legal/legal.component\";\n\nimport { PageCuentaPerfilComponent } from \"./cuenta/pages/perfil/perfil.component\";\nimport { PageCuentaInicioComponent } from \"./cuenta/components/inicio/inicio.component\";\nimport { PageCuentaDatosComponent } from \"./cuenta/components/datos/datos.component\";\nimport { PageCuentaFacturasComponent } from \"./cuenta/components/facturas/facturas.component\";\n\nimport { TipoActividadListComponent } from \"./rest/components/tipo_actividad/tipo-actividad-list/tipo-actividad-list.component\";\nimport { ActividadListComponent } from \"@componentsRest/actividad/actividad-list/actividad-list.component\";\nimport { DireccionListComponent } from \"@componentsRest/direccion/direccion-list/direccion-list.component\";\nimport { SlotListComponent } from \"@componentsRest/slot/slot-list/slot-list.component\";\nimport { UsuarioListComponent } from \"@componentsRest/usuario/usuario-list/usuario-list.component\";\nimport { RolListComponent } from \"@componentsRest/rol/rol-list/rol-list.component\";\nimport { TaquillaListComponent } from \"@componentsRest/taquilla/taquilla-list/taquilla-list.component\";\nimport { SuscripcionListComponent } from \"@componentsRest/suscripcion/suscripcion-list/suscripcion-list.component\";\nimport { ReservaListComponent } from \"@componentsRest/reserva/reserva-list/reserva-list.component\";\nimport { SalaListComponent } from \"@componentsRest/sala/sala-list/sala-list.component\";\nimport { TablaEjercicioListComponent } from \"@componentsRest/tabla_ejercicio/tabla-ejercicio-list/tabla-ejercicio-list.component\";\nimport { EjercicioSerieListComponent } from \"@componentsRest/ejercicio_serie/ejercicio-serie-list/ejercicio-serie-list.component\";\nimport { EjercicioListComponent } from \"@componentsRest/ejercicio/ejercicio-list/ejercicio-list.component\";\nimport { FacturaListComponent } from \"@componentsRest/factura/factura-list/factura-list.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: PageHomeComponent },\n  { path: \"inicio\", component: PageHomeComponent },\n  { path: \"quienes-somos\", component: PageAboutusComponent },\n  { path: \"clases\", component: PageClasesComponent },\n  { path: \"servicios\", component: PageServiciosComponent },\n  { path: \"horario\", component: PageHorarioComponent },\n  { path: \"contacto\", component: PageContactoComponent },\n  { path: \"iniciar-sesion\", component: PageLoginComponent },\n  { path: \"registro\", component: PageSignupComponent },\n  { path: \"recuperar-pass\", component: PageRecoverComponent },\n  { path: \"politica-privacidad\", component: PagePoliticaComponent },\n  { path: \"cookies\", component: PageCookiesComponent },\n  { path: \"aviso-legal\", component: PageLegalComponent },\n  {\n    path: \"cuenta\",\n    component: PageCuentaPerfilComponent,\n    children: [\n      {\n        path: \"inicio\",\n        component: PageCuentaInicioComponent,\n      },\n      {\n        path: \"mis/datos\",\n        component: PageCuentaDatosComponent,\n      },\n      {\n        path: \"mis/facturas\",\n        component: PageCuentaFacturasComponent,\n      },\n      // config usuarios\n      {\n        path: \"usuario/list\",\n        component: UsuarioListComponent,\n      },\n      {\n        path: \"rol/list\",\n        component: RolListComponent,\n      },\n      {\n        path: \"taquilla/list\",\n        component: TaquillaListComponent,\n      },\n      {\n        path: \"direccion/list\",\n        component: DireccionListComponent,\n      },\n      {\n        path: \"suscripcion/list\",\n        component: SuscripcionListComponent,\n      },\n\n      //config actividades/reservas\n      {\n        path: \"actividad/list\",\n        component: ActividadListComponent,\n      },\n      {\n        path: \"tipo_actividad/list\",\n        component: TipoActividadListComponent,\n      },\n      {\n        path: \"slot/list\",\n        component: SlotListComponent,\n      },\n      {\n        path: \"reserva/list\",\n        component: ReservaListComponent,\n      },\n      {\n        path: \"sala/list\",\n        component: SalaListComponent,\n      },\n      //config tablas\n      {\n        path: \"tablaEjercicio/list\",\n        component: TablaEjercicioListComponent,\n      },\n      {\n        path: \"ejercicioSerie/list\",\n        component: EjercicioSerieListComponent,\n      },\n      {\n        path: \"ejercicio/list\",\n        component: EjercicioListComponent,\n      },\n      //otros\n      {\n        path: \"factura/list\",\n        component: FacturaListComponent,\n      },\n    ],\n  },\n  //{ path: 'cuenta', component : PagePerfilComponent, loadChildren: () => import('./cuenta/cuenta.module').then(m => m.CuentaModule) },\n  { path: \"**\", component: PageHomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Factura } from '@modelsRest/Factura';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacturaServiceService {\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl+ 'factura';\n  urlFacturas = appSettings.apiUrl+ 'facturas';\n\n  getFacturas(): Observable<any> {\n    return this._http.get(this.url);\n  }\n  getFactura(factura:number):Observable<any>{\n    return this._http.get<Factura>(this.url+\"/\"+factura);\n  }\n\n  deleteFactura(factura:Factura){\n    return this._http.delete<Factura>(this.url+\"/\"+factura.id);\n  }\n  createFactura(factura:Factura):Observable<any>{\n    return this._http.post<Factura>(this.url,factura);\n  }\n\n  updateFactura(factura: Factura): Observable<any> {\n    return this._http.put<Factura>(this.url + \"/\" + factura.id, factura);\n  }\n\n  getFacturasByUsuarioId(id:number): Observable<any> {\n    return this._http.get(this.urlFacturas + '/usuario/'+id);\n  }\n\n}\n","export const appSettings = {\n    salt: 'K2Q{ey?kK8;+zP6F',\n    apiUrl: 'http://82.223.29.132:8080/webservice/',\n    apiUpload: 'http://82.223.29.132:4000'\n}","import { Component, OnInit } from '@angular/core';\nimport { CallToActionComponent } from '@shared/components/call-to-action/call-to-action.component';\n@Component({\n  selector: 'app-cookies',\n  templateUrl: './cookies.component.html',\n  styleUrls: ['./cookies.component.css']\n})\nexport class PageCookiesComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Política de cookies';\n    this.pageDesc = 'Sobre el uso de cookies';\n    this.pageImg = 'aboutus.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<section>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <p>FIL's Center Gym S.L. por su propia cuenta o la de un tercero contratado para la prestación de servicios de medición, puede utilizar cookies cuando un usuario navega por el sitio web. Las cookies son ficheros enviados al navegador por medio de un servidor web con la finalidad de registrar las actividades del usuario durante su tiempo de navegación.</p>\n                <p>Las cookies utilizadas por el sitio web se asocian únicamente con un usuario anónimo y su ordenador, y no proporcionan por sí mismas los datos personales del usuario.</p>\n                <p>Mediante el uso de las cookies resulta posible que el servidor donde se encuentra la web, reconozca el navegador web utilizado por el usuario con la finalidad de que la navegación sea más sencilla, permitiendo, por ejemplo, el acceso a los usuarios que se hayan registrado previamente, acceder a las áreas, servicios, promociones o concursos reservados exclusivamente a ellos sin tener que registrarse en cada visita. Se utilizan también para medir la audiencia y parámetros del tráfico, controlar el progreso y número de entradas.</p>\n                <p>Si no se habilitan las cookies, es posible que algunas funciones y páginas no se muestren correctamente.</p>\n                <p>Para borrar las cookies en el ordenador, hacer clic en «Ayuda» del menú del navegador para ver las instrucciones.</p>\n                <p>El usuario también tiene la posibilidad de configurar su navegador para ser avisado de la recepción de cookies y para impedir su instalación en su equipo. Por favor, consulte las instrucciones y manuales de su navegador para ampliar esta información.</p>\n                <p>Para utilizar el sitio web, no resulta necesario que el usuario permita la instalación de las cookies enviadas por el sitio web, o el tercero que actúe en su nombre, sin perjuicio de que sea necesario que el usuario inicie una sesión como tal en cada uno de los servicios cuya prestación requiera el previo registro o “login”.</p>\n            </div>\n        </div>\n    </div>\n</section>\n\n<shared-call-to-action\n    [title]=\"'Te esperamos'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [img]=\"'haltere.jpg'\"\n    [overlayStyle] = \"11\"\n    [btnTxt]=\"'Inscríbete'\"\n    [btnUrl]=\"'/registro'\"\n    [btnClass]=\"'btn-light btn-lg'\"\n    ></shared-call-to-action>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer id=\"footer\" class=\"inverted\">\n    <div class=\"footer-content\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-lg-5\">\n                    <div class=\"widget\">\n\n                        <div class=\"widget-title text-orange\">Fil's Center Gym</div>\n                        <p class=\"mb-5\">\n                            Nuestro objetivo es que logres el tuyo. Para ello, ponemos a tu disposición un sistema de entrenamiento que se adapta a ti, con un equipo de profesionales que te ayuda a optimizar tus sesiones para que alcances tus objetivos de una forma rápida y divertida.\n                            <br/><br />\n                            <span class=\"text-orange\">FIL's Center Gym, tu gimnasio Premium a precio Low Cost.</span>\n                        </p>\n                        <a href=\"/registro\" class=\"btn btn-light\">Inscríbete ahora</a>\n                    </div>\n                </div>\n                <div class=\"col-lg-7\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-4 text-center\">\n                            <div class=\"widget\">\n                                <div class=\"widget-title text-orange\">Páginas</div>\n                                <ul class=\"list\">\n                                    <li><a href=\"/servicios\">Horario</a></li>\n                                    <li><a href=\"/clases\">Clases</a></li>\n                                    <li><a href=\"/servicios\">Servicios</a></li>\n                                    <li><a href=\"/quienes-somos\">El gimnasio</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4 text-center\">\n                            <div class=\"widget\">\n                                <div class=\"widget-title text-orange\">Legal</div>\n                                <ul class=\"list\">\n                                    <li><a href=\"/politica-privacidad\">Política de privacidad</a></li>\n                                    <li><a href=\"/aviso-legal\">Aviso Legal</a></li>\n                                    <li><a href=\"/cookies\">Política de cookies</a></li>\n                                    <li><a href=\"/contacto\">Contacto</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4 text-center\">\n                            <div class=\"widget\">\n                                <div class=\"widget-title text-orange\">Área personal</div>\n                                <ul class=\"list\">\n                                    <li><a href=\"/iniciar-sesion\">Iniciar sesión</a></li>\n                                    <li><a href=\"/registro\">Inscríbete</a></li>\n                                    <li><a href=\"/recuperar-pass\">Recuperar contraseña</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </div>\n    <div class=\"copyright-content\">\n        <div class=\"container\">\n            <div class=\"copyright-text text-center\">&copy; 2021 FIL's Center Gym &nbsp;&nbsp;|&nbsp;&nbsp;<span class=\"text-orange\">DAW - Proyecto Fin de Grado</span>&nbsp;&nbsp;|&nbsp;&nbsp;IES Rey Fernando VI </div>\n        </div>\n    </div>\n</footer>\n<!-- end: Footer -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActividadServiceService as ActividadService } from '@servicesRest/actividad/actividad-service.service';\nimport { Actividad } from '@modelsRest/Actividad';\n@Component({\n  selector: 'clases-all-clases',\n  templateUrl: './all-clases.component.html',\n  styleUrls: ['./all-clases.component.css'],\n  providers: [ActividadService]\n})\nexport class AllClasesComponent implements OnInit {\n  public actividades: Array<Actividad>;\n\n  constructor(\n    private _router: Router,\n    private _actividadService: ActividadService\n  ) { \n\n    this._actividadService.getActividades().subscribe((data) => {\n      this.actividades = data;\n    });\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  redirectHorario() {\n    this._router.navigate(['/horario']);\n  }\n\n}\n","<!-- FAQ & OPENING HOURS -->\n<section\n  id=\"section2\"\n  class=\"background-image\"\n  style=\"background-image: url(assets/fitness/images/background1.png)\"\n>\n  <div class=\"container\">\n    <div class=\"col-lg-8 m-b-100 center\">\n      <div class=\"heading-text heading-section text-center\">\n        <h4 class=\"p-b-10 mb-0 text-primary\">Ven a vernos</h4>\n        <h2>Clases Colectivas</h2>\n        <p>\n            Nuestras actividades colectivas son diseñadas por los mejores expertos en actividades físicas de manera que sean eficaces y adaptables a diferentes niveles de dificultad.\n        </p>\n      </div>\n    </div>\n    <!-- <hr class=\"space\" /> -->\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"accordion toggle fancy clean accordion-transparent\">\n          <div class=\"ac-item\" *ngFor=\"let actividad of actividades\">\n            <h5 class=\"ac-title text-uppercase\">{{ actividad.nombre }}</h5>\n            <div class=\"ac-content\">\n              {{ actividad.descripcion }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12 text-center p-t-50\">\n            <button type=\"button\" class=\"btn btn-rounded btn-reveal btn-lg\" (click)=\"redirectHorario()\"><span>Ver Horario de Actividades</span><i class=\"icon-chevron-right\"></i></button>\n        </div>\n    </div>\n  </div>\n</section>\n<!-- end: FAQ & OPENING HOURS -->\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Ejercicio } from '@modelsRest/Ejercicio';\nimport { Observable } from 'rxjs';\nimport { appSettings } from '@core/helpers/appSettings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EjercicioServiceService {\n\n  constructor(private _http: HttpClient) {}\n\n  url = appSettings.apiUrl+'ejercicio';\n  url2 = appSettings.apiUrl+'ejercicios/tipoEjercicio';\n\n  getEjercicios(): Observable<any> {\n    return this._http.get(this.url);\n  }\n\n  getEjercicio(ejercicio:number):Observable<any>{\n    return this._http.get<Ejercicio>(this.url+\"/\"+ejercicio)\n  }\n\n  getEjerciciosPorTipoEjercicioId(tipoEjercicio:number):Observable<any>{\n    return this._http.get<Ejercicio>(this.url2+\"/\"+tipoEjercicio);\n  }\n\n  deleteEjercicio(ejercicio:Ejercicio){\n    return this._http.delete<Ejercicio>(this.url+\"/\"+ejercicio.id);\n  }\n\n  createEjercicio(ejercicio:Ejercicio):Observable<any>{\n    return this._http.post<Ejercicio>(this.url,ejercicio);\n  }\n\n  updateEjercicio(ejercicio: Ejercicio): Observable<any> {\n    return this._http.put<Ejercicio>(this.url + \"/\" + ejercicio.id, ejercicio);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home-clases',\n  templateUrl: './clases.component.html',\n  styleUrls: ['./clases.component.css']\n})\nexport class HomeClasesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- BOXES -->\n<section class=\"box-fancy section-fullwidth text-light no-padding\">\n    <div class=\"row\">\n        <div class=\"col-lg-3 text-center\" style=\"background-color: #f1b732;\">\n            <img src=\"assets/fitness/images/icons/1.png\" alt=\"\">\n            <h2 class=\"text-xs font-bold mt-4\">CARDIO</h2>\n            <span>Tenemos variados ejercicios de cardio en las que se pone en movimiento los músculos mayores del cuerpo durante un período prolongado ayudando a quemar grasa y perder calorías.</span>\n        </div>\n        <div class=\"col-lg-3 text-center\" style=\"background-color: #fcc43f;\">\n            <img src=\"assets/fitness/images/icons/2.png\" alt=\"\">\n            <h2 class=\"text-xs font-bold mt-4\">CYCLING</h2>\n            <span>Subiremos \"montañas\", realizaremos algún que otro sprint y ejercicios de tonificación sobre el manillar, cambios de ritmo e intensidad, trabajo de frecuencia de pedaleo… y todo ello sin salir de la sala de nuestro centro deportivo.</span>\n        </div>\n        <div class=\"col-lg-3 text-center\" style=\"background-color: #fdce49;\">\n            <img src=\"assets/fitness/images/icons/3.png\" alt=\"\">\n            <h2 class=\"text-xs font-bold mt-4\">BODY BUILDING</h2>\n            <span>el bodybuilding es una actividad física que se basa en levantar pesas y realizar diversos ejercicios anaeróbicos. Nuestro gymnasio cuenta con todos los aparatos y diferentes pesas para realizar los ejercicios.</span>\n        </div>\n        <div class=\"col-lg-3 text-center\" style=\"background-color: #fcc43f;\">\n            <img src=\"assets/fitness/images/icons/4.png\" alt=\"\">\n            <h2 class=\"text-xs font-bold mt-3\">RUNNING</h2>\n            <span>¿Quieres correr en un sitio seguro, de una manera programada y controlada? Disponemos de la última tecnologia en running para que puedas disfrutar y tener el grado de dificultad que mejor se adapte a tu nivel.</span>\n        </div>\n    </div>\n</section>\n<!-- end: BOXES -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provincia-add',\n  templateUrl: './provincia-add.component.html',\n  styleUrls: ['./provincia-add.component.css']\n})\nexport class ProvinciaAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>provincia-add works!</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Direccion } from \"@modelsRest/Direccion\";\nimport { Suscripcion } from \"@modelsRest/Suscripcion\";\nimport { Taquilla } from \"@modelsRest/Taquilla\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { DireccionServiceService } from \"@servicesRest/direccion/direccion-service.service\";\nimport { SuscripcionServiceService } from \"@servicesRest/suscripcion/suscripcion-service.service\";\nimport { TaquillaServiceService } from \"@servicesRest/taquilla/taquilla-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { LocalidadServiceService } from \"@servicesRest/localidad/localidad-service.service\";\nimport { ProvinciaServiceService } from \"@servicesRest/provincia/provincia-service.service\";\nimport { Provincia } from \"@modelsRest/Provincia\";\nimport { Localidad } from \"@modelsRest/Localidad\";\nimport { HelperService } from '@core/services/helper.service';\n\nimport {md5} from 'pure-md5';\nimport { DatePipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-usuario-list\",\n  templateUrl: \"./usuario-list.component.html\",\n  styleUrls: [\"./usuario-list.component.css\"],\n})\nexport class UsuarioListComponent implements OnInit {\n  //desplegar parte de add usuario\n  mostrarUsuarioAdd: boolean = false;\n\n  //listado de usuarios\n  usuarios: Usuario[];\n\n  textoModal: string;\n\n  //PARTE UPDATE\n  usuarioUpdate: any;\n  suscripciones: Suscripcion[];\n  direcciones: Direccion[];\n  provincias: Provincia[];\n  localidades: Localidad[];\n  taquillas: Taquilla[];\n  closeResult = \"\";\n  ProvinciaId: number;\n  localidadId: number;\n  confirmPass:string = \"\";\n\n  //parte confirm delete\n  usuarioAux: any;\n\n  //filtro tabla\n  filterName:string;\n  filterRol:string = \"user\";\n  mainTablaUsers:Usuario[];\n  filterTabla:Usuario[];\n\n\n  constructor(\n    private _service: UsuarioServiceService,\n    private _serviceTaquilla: TaquillaServiceService,\n    private _serviceDireccion: DireccionServiceService,\n    private _serviceLocalidad: LocalidadServiceService,\n    private _serviceProvincia: ProvinciaServiceService,\n    private _serviceSuscripcion: SuscripcionServiceService,\n    private _router: Router,\n    private modalService: NgbModal\n    ,private _helperService: HelperService,\n    private datePipe:DatePipe\n  ) {\n    this.usuarioUpdate = {};\n    this.usuarioAux = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isRolOK(\"admin\");\n    document.getElementById(\"minus\").hidden = true;\n\n    this._service.getUsuarios().subscribe((data) => {\n      this.usuarios = data;\n      this.mainTablaUsers = data;\n\n    });\n\n    this._serviceDireccion.getDirecciones().subscribe((data) => {\n      this.direcciones = data;\n    });\n\n    this._serviceSuscripcion.getSuscripciones().subscribe((data) => {\n      this.suscripciones = data;\n    });\n\n    this._serviceTaquilla.getTaquillas().subscribe((data) => {\n      this.taquillas = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteUsuario(this.usuarioAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal) {\n    this.obtenerProvincia()\n      .then(() => this.obtenerLocalidad())\n      .then(() => this.obtenerTaquilla())\n      .then(() => {\n        this.usuarioUpdate.email = this.usuarioUpdate.email.toLowerCase();\n        this.usuarioUpdate.password = md5(this.usuarioUpdate.password);\n        this._service.updateUsuario(this.usuarioUpdate).subscribe(\n          (data) => {\n            this.textoModal = \"¡Usuario actualizado!\";\n            this.modalService.open(modal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          },\n          (err) => {\n            this.textoModal = \"¡Error al actualizar!\";\n            this.modalService.open(modal, {\n              ariaLabelledBy: \"modal-basic-title\",\n              centered: true,\n              size: \"md\",\n            });\n          }\n        );\n      });\n  }\n\n  //habilitar o deshabilitar parte creación de usuario\n  habilitarUsuario() {\n    this.mostrarUsuarioAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n  deshabilitarUsuario() {\n    this.mostrarUsuarioAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  //carga de localidades de la provincia que pertecene al usuario\n  cargarLocalidades(usuario: Usuario) {\n    this._serviceLocalidad\n      .getLocalidadesByProvinciaID(usuario.direccion.localidad.provincia.id)\n      .subscribe((data) => {\n        this.localidades = data;\n      });\n  }\n\n  obtenerTaquilla() {\n    return this._serviceTaquilla\n      .getTaquilla(1)\n      .toPromise()\n      .then((data) => {\n        this.usuarioUpdate.taquilla = data;\n      });\n  }\n\n  obtenerLocalidad() {\n    console.log(this.localidadId + \"localidad\");\n    console.log(this.usuarioUpdate.direccion.localidad.id + \"localidad\");\n    return this._serviceLocalidad\n      .getLocalidad(this.usuarioUpdate.direccion.localidad.id)\n      .toPromise()\n      .then((data) => {\n        this.usuarioUpdate.direccion.localidad = data;\n      });\n  }\n\n  obtenerProvincia() {\n    console.log(this.ProvinciaId + \"prvincia\");\n    console.log(\n      this.usuarioUpdate.direccion.localidad.provincia.id + \"prvincia\"\n    );\n    return this._serviceProvincia\n      .getProvincia(this.usuarioUpdate.direccion.localidad.provincia.id)\n      .toPromise()\n      .then((data) => {\n        this.usuarioUpdate.direccion.localidad.provincia = data;\n      });\n  }\n\n  obtenerUsuarioUpdate(usuario: Usuario) {\n    return this._service\n      .getUsuario(usuario.id)\n      .toPromise()\n      .then((data) => {\n        this.usuarioUpdate = data;\n      });\n  }\n\n  updateLocalidades(provinciaId) {\n    this.usuarioUpdate.direccion.localidad.id = \"\";\n    this._serviceLocalidad\n      .getLocalidadesByProvinciaID(provinciaId)\n      .subscribe((data) => {\n        this.localidades = data;\n      });\n  }\n\n  // abre ventana modal\n  open(content, usuario: Usuario) {\n    this._service\n      .getUsuario(usuario.id)\n      .toPromise()\n      .then((data) => {\n        this.usuarioUpdate = data;\n        this.usuarioUpdate.fechaNacimiento = this.datePipe.transform(this.usuarioUpdate.fechaNacimiento, 'yyyy-MM-dd' /*'dd-MM-yyyy'*/);\n        this.confirmPass = this.usuarioUpdate.password;\n      });\n\n    this._serviceProvincia.getProvincias().subscribe((data) => {\n      this.provincias = data;\n    });\n    this.cargarLocalidades(usuario);\n\n    this.modalService\n      .open(content, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"xl\",\n        scrollable: true,\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //abre modal confirm delete\n  openModalDelete(confirmDelete, usuario: Usuario) {\n    this.usuarioAux = usuario;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh(){\n    window.location.reload();\n  }\n\n  // filtrar tabla\n\n  filtrarTabla(){ \n    this.filterTabla = [];\n    //console.log(this.mainTablaUsers);\n    \n    for (let persona of this.mainTablaUsers){\n      if((persona.nombre.toLocaleLowerCase() == this.filterName.toLocaleLowerCase() || persona.email.toLocaleLowerCase() == this.filterName.toLocaleLowerCase()) && persona.rol.nombre == this.filterRol){\n        console.log(persona);\n        \n        this.filterTabla.push(persona);\n      }\n    }\n    console.log(this.filterTabla);\n    \n    if (this.filterTabla.length > 0){\n      this.usuarios = this.filterTabla;\n    } else {\n      this.usuarios = this.mainTablaUsers;\n    }\n  }\n\n  quitarFiltroTabla(){\n    this.usuarios = this.mainTablaUsers;\n  }\n}\n","<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-12\">\n    <div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n      <button\n        id=\"plus\"\n        (click)=\"habilitarUsuario()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n      >\n        <i class=\"icon-plus\"></i> Usuario\n      </button>\n      <button\n        id=\"minus\"\n        (click)=\"deshabilitarUsuario()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n      >\n        <i class=\"icon-minus\"></i> Usuario\n      </button>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"mostrarUsuarioAdd == true\">\n  <app-usuario-add></app-usuario-add>\n</div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-6\">\n    <h3 class=\"text-left\">Usuarios</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-6\">\n    <div class=\"d-flex justify-content-end\">\n      <label\n        >Nombre / Email:\n        <input\n          [(ngModel)]=\"filterName\"\n          type=\"search\"\n          class=\"form-control\"\n          placeholder=\"\"\n      /></label>\n      <label\n        >Rol:\n        <select [(ngModel)]=\"filterRol\" class=\"form-outline\">\n          <option value=\"admin\">Admin</option>\n          <option value=\"monitor\">Monitor</option>\n          <option value=\"user\">Usuario</option>\n        </select></label\n      >\n      <label for=\"\">\n        <button\n        style=\"height: 40px;\"\n          type=\"button\"\n          class=\"btn btn-primary mt-4\"\n          (click)=\"filtrarTabla()\"\n        >\n          <i class=\"fas fa-search\"></i></button\n      ></label>\n      <button\n        style=\"height: 40px;\"\n        (click)=\"quitarFiltroTabla()\"\n        type=\"button\"\n        class=\"btn btn-secondary mt-4 ml-4\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n\n    </div>\n  </div>\n</div>\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Nombre\n        </th>\n        <th\n        id=\"\"\n        id=\"\"\n        class=\"noExport sorting\"\n        tabindex=\"0\"\n        aria-controls=\"datatable\"\n        rowspan=\"1\"\n        colspan=\"1\"\n        aria-label=\"Actions: activate to sort column ascending\"\n        style=\"width: 54px\"\n      >\n        Apellidos\n      </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          DNI\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Email\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Fecha Nacimiento\n        </th>\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Telefono\n        </th>\n\n        <th\n          id=\"\"\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Número tarjeta\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let usuario of usuarios\" class=\"text-center\">\n        <td class=\"text-left\">{{ usuario.nombre }}</td>\n        <td class=\"text-left\">{{ usuario.apellidos }}</td>\n        <td class=\"text-left\">{{ usuario.dni }}</td>\n        <td class=\"text-left\">{{ usuario.email }}</td>\n        <td>{{ usuario.fechaNacimiento | date: 'dd/MM/yyyy' }}</td>\n        <td>{{ usuario.telefono }}</td>\n        <td>{{ usuario.numeroTarjeta }}</td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, usuario)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete, this.usuario)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\">Nombre</th>\n        <th id=\"\">Apellidos</th>\n        <th id=\"\">DNI</th>\n        <th id=\"\">Email</th>\n        <th id=\"\">Fecha Nacimiento</th>\n        <th id=\"\">Telefono</th>\n        <th id=\"\">Número tarjeta</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<!--Confirm delete modal (click)=\"delete(usuario)\"-->\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¿Seguro que quieres borrar al usuario\n        <span class=\"text-danger\"\n          >{{ usuarioAux.nombre }} ({{ usuarioAux.id }})?</span\n        >\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancelar\n    </button>\n    <button (click)=\"delete(usuario)\" type=\"button\" class=\"btn btn-primary\">\n      Borrar\n    </button>\n  </div>\n</ng-template>\n\n<!--                PARTE DEL MODAL UPDATE                -->\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Usuario</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"usuarioUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalUser)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"row justify-content-center m-4\"><h4>Datos Usuario</h4></div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-2\">\n            <label for=\"nombre\">(*) Nombre</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"nombre\"\n              name=\"nombre\"\n              #usuarioNombre=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.nombre\"\n              placeholder=\"Nombre usuario\"\n              required\n              pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioNombre.invalid) ||\n                  (usuarioNombre.touched && !usuarioNombre.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioNombre.invalid) ||\n                (usuarioNombre.touched && !usuarioNombre.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"usuarioNombre.errors.required || usuarioNombre.invalid\"\n              >\n                * Nombre no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"apellido\">(*) Apellido</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"apellido\"\n              name=\"apellido\"\n              #usuarioApellido=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.apellidos\"\n              placeholder=\"Apellidos usuario\"\n              required\n              pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,70}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioApellido.invalid) ||\n                  (usuarioApellido.touched && !usuarioApellido.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioApellido.invalid) ||\n                (usuarioApellido.touched && !usuarioApellido.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  usuarioApellido.errors.required || usuarioApellido.invalid\n                \"\n              >\n                * Apellido no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"dni\">(*) DNI</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"dni\"\n              name=\"dni\"\n              #usuarioDni=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.dni\"\n              placeholder=\"ej: 55668877X\"\n              required\n              pattern=\"^(\\d){8}[a-zA-Z]{1}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioDni.invalid) ||\n                  (usuarioDni.touched && !usuarioDni.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioDni.invalid) ||\n                (usuarioDni.touched && !usuarioDni.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"usuarioDni.errors.required || usuarioDni.invalid\">\n                * Dni no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"telefono\">(*) Teléfono</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefono\"\n              name=\"telefono\"\n              #usuarioTelefono=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.telefono\"\n              placeholder=\"Ej:666555444\"\n              required\n              pattern=\"^(6|7|8|9){1}\\d{8,9}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioTelefono.invalid) ||\n                  (usuarioTelefono.touched && !usuarioTelefono.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioTelefono.invalid) ||\n                (usuarioTelefono.touched && !usuarioTelefono.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  usuarioTelefono.errors.required || usuarioTelefono.invalid\n                \"\n              >\n                * Teléfono no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"fechaNacimiento\">(*) Fecha Nacimiento</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              id=\"fechaNacimiento\"\n              name=\"fechaNacimiento\"\n              #usuarioFechaNacimiento=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.fechaNacimiento\"\n              placeholder=\"Nombre Tipo ejercicio\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioFechaNacimiento.invalid) ||\n                  (usuarioFechaNacimiento.touched &&\n                    !usuarioFechaNacimiento.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioFechaNacimiento.invalid) ||\n                (usuarioFechaNacimiento.touched &&\n                  !usuarioFechaNacimiento.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  usuarioFechaNacimiento.errors.required ||\n                  usuarioFechaNacimiento.invalid\n                \"\n              >\n                * Fecha no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"email\">(*) Email</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              #usuarioEmail=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.email\"\n              placeholder=\"Email usuario\"\n              required\n              pattern=\"^([A-Za-z0-9]{1})((\\.|\\-)?([A-Za-z0-9])){0,}@([a-z0-9]){1}((\\.|\\-)?([a-z0-9]))*\\.([a-z]){2,4}$\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioEmail.invalid) ||\n                  (usuarioEmail.touched && !usuarioEmail.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioEmail.invalid) ||\n                (usuarioEmail.touched && !usuarioEmail.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"usuarioEmail.errors.required || usuarioEmail.invalid\">\n                * Email no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"password\">(*) Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"password\"\n              name=\"password\"\n              #usuarioPassword=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.password\"\n              placeholder=\"6 caract. min (por ahora)\"\n              required\n              pattern=\"\\w{6,}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioPassword.invalid) ||\n                  (usuarioPassword.touched && !usuarioPassword.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioPassword.invalid) ||\n                (usuarioPassword.touched && !usuarioPassword.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  usuarioPassword.errors.required || usuarioPassword.invalid\n                \"\n              >\n                * Password no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"confirmPassword\">(*) Confirmar Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              #confirmPassword=\"ngModel\"\n              [(ngModel)]=\"confirmPass\"\n              placeholder=\"6 caract. min (por ahora)\"\n              required\n              pattern=\"{{ usuarioUpdate.password }}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && confirmPassword.invalid) ||\n                  (confirmPassword.touched && !confirmPassword.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && confirmPassword.invalid) ||\n                (confirmPassword.touched && !confirmPassword.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  confirmPassword.errors.required || confirmPassword.invalid\n                \"\n              >\n                * Password no coincide\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"cuentaBancaria\">(*) Cuenta Bancaria</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cuentaBancaria\"\n              name=\"cuentaBancaria\"\n              #usuarioCuentaBancaria=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.cuentaBancaria\"\n              placeholder=\"ES55 4444 4444 44 444444444 \"\n              required\n              pattern=\"(ES\\d{2} \\d{4} \\d{4} \\d{2} \\d{10}|ES\\d{22})\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && usuarioCuentaBancaria.invalid) ||\n                  (usuarioCuentaBancaria.touched &&\n                    !usuarioCuentaBancaria.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && usuarioCuentaBancaria.invalid) ||\n                (usuarioCuentaBancaria.touched && !usuarioCuentaBancaria.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  usuarioCuentaBancaria.errors.required ||\n                  usuarioCuentaBancaria.invalid\n                \"\n              >\n                * Cuenta Bancaria no válida\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div class=\"row justify-content-center m-4 w-100\">\n            <h4>Dirección</h4>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"calle\">(*) Calle</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"calle\"\n              name=\"calle\"\n              #direccionCalle=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.calle\"\n              placeholder=\"C/\"\n              required\n              pattern=\"^([a-zA-Z]){1}([a-zA-Z ]){2,50}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionCalle.invalid) ||\n                  (direccionCalle.touched && !direccionCalle.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionCalle.invalid) ||\n                (direccionCalle.touched && !direccionCalle.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"direccionCalle.errors.required || direccionCalle.invalid\"\n              >\n                * Calle no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"numero\">(*) Número</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"numero\"\n              name=\"numero\"\n              #direccionNumero=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.numero\"\n              placeholder=\"Nº\"\n              min=\"1\"\n              max=\"1000\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionNumero.invalid) ||\n                  (direccionNumero.touched && !direccionNumero.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionNumero.invalid) ||\n                (direccionNumero.touched && !direccionNumero.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionNumero.errors.required || direccionNumero.invalid\n                \"\n              >\n                * Número no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"bloque\">Bloque</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"bloque\"\n              name=\"bloque\"\n              #direccionBloque=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.bloque\"\n              placeholder=\"Ej: 1\"\n              pattern=\"^([1-9]\\d*)\"\n              min=\"1\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionBloque.invalid) ||\n                  (direccionBloque.touched && !direccionBloque.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionBloque.invalid) ||\n                (direccionBloque.touched && !direccionBloque.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionBloque.errors.required || direccionBloque.invalid\n                \"\n              >\n                * Bloque no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"escalera\">Escalera</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"escalera\"\n              name=\"escalera\"\n              #direccionEscalera=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.escalera\"\n              placeholder=\"Ej: 1\"\n              pattern=\"^([1-9]\\d*)\"\n              min=\"1\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionEscalera.invalid) ||\n                  (direccionEscalera.touched && !direccionEscalera.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionEscalera.invalid) ||\n                (direccionEscalera.touched && !direccionEscalera.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionEscalera.errors.required || direccionEscalera.invalid\n                \"\n              >\n                * Escalera no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"piso\">Piso</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"piso\"\n              name=\"piso\"\n              #direccionPiso=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.piso\"\n              placeholder=\"Ej: 1\"\n              pattern=\"^([1-9]\\d*)\"\n              min=\"1\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionPiso.invalid) ||\n                  (direccionPiso.touched && !direccionPiso.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionPiso.invalid) ||\n                (direccionPiso.touched && !direccionPiso.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"direccionPiso.errors.required || direccionPiso.invalid\"\n              >\n                * Piso no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-2\">\n            <label for=\"puerta\">Puerta</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"puerta\"\n              name=\"puerta\"\n              #direccionPuerta=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.puerta\"\n              placeholder=\"Ej: 1,A\"\n              pattern=\"^(\\d|[a-zA-Z]{1})\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionPuerta.invalid) ||\n                  (direccionPuerta.touched && !direccionPuerta.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionPuerta.invalid) ||\n                (direccionPuerta.touched && !direccionPuerta.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionPuerta.errors.required || direccionPuerta.invalid\n                \"\n              >\n                * Puerta no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"cp\"> (*) Código Postal</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cp\"\n              name=\"cp\"\n              #direccionCP=\"ngModel\"\n              [(ngModel)]=\"usuarioUpdate.direccion.codigoPostal\"\n              placeholder=\"Ej: 29850\"\n              required\n              pattern=\"^\\d{5,6}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionCP.invalid) ||\n                  (direccionCP.touched && !direccionCP.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && direccionCP.invalid) ||\n                (direccionCP.touched && !direccionCP.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"direccionCP.errors.required || direccionCP.invalid\">\n                * Código Postal no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"provincia\">(*) Provincia</label>\n            <select\n              class=\"form-control\"\n              name=\"provincia\"\n              id=\"provincia\"\n              #direccionProvincia=\"ngModel\"\n              [(ngModel)]=\"provinciaId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionProvincia.invalid) ||\n                  (direccionProvincia.touched && !direccionProvincia.valid)\n              }\"\n              [(ngModel)]=\"usuarioUpdate.direccion.localidad.provincia.id\"\n              (ngModelChange)=\"updateLocalidades(provinciaId)\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let provincia of provincias\"\n                value=\"{{ provincia.id }}\"\n              >\n                {{ provincia.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && direccionProvincia.invalid) ||\n                (direccionProvincia.touched && !direccionProvincia.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionProvincia.errors.required ||\n                  direccionProvincia.invalid\n                \"\n              >\n                * Seleccione una Provincia\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"provinciaId != 0\" class=\"form-group col-md-4\">\n            <label for=\"localidad\">(*) Localidad</label>\n            <select\n              class=\"form-control\"\n              name=\"localidad\"\n              id=\"localidad\"\n              #direccionLocalidad=\"ngModel\"\n              [(ngModel)]=\"localidadId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionLocalidad.invalid) ||\n                  (direccionLocalidad.touched && !direccionLocalidad.valid)\n              }\"\n              [(ngModel)]=\"usuarioUpdate.direccion.localidad.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let localidad of localidades\"\n                value=\"{{ localidad.id }}\"\n              >\n                <span> {{ localidad.nombre }} </span>\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && direccionLocalidad.invalid) ||\n                (direccionLocalidad.touched && !direccionLocalidad.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionLocalidad.errors.required ||\n                  direccionLocalidad.invalid\n                \"\n              >\n                * Seleccione una Localidad\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row justify-content-center m-4 w-100\">\n            <h4>Rol</h4>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"rol\">(*) Rol</label>\n            <select\n              class=\"form-control\"\n              name=\"rol\"\n              id=\"rol\"\n              #direccionLocalidad=\"ngModel\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && direccionLocalidad.invalid) ||\n                  (direccionLocalidad.touched && !direccionLocalidad.valid)\n              }\"\n              [(ngModel)]=\"usuarioUpdate.rol.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option string-to-number value=\"1\">ROL_ADMIN</option>\n              <option string-to-number value=\"2\">ROL_MONITOR</option>\n              <option string-to-number value=\"3\">ROL_USUARIO</option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && direccionLocalidad.invalid) ||\n                (direccionLocalidad.touched && !direccionLocalidad.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  direccionLocalidad.errors.required ||\n                  direccionLocalidad.invalid\n                \"\n              >\n                * Seleccione una Localidad\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalUser let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{ textoModal }}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss(); refresh()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { CallToActionComponent } from '@shared/components/call-to-action/call-to-action.component';\nimport { PlanesSuscripcionComponent } from '@shared/components/planes-suscripcion/planes-suscripcion.component';\n\n@Component({\n  selector: 'app-servicios',\n  templateUrl: './servicios.component.html',\n  styleUrls: ['./servicios.component.css']\n})\nexport class PageServiciosComponent implements OnInit {\n\n  public pageTitle: string;\n  public pageDesc: string;\n  public pageImg: string;\n\n  constructor() {\n    this.pageTitle = 'Nuestros Servicios';\n    this.pageDesc = 'Estamos aqui para ayudarte';\n    this.pageImg = 'servicios.jpg';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pagetitle [pageTitle]=\"pageTitle\" [pageDesc]=\"pageDesc\" [pageImg]=\"pageImg\"></app-pagetitle>\n<servicios-all></servicios-all>\n<shared-call-to-action\n    [title]=\"'¿Esperabas algo más?'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [paddingTop]=\"'p-t-200'\"\n    [paddingBottom]=\"'p-b-200'\"\n    [img]=\"'chica.jpg'\"\n    [overlayStyle] = \"10\"\n    [btnTxt]=\"'Sorpréndenos'\"\n    [btnUrl]=\"'/contacto'\"\n    [btnClass]=\"'btn-lg btn-rounded'\"\n    ></shared-call-to-action>\n<shared-planes-suscripcion></shared-planes-suscripcion>\n<shared-call-to-action\n    [title]=\"'No te pierdas nuestras promociones'\"\n    [classTitle]=\"'text-light text-medium'\"\n    [descr]=\"'Cambiamos con mucha frecuencia nuestras ofertas y promociones para que siempra tengas una buena razón de unirte a nosotros. ¿Quieres saber cuál es la tuya?'\"\n    [img]=\"'bike.jpg'\"\n    [overlayStyle] = \"8\"\n    [btnTxt]=\"'Pregúntanos'\"\n    [btnUrl]=\"'/registro'\"\n    [btnClass]=\"'btn-light btn-lg btn-rounded'\"\n    ></shared-call-to-action>","<div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n  <button\n    id=\"plus\"\n    (click)=\"habilitarReserva()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-plus\"></i> Reserva\n  </button>\n  <button\n    id=\"minus\"\n    (click)=\"deshabilitarReserva()\"\n    type=\"button\"\n    class=\"btn btn-light\"\n  >\n    <i class=\"icon-minus\"></i> Reserva\n  </button>\n</div>\n<div *ngIf=\"mostrarReservaAdd == true\">\n  <app-reserva-add></app-reserva-add>\n</div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-4\">\n    <h3 class=\"text-left\">Reserva</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-8 d-flex justify-content-end\">\n    <div class=\"form-outline\">\n      <label\n        >Usuario:\n        <input\n          [(ngModel)]=\"filterUser\"\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          placeholder=\"\"\n      /></label>\n      <label for=\"\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary mt-2\"\n          (click)=\"filtrarTabla()\"\n        >\n          <i class=\"fas fa-search\"></i>\n        </button>\n      </label>\n\n      <button\n        style=\"height: 40px\"\n        (click)=\"quitarFiltroTabla()\"\n        type=\"button\"\n        class=\"btn btn-secondary mt-2 ml-4\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Recurrente\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Slot\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Horario\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Usuario\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let reserva of reservas\" class=\"text-center\">\n        <td class=\"text-left\">\n          {{ reserva.recurrente == true ? \"Sí\" : \"No\" }}\n        </td>\n        <td class=\"text-left\">{{ reserva.slot.diaSemana }}</td>\n        <td>{{ reserva.slot.horaInicio | formatoHora }}</td>\n        <td class=\"text-left\">{{ reserva.usuario.nombre }}</td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, reserva)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete, this.reserva)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Recurrente</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Slot</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Horario</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Usuario</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¿Seguro que quieres borrar la reserva\n        <span class=\"text-danger\"\n          >{{ reservaAux.slot.diaSemana }} ({{\n            reservaAux.slot.horaInicio | formatoHora\n          }})?</span\n        >\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancelar\n    </button>\n    <button (click)=\"delete()\" type=\"button\" class=\"btn btn-primary\">\n      Borrar\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Ejercicio</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"reservaUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalReserva)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-2\">\n            <label for=\"recurrente\">(*) Recurrente</label>\n            <select\n              class=\"form-control\"\n              name=\"recurrente\"\n              id=\"recurrente\"\n              #reservaRecurrrente=\"ngModel\"\n              [(ngModel)]=\"reservaUpdate.recurrente\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && reservaRecurrrente.invalid) ||\n                  (reservaRecurrrente.touched && !reservaRecurrrente.valid)\n              }\"\n              [(ngModel)]=\"reservaUpdate.recurrente\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option value=\"true\">Sí</option>\n              <option value=\"false\">No</option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && reservaRecurrrente.invalid) ||\n                (reservaRecurrrente.touched && !reservaRecurrrente.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  reservaRecurrrente.errors.required ||\n                  reservaRecurrrente.invalid\n                \"\n              >\n                * opción no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"slot\">(*) Slot</label>\n            <select\n              class=\"form-control\"\n              name=\"slot\"\n              id=\"slot\"\n              #reservaSlot=\"ngModel\"\n              [(ngModel)]=\"slotId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && reservaSlot.invalid) ||\n                  (reservaSlot.touched && !reservaSlot.valid)\n              }\"\n              [(ngModel)]=\"reservaUpdate.slot.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option *ngFor=\"let slot of slots\" value=\"{{ slot.id }}\">\n                {{ slot.actividad.nombre }} -\n                {{ slot.horaInicio | formatoHora }} - {{ slot.diaSemana }}\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && reservaSlot.invalid) ||\n                (reservaSlot.touched && !reservaSlot.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div *ngIf=\"reservaSlot.errors.required || reservaSlot.invalid\">\n                * slot no válido\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"usuario\">(*) Usuario</label>\n            <select\n              class=\"form-control\"\n              name=\"usuario\"\n              id=\"usuario\"\n              #reservaUsuario=\"ngModel\"\n              [(ngModel)]=\"usuarioId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && reservaUsuario.invalid) ||\n                  (reservaUsuario.touched && !reservaUsuario.valid)\n              }\"\n              [(ngModel)]=\"reservaUpdate.usuario.id\"\n            >\n              <option value=\"\" selected>- Elige una opción -</option>\n              <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n                {{ usuario.nombre }}\n              </option>\n            </select>\n            <div\n              *ngIf=\"\n                (f.submitted && reservaUsuario.invalid) ||\n                (reservaUsuario.touched && !reservaUsuario.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"reservaUsuario.errors.required || reservaUsuario.invalid\"\n              >\n                * Usuario no válida\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalReserva let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{ textoModal }}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss(); refresh()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Reserva } from \"@modelsRest/Reserva\";\nimport { Slot } from \"@modelsRest/Slot\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { ReservaServiceService } from \"@servicesRest/reserva/reserva-service.service\";\nimport { SlotServiceService } from \"@servicesRest/slot/slot-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HelperService } from \"@core/services/helper.service\";\n\n@Component({\n  selector: \"app-reserva-list\",\n  templateUrl: \"./reserva-list.component.html\",\n  styleUrls: [\"./reserva-list.component.css\"],\n})\nexport class ReservaListComponent implements OnInit {\n  mostrarReservaAdd: boolean = false;\n  reservas: Reserva[];\n\n  //update\n  reservaUpdate: any;\n  usuarios: Usuario[];\n  slots: Slot[];\n  textoModal: string;\n\n  //confirm delete\n  reservaAux: any;\n\n  //filtros\n  filterUser: any;\n  mainTablaReserva: Reserva[];\n  filterTabla: Reserva[];\n\n  constructor(\n    private _service: ReservaServiceService,\n    private _serviceSlot: SlotServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService\n  ) {\n    this.reservaUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isNotRol(\"user\");\n    document.getElementById(\"minus\").hidden = true;\n    this._service.getreservas().subscribe((data) => {\n      this.reservas = data;\n      this.mainTablaReserva = data;\n    });\n\n    this._serviceSlot.getSlots().subscribe((data) => {\n      this.slots = data;\n    });\n\n    this._serviceUsuario.getUsuariosByRol(3).subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteReserva(this.reservaAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n  update(modal) {\n    this._service.updateReserva(this.reservaUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Tipo actividad actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarReserva() {\n    this.mostrarReservaAdd = true;\n    document.getElementById(\"plus\").hidden = true;\n    document.getElementById(\"minus\").hidden = false;\n  }\n  deshabilitarReserva() {\n    this.mostrarReservaAdd = false;\n    document.getElementById(\"plus\").hidden = false;\n    document.getElementById(\"minus\").hidden = true;\n  }\n\n  open(content, reserva: Reserva) {\n    this._service.getReserva(reserva.id).subscribe((data) => {\n      this.reservaUpdate = data;\n    });\n    this.modalService\n      .open(content, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"xl\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  openModalDelete(confirmDelete, reserva: Reserva) {\n    this.reservaAux = reserva;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n  filtrarTabla() {\n    this.filterTabla = [];\n\n    for (let reserva of this.mainTablaReserva) {\n      if (reserva.usuario.nombre.toLowerCase() == this.filterUser.toLowerCase()) {\n        this.filterTabla.push(reserva);\n      }\n    }\n\n    if (this.filterTabla.length > 0) {\n      this.reservas = this.filterTabla;\n    } else {\n      this.reservas = this.mainTablaReserva;\n    }\n  }\n\n  quitarFiltroTabla() {\n    this.reservas = this.mainTablaReserva;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageServiciosComponent } from './pages/servicios/servicios.component';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { AllServiciosComponent } from './components/all-servicios/all-servicios.component';\n\n@NgModule({\n  declarations: [PageServiciosComponent, AllServiciosComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [PageServiciosComponent]\n})\nexport class ServiciosModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-localidad-add',\n  templateUrl: './localidad-add.component.html',\n  styleUrls: ['./localidad-add.component.css']\n})\nexport class LocalidadAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>localidad-add works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { Provincia } from \"@modelsRest/Provincia\";\nimport { Localidad } from \"@modelsRest/Localidad\";\nimport { TipoSuscripcion } from \"@modelsRest/TipoSuscripcion\";\n\nimport {md5} from 'pure-md5';\nimport { DatePipe } from '@angular/common';\n\nimport { HelperService } from '@core/services/helper.service';\nimport { UsuarioServiceService as UsuarioService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { DireccionServiceService as DireccionService } from \"@servicesRest/direccion/direccion-service.service\";\nimport { LocalidadServiceService as LocalidadService } from \"@servicesRest/localidad/localidad-service.service\";\nimport { ProvinciaServiceService as ProvinciaService } from \"@servicesRest/provincia/provincia-service.service\";\nimport { TaquillaServiceService as TaquillaService } from \"@servicesRest/taquilla/taquilla-service.service\";\nimport { TipoSuscripcionServiceService as TipoSuscripcionService } from \"@servicesRest/tipo_suscripcion/tipo-suscripcion-service.service\";\nimport { SuscripcionServiceService as SuscripcionService } from \"@servicesRest/suscripcion/suscripcion-service.service\";\nimport { Suscripcion } from '@modelsRest/suscripcion';\n\ndeclare var $:any;\n@Component({\n  selector: 'app-datos',\n  templateUrl: './datos.component.html',\n  styleUrls: ['./datos.component.css']\n})\nexport class PageCuentaDatosComponent implements OnInit {\n  public menuActive: string = 'datos';\n  public title: string = 'Mis Datos';\n\n  public usuarioUpdate: any;\n  public provinciaId:number;\n  public localidadId:number;\n  public provincias: Provincia[];\n  public localidades: Localidad[];\n  public password:string = \"\";\n\n  public isDataLoaded:boolean = false;\n\n  public sessionUser: any;\n\n  public suscripcionTipos: TipoSuscripcion[];\n  public suscripcionTipoID: number;\n  public nuevaSuscripcion: any = {};\n\n  constructor(\n    private _serviceRestUser: UsuarioService,\n    private _serviceDireccion: DireccionService,\n    private _serviceLocalidad: LocalidadService,\n    private _serviceProvincia: ProvinciaService,\n    private _serviceTaquilla: TaquillaService,\n    private _serviceTipoSuscripcion: TipoSuscripcionService,\n    private _serviceSuscripcion: SuscripcionService,\n    private _helperService: HelperService,\n    private _modalService: NgbModal,\n    private datePipe:DatePipe\n  ) { \n    this.usuarioUpdate={};\n  }\n\n  ngOnInit(): void {\n    this._helperService.checkIsLoginAndRedirectToLogin();\n    this._helperService.getSessionUser()\n    .then((user:any)=>{\n      this.sessionUser = user;\n      console.log(this.sessionUser);\n    })\n    .then(()=>{\n      this.getUsuarioUpdate();\n    });\n  }\n\n  update(){\n    this.getProvincia()\n    .then(()=>this.getLocalidad())\n    .then(()=>this.getTaquilla())\n    .then(()=>{\n      //console.log(this.usuarioUpdate);\n      this.usuarioUpdate.password = md5(this.password);\n      this._serviceRestUser.updateUsuario(this.usuarioUpdate).subscribe(data=>{\n        $.notify({\n          // options\n          icon: 'fas fa-check',\n          title: '¡Muy bien!',\n          message: 'Tus datos se han actualizado correctamente',\n        },{\n          // settings\n          type: 'success'\n        });\n      },(err)=>{\n        //console.log(err);\n        $.notify({\n          // options\n          icon: 'fas fa-close',\n          title: 'Lo sentimos, ha habido un error!',\n          message: err.error.message,\n        },{\n          // settings\n          type: 'danger'\n        });\n      });\n    })\n  }\n\n  updateLocalidades(provinciaId){\n    this.usuarioUpdate.direccion.localidad.id = \"\";\n    this._serviceLocalidad.getLocalidadesByProvinciaID(provinciaId).subscribe((data) => {\n      this.localidades = data;\n    }); \n  }\n\n  loadProvincias(){\n    this._serviceProvincia.getProvincias().subscribe(data=>{\n      this.provincias = data;\n    });\n  }\n\n  getTaquilla(){\n    return this._serviceTaquilla.getTaquilla(1)\n    .toPromise()\n    .then(data=>{\n      this.usuarioUpdate.taquilla = data;\n    });\n  }\n\n  getLocalidad(){\n    return this._serviceLocalidad.getLocalidad(this.usuarioUpdate.direccion.localidad.id)\n    .toPromise()\n    .then(data=>{\n      this.usuarioUpdate.direccion.localidad = data;\n    });\n  }\n\n  getProvincia(){\n    return this._serviceProvincia.getProvincia(this.usuarioUpdate.direccion.localidad.provincia.id)\n    .toPromise()\n    .then(data=>{\n      this.usuarioUpdate.direccion.localidad.provincia = data;\n    })\n  }\n\n  getUsuarioUpdate(){\n     return this._serviceRestUser.getUsuario(this.sessionUser.id).toPromise()\n     .then((data) => {\n      this.usuarioUpdate = data;\n      this.usuarioUpdate.fechaNacimiento = this.datePipe.transform(this.usuarioUpdate.fechaNacimiento, 'yyyy-MM-dd' /*'dd-MM-yyyy'*/);\n      //console.log(this.usuarioUpdate);\n    })\n    .then(()=>{\n      return this._serviceProvincia.getProvincias().toPromise()\n    })\n    .then(data => {\n      return this.provincias = data;\n    })\n    .then(()=>{\n      return this._serviceLocalidad.getLocalidadesByProvinciaID(this.usuarioUpdate.direccion.localidad.provincia.id).toPromise();\n    })\n    .then((data) => {\n      return this.localidades = data;\n    })\n    .then(()=>{\n      this.isDataLoaded = true;\n    });\n  }\n\n  open(content:any) {\n    this._serviceTipoSuscripcion.getTiposSuscripcion().toPromise()\n    .then((data) => {\n      this.suscripcionTipos = data;\n    })\n    .then(()=>{\n      this._modalService.open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {\n          //this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          //this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n    });\n  }\n\n  addSuscripcion() {\n    var fechaAlta = new Date();\n    this.nuevaSuscripcion.fechaAlta = fechaAlta.toISOString();\n\n    this.getTipoSuscripcion()\n      .then(()=>{\n        if(this.nuevaSuscripcion.recurrente) {\n          this.nuevaSuscripcion.fechaBaja = null;\n        } else {\n          //calculamos la fecha de baja\n          var fechaBaja = new Date();\n          fechaBaja.setDate(fechaAlta.getDate() + this.nuevaSuscripcion.tipoSuscripcion.duracion);\n          this.nuevaSuscripcion.fechaBaja = fechaBaja.toISOString();\n        }\n      })\n      .then(() => this.getUsuario())\n      .then(() => {\n        \n        this._serviceSuscripcion.createSuscripcion(this.nuevaSuscripcion).subscribe(\n          (data) => {\n            this._helperService.checkAndSaveSessionSubscription()\n            .then(()=>{\n              return this._helperService.getSessionUser();\n            })\n            .then((user:any)=>{\n              this.sessionUser = user;\n              //console.log(this.sessionUser);\n            })\n            .then(()=>{\n\n              this.closeModal();\n              $.notify({\n                // options\n                icon: 'fas fa-check',\n                title: '¡Muy bien!',\n                message: 'Tienes una nueva suscripción.',\n              },{\n                // settings\n                type: 'success'\n              });\n\n            });\n          },\n          (err) => {\n\n            $.notify({\n              // options\n              icon: 'fas fa-close',\n              title: 'Lo sentimos, ha habido un error!',\n              message: err.error.message,\n            },{\n              // settings\n              type: 'danger'\n            });\n\n          }\n        );\n      });\n  }\n\n  getTipoSuscripcion() {\n    return this._serviceTipoSuscripcion\n      .getTipoSuscripcion(this.suscripcionTipoID)\n      .toPromise()\n      .then((data) => {\n        this.nuevaSuscripcion.tipoSuscripcion = data;\n      });\n  }\n\n  getUsuario() {\n    return this._serviceRestUser\n      .getUsuario(this.sessionUser.id)\n      .toPromise()\n      .then((data) => {\n        this.nuevaSuscripcion.usuario = data;\n      });\n  }\n\n  closeModal(){\n    this._modalService.dismissAll();\n  }\n\n}\n","<section class=\"pt-5\">\n  <div class=\"container\">\n    <div class=\"row mb-5\">\n      <div class=\"col-lg-12 text-center mb-3\">\n        <div\n          class=\"heading-text heading-line heading-gradient text-center mb-0\"\n        >\n          <h4 class=\"mb-0 font-size-h2\">\n            <span>{{ title }}</span>\n          </h4>\n        </div>\n      </div>\n      <div *ngIf=\"!isDataLoaded\" class=\"col-lg-12 my-5\">\n        <div *ngIf=\"!isDataLoaded\" class=\"d-flex justify-content-center\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Cargando...</span>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"isDataLoaded\" class=\"col-lg-12\">\n        <!-- suscripcion -->\n        <div class=\"row my-4\">\n          <div class=\"col-md-12 mb-4\">\n            <h4 class=\"text-primary\">Datos Suscripción</h4>\n          </div>\n          <div class=\"col-md-12\" *ngIf=\"sessionUser.suscripcion.isSubscribed\">\n            <div class=\"\">\n              Fecha Alta:\n              <span class=\"font-weight-bold\">{{\n                sessionUser.suscripcion.suscripcion.fechaAlta | date: mediumDate\n              }}</span>\n            </div>\n            <div\n              class=\"\"\n              *ngIf=\"sessionUser.suscripcion.suscripcion.fechaBaja != null\"\n            >\n              Fecha Baja:\n              <span class=\"font-weight-bold\">{{\n                sessionUser.suscripcion.suscripcion.fechaBaja | date: mediumDate\n              }}</span>\n            </div>\n            <div class=\"\">\n              Tipo de Suscripicón:\n              <span class=\"font-weight-bold\">{{\n                sessionUser.suscripcion.suscripcion.tipoSuscripcion.nombre\n              }}</span>\n            </div>\n            <div class=\"\">\n              Tarifa:\n              <span class=\"font-weight-bold\">{{\n                sessionUser.suscripcion.suscripcion.tipoSuscripcion.tarifa\n                  | currency: \"€\"\n              }}</span>\n            </div>\n          </div>\n          <div class=\"col-md-12\" *ngIf=\"!sessionUser.suscripcion.isSubscribed\">\n            <div class=\"\">\n              <button class=\"btn btn-primary\" (click)=\"open(modal)\">\n                Suscríbete\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"line\"></div>\n\n        <!-- suscripcion -->\n        <div class=\"row my-4\">\n          <div class=\"col-md-12 mb-4\">\n            <h4 class=\"text-primary\">Imagen perfil</h4>\n          </div>\n          <div class=\"col-md-12\">\n            <cuenta-upload-image [user]=\"sessionUser\"></cuenta-upload-image>\n          </div>\n        </div>\n        <div class=\"line\"></div>\n\n        <form\n          class=\"form-validate\"\n          name=\"form\"\n          (ngSubmit)=\"f.form.valid && update()\"\n          #f=\"ngForm\"\n        >\n          <div class=\"row my-4\">\n            <div class=\"col-md-12 mb-2\">\n              <h4 class=\"text-primary\">Datos Usuario</h4>\n            </div>\n            <div class=\"col-md-12\">\n              <h5>Datos Personales</h5>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label for=\"nombre\"\n                >Nombre <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"nombre\"\n                name=\"nombre\"\n                #usuarioNombre=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.nombre\"\n                placeholder=\"Nombre usuario\"\n                required\n                pattern=\"^([a-zA-Za´´eíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,50}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioNombre.invalid) ||\n                    (usuarioNombre.touched && !usuarioNombre.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioNombre.invalid) ||\n                  (usuarioNombre.touched && !usuarioNombre.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"usuarioNombre.errors.required || usuarioNombre.invalid\"\n                >\n                  Nombre no válido\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-4\">\n              <label for=\"apellido\"\n                >Apellido <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"apellido\"\n                name=\"apellido\"\n                #usuarioApellido=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.apellidos\"\n                placeholder=\"Apellidos usuario\"\n                required\n                pattern=\"^([a-zA-ZáéíóúÁÉÍÓÚ]){1}[a-zA-Z áéíóúÁÉÍÓÚ]{2,70}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioApellido.invalid) ||\n                    (usuarioApellido.touched && !usuarioApellido.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioApellido.invalid) ||\n                  (usuarioApellido.touched && !usuarioApellido.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    usuarioApellido.errors.required || usuarioApellido.invalid\n                  \"\n                >\n                  Apellido no válido\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-4\">\n              <label for=\"dni\">DNI <span class=\"text-danger\">*</span></label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"dni\"\n                name=\"dni\"\n                #usuarioDni=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.dni\"\n                placeholder=\"ej: 55668877X\"\n                required\n                pattern=\"^(\\d){8}[a-zA-Z]{1}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioDni.invalid) ||\n                    (usuarioDni.touched && !usuarioDni.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioDni.invalid) ||\n                  (usuarioDni.touched && !usuarioDni.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"usuarioDni.errors.required || usuarioDni.invalid\">\n                  Dni no válido\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label for=\"email\"\n                >Email <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                autocomplete=\"username\"\n                #usuarioEmail=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.email\"\n                placeholder=\"Email usuario\"\n                required\n                pattern=\"^([a-z0-9]{1})((\\.|\\-)?([a-z0-9])){0,}@([a-z0-9]){1}((\\.|\\-)?([a-z0-9]))*\\.([a-z]){2,4}$\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioEmail.invalid) ||\n                    (usuarioEmail.touched && !usuarioEmail.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioEmail.invalid) ||\n                  (usuarioEmail.touched && !usuarioEmail.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"usuarioEmail.errors.required || usuarioEmail.invalid\"\n                >\n                  Email no válido\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-4\">\n              <label for=\"telefono\"\n                >Teléfono <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"telefono\"\n                name=\"telefono\"\n                #usuarioTelefono=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.telefono\"\n                placeholder=\"Ej:666555444\"\n                required\n                pattern=\"^(6|7|8|9){1}\\d{8,9}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioTelefono.invalid) ||\n                    (usuarioTelefono.touched && !usuarioTelefono.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioTelefono.invalid) ||\n                  (usuarioTelefono.touched && !usuarioTelefono.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    usuarioTelefono.errors.required || usuarioTelefono.invalid\n                  \"\n                >\n                  Teléfono no válido\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-4\">\n              <label for=\"fechaNacimiento\"\n                >Fecha Nacimiento <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                id=\"fechaNacimiento\"\n                name=\"fechaNacimiento\"\n                #usuarioFechaNacimiento=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.fechaNacimiento\"\n                placeholder=\"Fecha de Nacimiento\"\n                required\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioFechaNacimiento.invalid) ||\n                    (usuarioFechaNacimiento.touched &&\n                      !usuarioFechaNacimiento.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioFechaNacimiento.invalid) ||\n                  (usuarioFechaNacimiento.touched &&\n                    !usuarioFechaNacimiento.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    usuarioFechaNacimiento.errors.required ||\n                    usuarioFechaNacimiento.invalid\n                  \"\n                >\n                  Fecha no válida\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-12\">\n              <label for=\"cuentaBancaria\"\n                >Cuenta Bancaria <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"cuentaBancaria\"\n                name=\"cuentaBancaria\"\n                #usuarioCuentaBancaria=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.cuentaBancaria\"\n                placeholder=\"ES55 4444 4444 44 444444444 \"\n                required\n                pattern=\"(ES\\d{2} \\d{4} \\d{4} \\d{2} \\d{10}|ES\\d{22})\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioCuentaBancaria.invalid) ||\n                    (usuarioCuentaBancaria.touched &&\n                      !usuarioCuentaBancaria.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioCuentaBancaria.invalid) ||\n                  (usuarioCuentaBancaria.touched &&\n                    !usuarioCuentaBancaria.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    usuarioCuentaBancaria.errors.required ||\n                    usuarioCuentaBancaria.invalid\n                  \"\n                >\n                  Cuenta Bancaria no válida\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"password\"\n                >Password <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                autocomplete=\"current-password\"\n                #usuarioPassword=\"ngModel\"\n                [(ngModel)]=\"password\"\n                placeholder=\"6 caract. min (por ahora)\"\n                required\n                pattern=\"\\w{6,}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && usuarioPassword.invalid) ||\n                    (usuarioPassword.touched && !usuarioPassword.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && usuarioPassword.invalid) ||\n                  (usuarioPassword.touched && !usuarioPassword.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    usuarioPassword.errors.required || usuarioPassword.invalid\n                  \"\n                >\n                  Password no válida\n                </div>\n              </div>\n            </div>\n          \n\n          <div *ngIf=\"password!='' \" class=\"form-group col-md-6\">\n            <label for=\"confirmPassword\">(*) Confirmar Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              #confirmPassword=\"ngModel\"\n              [(ngModel)]=\"confirmPass\"\n              placeholder=\"6 caract. min (por ahora)\"\n              required\n              pattern=\"{{password}}\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && confirmPassword.invalid) ||\n                  (confirmPassword.touched && !confirmPassword.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && confirmPassword.invalid) ||\n                (confirmPassword.touched && !confirmPassword.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"confirmPassword.errors.required || confirmPassword.invalid\"\n              >\n                * Password no coincide\n              </div>\n            </div>\n          </div>\n        </div>\n\n          <div class=\"row my-4\">\n            <div class=\"col-md-12\">\n              <h5>Datos Dirección</h5>\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-5\">\n              <label for=\"calle\"\n                >Calle <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"calle\"\n                name=\"calle\"\n                #direccionCalle=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.calle\"\n                placeholder=\"C/\"\n                required\n                pattern=\"^([a-zA-Z]){1}([a-zA-Z ]){2,50}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionCalle.invalid) ||\n                    (direccionCalle.touched && !direccionCalle.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionCalle.invalid) ||\n                  (direccionCalle.touched && !direccionCalle.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionCalle.errors.required || direccionCalle.invalid\n                  \"\n                >\n                  Calle no válida\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-4\">\n              <label for=\"numero\"\n                >Número <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"numero\"\n                name=\"numero\"\n                #direccionNumero=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.numero\"\n                placeholder=\"Nº\"\n                min=\"1\"\n                max=\"1000\"\n                required\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionNumero.invalid) ||\n                    (direccionNumero.touched && !direccionNumero.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionNumero.invalid) ||\n                  (direccionNumero.touched && !direccionNumero.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionNumero.errors.required || direccionNumero.invalid\n                  \"\n                >\n                  Número no válido\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n              <label for=\"bloque\">Bloque</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"bloque\"\n                name=\"bloque\"\n                #direccionBloque=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.bloque\"\n                placeholder=\"Ej: 1\"\n                pattern=\"^([1-9]\\d*)\"\n                min=\"1\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionBloque.invalid) ||\n                    (direccionBloque.touched && !direccionBloque.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionBloque.invalid) ||\n                  (direccionBloque.touched && !direccionBloque.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionBloque.errors.required || direccionBloque.invalid\n                  \"\n                >\n                  Bloque no válido\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n              <label for=\"escalera\">Escalera</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"escalera\"\n                name=\"escalera\"\n                #direccionEscalera=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.escalera\"\n                placeholder=\"Ej: 1\"\n                pattern=\"^([1-9]\\d*)\"\n                min=\"1\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionEscalera.invalid) ||\n                    (direccionEscalera.touched && !direccionEscalera.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionEscalera.invalid) ||\n                  (direccionEscalera.touched && !direccionEscalera.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionEscalera.errors.required ||\n                    direccionEscalera.invalid\n                  \"\n                >\n                  Escalera no válida\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n              <label for=\"piso\">Piso</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"piso\"\n                name=\"piso\"\n                #direccionPiso=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.piso\"\n                placeholder=\"Ej: 1\"\n                pattern=\"^([1-9]\\d*)\"\n                min=\"1\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionPiso.invalid) ||\n                    (direccionPiso.touched && !direccionPiso.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionPiso.invalid) ||\n                  (direccionPiso.touched && !direccionPiso.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"direccionPiso.errors.required || direccionPiso.invalid\"\n                >\n                  Piso no válido\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n              <label for=\"puerta\">Puerta</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"puerta\"\n                name=\"puerta\"\n                #direccionPuerta=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.puerta\"\n                placeholder=\"Ej: 1,A\"\n                pattern=\"^(\\d|[a-zA-Z]{1})\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionPuerta.invalid) ||\n                    (direccionPuerta.touched && !direccionPuerta.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionPuerta.invalid) ||\n                  (direccionPuerta.touched && !direccionPuerta.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionPuerta.errors.required || direccionPuerta.invalid\n                  \"\n                >\n                  Puerta no válida\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n              <label for=\"cp\"\n                >Código Postal <span class=\"text-danger\">*</span></label\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"cp\"\n                name=\"cp\"\n                #direccionCP=\"ngModel\"\n                [(ngModel)]=\"usuarioUpdate.direccion.codigoPostal\"\n                placeholder=\"Ej: 29850\"\n                required\n                pattern=\"^\\d{5,6}\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionCP.invalid) ||\n                    (direccionCP.touched && !direccionCP.valid)\n                }\"\n              />\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionCP.invalid) ||\n                  (direccionCP.touched && !direccionCP.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"direccionCP.errors.required || direccionCP.invalid\">\n                  Código Postal no válido\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"provincia\"\n                >Provincia <span class=\"text-danger\">*</span></label\n              >\n              <select\n                class=\"form-control\"\n                name=\"provincia\"\n                id=\"provincia\"\n                #direccionProvincia=\"ngModel\"\n                [(ngModel)]=\"provinciaId\"\n                required\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionProvincia.invalid) ||\n                    (direccionProvincia.touched && !direccionProvincia.valid)\n                }\"\n                [(ngModel)]=\"usuarioUpdate.direccion.localidad.provincia.id\"\n                (ngModelChange)=\"updateLocalidades(provinciaId)\"\n              >\n                <option value=\"\" selected>Seleccione una provincia</option>\n                <option\n                  *ngFor=\"let provincia of provincias\"\n                  value=\"{{ provincia.id }}\"\n                >\n                  {{ provincia.nombre }}\n                </option>\n              </select>\n\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionProvincia.invalid) ||\n                  (direccionProvincia.touched && !direccionProvincia.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionProvincia.errors.required ||\n                    direccionProvincia.invalid\n                  \"\n                >\n                  Seleccione una Provincia\n                </div>\n              </div>\n            </div>\n\n            <div *ngIf=\"provinciaId != 0\" class=\"form-group col-md-6\">\n              <label for=\"localidad\"\n                >Localidad <span class=\"text-danger\">*</span></label\n              >\n              <select\n                class=\"form-control\"\n                name=\"localidad\"\n                id=\"localidad\"\n                #direccionLocalidad=\"ngModel\"\n                [(ngModel)]=\"localidadId\"\n                required\n                [ngClass]=\"{\n                  'is-invalid':\n                    (f.submitted && direccionLocalidad.invalid) ||\n                    (direccionLocalidad.touched && !direccionLocalidad.valid)\n                }\"\n                [(ngModel)]=\"usuarioUpdate.direccion.localidad.id\"\n              >\n                <option value=\"\" selected>Seleccione una localidad</option>\n                <option\n                  *ngFor=\"let localidad of localidades\"\n                  value=\"{{ localidad.id }}\"\n                >\n                  <span> {{ localidad.nombre }} </span>\n                </option>\n              </select>\n\n              <div\n                *ngIf=\"\n                  (f.submitted && direccionLocalidad.invalid) ||\n                  (direccionLocalidad.touched && !direccionLocalidad.valid)\n                \"\n                class=\"invalid-feedback\"\n              >\n                <div\n                  *ngIf=\"\n                    direccionLocalidad.errors.required ||\n                    direccionLocalidad.invalid\n                  \"\n                >\n                  Seleccione una Localidad\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-outline-dark\">\n            Modificar Datos\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #modal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-label\">\n      <span class=\"badge badge-pill badge-primary claseTitle text-uppercase\"\n        >Nueva Suscripción</span\n      >\n    </h4>\n    <button type=\"button\" class=\"close\" (click)=\"modal.dismiss()\">\n      <i class=\"icon-x\"></i>\n    </button>\n  </div>\n  <form\n    class=\"form-validate\"\n    name=\"form\"\n    (ngSubmit)=\"f.form.valid && addSuscripcion()\"\n    #f=\"ngForm\"\n  >\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group col-md-12\">\n            <label for=\"tipoEjercicio\"\n              >Tipo de Suscripción <span class=\"text-danger\">*</span></label\n            >\n            <select\n              class=\"form-control\"\n              name=\"tipoSuscripcion\"\n              id=\"tipoSuscripcion\"\n              #suscripcionTipoSuscripcion=\"ngModel\"\n              [(ngModel)]=\"suscripcionTipoID\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n                  (suscripcionTipoSuscripcion.touched &&\n                    !suscripcionTipoSuscripcion.valid)\n              }\"\n              [(ngModel)]=\"tipoSusSelect\"\n            >\n              <option value=\"\" selected>Selecciona el tipo</option>\n              <option\n                *ngFor=\"let tipoSuscripcion of suscripcionTipos\"\n                value=\"{{ tipoSuscripcion.id }}\"\n              >\n                {{ tipoSuscripcion.nombre }} ({{\n                  tipoSuscripcion.tarifa | currency: \"€\"\n                }})\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n                (suscripcionTipoSuscripcion.touched &&\n                  !suscripcionTipoSuscripcion.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  suscripcionTipoSuscripcion.errors.required ||\n                  suscripcionTipoSuscripcion.invalid\n                \"\n              >\n                * Seleccione un tipo de suscripcion\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group col-md-12\">\n            <input\n              type=\"checkbox\"\n              name=\"recurrente\"\n              class=\"form-control\"\n              [(ngModel)]=\"nuevaSuscripcion.recurrente\"\n            />\n            <label>¿Es recurrente?</label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-sm\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cerrar\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary\">Suscribir</button>\n    </div>\n  </form>\n</ng-template>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<div class=\"team-member\">\n    <div class=\"team-image\">\n        <img [attr.src]=\"memberImgUrl\">\n    </div>\n    <div class=\"team-desc\">\n        <h3>{{ memberNombre }}</h3>\n        <span>{{ memberTitulo }}</span>\n        <p *ngIf=\"memberBio\">{{ memberBio }}</p>\n        \n        <div class=\"align-center\" *ngIf=\"facebook || twitter || instagram || email\">\n            <a class=\"btn btn-xs btn-slide btn-dark\" [attr.href]=\"facebook\" *ngIf=\"facebook\">\n                <i class=\"fab fa-facebook-f\"></i>\n                <span>Facebook</span>\n            </a>\n            <a class=\"btn btn-xs btn-slide btn-dark\" [attr.href]=\"twitter\" data-width=\"100\" *ngIf=\"twitter\">\n                <i class=\"fab fa-twitter\"></i>\n                <span>Twitter</span>\n            </a>\n            <a class=\"btn btn-xs btn-slide btn-dark\" [attr.href]=\"instagram\" data-width=\"118\" *ngIf=\"instagram\">\n                <i class=\"fab fa-instagram\"></i>\n                <span>Instagram</span>\n            </a>\n            <a class=\"btn btn-xs btn-slide btn-dark\" [attr.href]=\"'mailto:'+email\" data-width=\"80\" *ngIf=\"email\">\n                <i class=\"far fa-envelope\"></i>\n                <span>Email</span>\n            </a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'team-member',\n  templateUrl: './team-member.component.html',\n  styleUrls: ['./team-member.component.css']\n})\nexport class TeamMemberComponent implements OnInit {\n\n  @Input() memberNombre: string;\n  @Input() memberTitulo: string;\n  @Input() memberBio: string;\n  @Input() memberImg: string;\n  @Input() facebook: string;\n  @Input() twitter: string;\n  @Input() instagram: string;\n  @Input() email: string;\n\n  public memberImgUrl: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.memberImgUrl = 'assets/fitness/images/trainers/1.png';\n    if(this.memberImg) {\n      this.memberImgUrl = 'assets/fitness/images/trainers/' + this.memberImg;\n    }\n  }\n\n}\n","<app-tipo-suscripcion-list></app-tipo-suscripcion-list>\n\n<div class=\"my-5\"></div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-12\">\n    <div style=\"margin-top: 35px\" class=\"d-flex justify-content-end\">\n      <button\n        id=\"plusSuscripcion\"\n        (click)=\"habilitarSuscripcion()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n      >\n        <i class=\"icon-plus\"></i> Suscripcion\n      </button>\n      <button\n        id=\"minusSuscripcion\"\n        (click)=\"deshabilitarSuscripcion()\"\n        type=\"button\"\n        class=\"btn btn-light\"\n      >\n        <i class=\"icon-minus\"></i> Suscripcion\n      </button>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"mostrarSuscripcionAdd == true\">\n  <app-suscripcion-add></app-suscripcion-add>\n</div>\n\n<div class=\"row input-group\">\n  <div class=\"col-sm-12 col-md-6\">\n    <h3 class=\"text-left\">Suscripción</h3>\n  </div>\n  <div class=\"col-sm-12 col-md-6\">\n    <div class=\"form-outline d-flex justify-content-end\">\n      <label\n        >Nombre :\n        <input\n          [(ngModel)]=\"filterName\"\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          placeholder=\"\"\n      /></label>\n      <button\n        style=\"height: 40px\"\n        type=\"button\"\n        class=\"btn btn-primary mt-4\"\n        (click)=\"filtrarTabla()\"\n      >\n        <i class=\"fas fa-search\"></i>\n      </button>\n      <button\n        style=\"height: 40px\"\n        (click)=\"quitarFiltroTabla()\"\n        type=\"button\"\n        class=\"btn btn-secondary mt-4 ml-4\"\n      >\n        <i class=\"fas fa-sync text-light\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-text\">\n  <table\n    id=\"datatable\"\n    class=\"table table-bordered table-hover dataTable text-center\"\n    style=\"width: 100%\"\n    role=\"grid\"\n    aria-describedby=\"datatable_info\"\n  >\n    <thead>\n      <tr role=\"row\">\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Fecha alta\n        </th>\n\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Fecha baja\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Tipo Suscripción\n        </th>\n        <th\n          id=\"\"\n          class=\"sorting_asc\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-sort=\"ascending\"\n          aria-label=\"Name: activate to sort column descending\"\n          style=\"width: 45px\"\n        >\n          Nombre Usuario\n        </th>\n        <th\n          id=\"\"\n          class=\"noExport sorting\"\n          tabindex=\"0\"\n          aria-controls=\"datatable\"\n          rowspan=\"1\"\n          colspan=\"1\"\n          aria-label=\"Actions: activate to sort column ascending\"\n          style=\"width: 54px\"\n        >\n          Acciones\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let suscripcion of suscripciones\" class=\"text-center\">\n        <!--date:'yyyy-MM-dd'-->\n        <td>{{ suscripcion.fechaAlta | date: 'dd/MM/yyyy' }}</td>\n        <td>{{ suscripcion.fechaBaja | date: 'dd/MM/yyyy' }}</td>\n        <td class=\"text-left\">{{ suscripcion.tipoSuscripcion.nombre }}</td>\n        <td class=\"text-left\">{{ suscripcion.usuario.nombre }}</td>\n        <td>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Edit\"\n            (click)=\"open(content, suscripcion)\"\n            ><i class=\"icon-edit\"></i\n          ></a>\n          <a\n            class=\"ml-2\"\n            data-toggle=\"tooltip\"\n            data-original-title=\"Delete\"\n            (click)=\"openModalDelete(confirmDelete, this.suscripcion)\"\n            ><i class=\"icon-trash-2\"></i\n          ></a>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Fecha Alta</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Fecha Baja</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Tipo Suscripción</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Usuario</th>\n        <th id=\"\" rowspan=\"1\" colspan=\"1\">Acciones</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n\n<!-- modal delete -->\n<ng-template #confirmDelete let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Confirmación</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>\n        ¿Seguro que quieres borrar la suscripción del usuario\n        <span class=\"text-danger\">{{ suscripcionAux.usuario.nombre }} ?</span>\n      </h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss()\"\n    >\n      Cancelar\n    </button>\n    <button (click)=\"delete(usuario)\" type=\"button\" class=\"btn btn-primary\">\n      Borrar\n    </button>\n  </div>\n</ng-template>\n\n<!-- modal update -->\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Update Suscripción</h4>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"suscripcionUpdate.id != null\">\n    <div class=\"card-body\">\n      <form\n        class=\"form-validate\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && update(updateModalSuscripcion)\"\n        #f=\"ngForm\"\n      >\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Fecha de alta</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              name=\"fechaAlta\"\n              #suscripcionFechaAlta=\"ngModel\"\n              [(ngModel)]=\"suscripcionUpdate.fechaAlta\"\n              placeholder=\"Nombre Tipo ejercicio\"\n              required=\"\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && suscripcionFechaAlta.invalid) ||\n                  (suscripcionFechaAlta.touched && !suscripcionFechaAlta.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && suscripcionFechaAlta.invalid) ||\n                (suscripcionFechaAlta.touched && !suscripcionFechaAlta.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  suscripcionFechaAlta.errors.required ||\n                  suscripcionFechaAlta.invalid\n                \"\n              >\n                * Fecha no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"username\">(*) Fecha de baja</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              name=\"fechaBaja\"\n              #ejercicioNombre=\"ngModel\"\n              [(ngModel)]=\"suscripcionUpdate.fechaBaja\"\n              placeholder=\"Nombre Tipo ejercicio\"\n              required=\"\"\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && ejercicioNombre.invalid) ||\n                  (ejercicioNombre.touched && !ejercicioNombre.valid)\n              }\"\n            />\n            <div\n              *ngIf=\"\n                (f.submitted && ejercicioNombre.invalid) ||\n                (ejercicioNombre.touched && !ejercicioNombre.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  ejercicioNombre.errors.required || ejercicioNombre.invalid\n                \"\n              >\n                * Fecha no válida\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"tipoEjercicio\">(*) Tipo de Suscripción</label>\n            <select\n              class=\"form-control\"\n              name=\"tipoSuscripcion\"\n              id=\"tipoSuscripcion\"\n              #suscripcionTipoSuscripcion=\"ngModel\"\n              [(ngModel)]=\"tipoSuscripcionId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n                  (suscripcionTipoSuscripcion.touched &&\n                    !suscripcionTipoSuscripcion.valid)\n              }\"\n              [(ngModel)]=\"suscripcionUpdate.tipoSuscripcion.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option\n                *ngFor=\"let tipoSuscripcion of tiposSuscripcion\"\n                value=\"{{ tipoSuscripcion.id }}\"\n              >\n                {{ tipoSuscripcion.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n                (suscripcionTipoSuscripcion.touched &&\n                  !suscripcionTipoSuscripcion.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  suscripcionTipoSuscripcion.errors.required ||\n                  suscripcionTipoSuscripcion.invalid\n                \"\n              >\n                * Seleccione un tipo de suscripcion\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group col-md-6\">\n            <label for=\"usuario\">(*) Usuario</label>\n            <select\n              class=\"form-control\"\n              name=\"usuario\"\n              id=\"usuario\"\n              #suscripcionUsuario=\"ngModel\"\n              [(ngModel)]=\"usuarioId\"\n              required\n              [ngClass]=\"{\n                'is-invalid':\n                  (f.submitted && suscripcionUsuario.invalid) ||\n                  (suscripcionUsuario.touched && !suscripcionUsuario.valid)\n              }\"\n              [(ngModel)]=\"suscripcionUpdate.usuario.id\"\n            >\n              <option value=\"\" selected>-- Elige una opción --</option>\n              <option *ngFor=\"let usuario of usuarios\" value=\"{{ usuario.id }}\">\n                {{ usuario.nombre }}\n              </option>\n            </select>\n\n            <div\n              *ngIf=\"\n                (f.submitted && suscripcionTipoSuscripcion.invalid) ||\n                (suscripcionTipoSuscripcion.touched &&\n                  !suscripcionTipoSuscripcion.valid)\n              \"\n              class=\"invalid-feedback\"\n            >\n              <div\n                *ngIf=\"\n                  suscripcionTipoSuscripcion.errors.required ||\n                  suscripcionTipoSuscripcion.invalid\n                \"\n              >\n                * Seleccione un usuario\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            aria-label=\"Close\"\n            (click)=\"modal.dismiss()\"\n          >\n            Cancelar\n          </button>\n          <button type=\"submit\" class=\"btn btn-outline-dark\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #updateModalSuscripcion let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-center\" id=\"modal-basic-title\">Update</h4>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"card-body\">\n      <h3>{{ textoModal }}</h3>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss(); refresh()\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatePipe } from '@angular/common';\nimport { Router } from \"@angular/router\";\nimport { TipoSuscripcion } from \"@modelsRest/TipoSuscripcion\";\nimport { Usuario } from \"@modelsRest/Usuario\";\nimport { SuscripcionServiceService } from \"@servicesRest/suscripcion/suscripcion-service.service\";\nimport { TipoSuscripcionServiceService } from \"@servicesRest/tipo_suscripcion/tipo-suscripcion-service.service\";\nimport { UsuarioServiceService } from \"@servicesRest/usuario/usuario-service.service\";\nimport { HelperService } from \"@core/services/helper.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Suscripcion } from \"@modelsRest/suscripcion\";\n\n@Component({\n  selector: \"app-suscripcion-list\",\n  templateUrl: \"./suscripcion-list.component.html\",\n  styleUrls: [\"./suscripcion-list.component.css\"],\n})\nexport class SuscripcionListComponent implements OnInit {\n  mostrarSuscripcionAdd: boolean = false;\n  suscripciones: Suscripcion[];\n\n  //update\n  suscripcionUpdate: any;\n  tiposSuscripcion: TipoSuscripcion[];\n  usuarios: Usuario[];\n  closeResult = \"\";\n  textoModal: string;\n\n  //confirm delete\n  suscripcionAux: any;\n\n  //filters\n  filterName: string;\n  mainTablaSuscripciones: Suscripcion[];\n  filterTabla: Suscripcion[];\n\n  constructor(\n    private _service: SuscripcionServiceService,\n    private _serviceTipoSuscripcion: TipoSuscripcionServiceService,\n    private _serviceUsuario: UsuarioServiceService,\n    private _router: Router,\n    private modalService: NgbModal,\n    private _helperService: HelperService,\n    private datePipe:DatePipe\n  ) {\n    this.suscripcionUpdate = {};\n  }\n\n  ngOnInit(): void {\n    this._helperService.isRolOK(\"admin\");\n    document.getElementById(\"minusSuscripcion\").hidden = true;\n    this._service.getSuscripciones().subscribe((data) => {\n      this.suscripciones = data;\n      this.mainTablaSuscripciones = data;\n    });\n\n    this._serviceTipoSuscripcion.getTiposSuscripcion().subscribe((data) => {\n      this.tiposSuscripcion = data;\n    });\n\n    this._serviceUsuario.getUsuariosByRol(3).subscribe((data) => {\n      this.usuarios = data;\n    });\n  }\n\n  delete() {\n    this._service.deleteSuscripcion(this.suscripcionAux).subscribe((data) => {\n      window.location.reload();\n    });\n  }\n\n\n  update(modal) {\n    \n    this._service.updateSuscripcion(this.suscripcionUpdate).subscribe(\n      (data) => {\n        this.textoModal = \"¡Suscripción actualizada!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      },\n      (err) => {\n        this.textoModal = \"¡Error al actualizar!\";\n        this.modalService.open(modal, {\n          ariaLabelledBy: \"modal-basic-title\",\n          centered: true,\n          size: \"md\",\n        });\n      }\n    );\n  }\n\n  habilitarSuscripcion() {\n    this.mostrarSuscripcionAdd = true;\n    document.getElementById(\"plusSuscripcion\").hidden = true;\n    document.getElementById(\"minusSuscripcion\").hidden = false;\n  }\n\n  deshabilitarSuscripcion() {\n    this.mostrarSuscripcionAdd = false;\n    document.getElementById(\"plusSuscripcion\").hidden = false;\n    document.getElementById(\"minusSuscripcion\").hidden = true;\n  }\n\n  open(content, suscripcion: Suscripcion) {\n    this._service.getSuscripcion(suscripcion.id).subscribe((data) => {\n      this.suscripcionUpdate = data;\n      this.suscripcionUpdate.fechaAlta = this.datePipe.transform(this.suscripcionUpdate.fechaAlta, 'yyyy-MM-dd' /*'dd-MM-yyyy'*/);\n      this.suscripcionUpdate.fechaBaja = this.datePipe.transform(this.suscripcionUpdate.fechaBaja, 'yyyy-MM-dd' /*'dd-MM-yyyy'*/);\n    });\n    this.modalService\n      .open(content, { ariaLabelledBy: \"modal-basic-title\", centered: true })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  //abre modal confirm delete\n  openModalDelete(confirmDelete, suscripcion: Suscripcion) {\n    this.suscripcionAux = suscripcion;\n    this.modalService\n      .open(confirmDelete, {\n        ariaLabelledBy: \"modal-basic-title\",\n        centered: true,\n        size: \"md\",\n      })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n  filtrarTabla() {\n    this.filterTabla = [];\n    for (let suscripcion of this.mainTablaSuscripciones) {\n\n      if (\n        suscripcion.usuario.nombre.toLocaleLowerCase() ==\n        this.filterName.toLocaleLowerCase()\n      ) {\n        this.filterTabla.push(suscripcion);\n      }\n    }\n    if (this.filterTabla.length > 0) {\n      this.suscripciones = this.filterTabla;\n    } else {\n      this.suscripciones = this.mainTablaSuscripciones;\n    }\n  }\n\n  quitarFiltroTabla() {\n    this.suscripciones = this.mainTablaSuscripciones;\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n  //private baseUrl = 'http://82.223.29.132:4000';\n  private baseUrl = 'http://uploads.filscentergym.com';\n\n  constructor(private http: HttpClient) { }\n\n  upload(file: File): Observable<HttpEvent<any>> {\n    const formData: FormData = new FormData();\n\n    formData.append('file', file);\n\n    const req = new HttpRequest('POST', `${this.baseUrl}/upload`, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n\n    return this.http.request(req);\n  }\n\n  getFiles(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/files`);\n  }\n\n  deleteFile(fileName:string): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/delete/${fileName}`);\n  }\n}"]}